{
  "version": 3,
  "sources": ["../../node_modules/clipboard/dist/clipboard.js", "../../src/apps/chapterLate/codeHighlights/vendor/prism/prism.js", "../../src/apps/chapterLate/codeHighlights/codeHighlights.js", "../../src/apps/chapterLate/layout/anchorLinks.js", "../../src/apps/chapterLate/layout/scrollToAnchor.js", "../../node_modules/katex/dist/katex.mjs", "../../node_modules/katex/dist/contrib/auto-render.mjs", "../../src/apps/chapterLate/layout/renderLatex.js", "../../src/apps/chapterLate/menus/highlightCurrentPositionInTOC.js", "../../src/apps/chapterLate/menus/jumpToTop.js", "../../src/apps/chapterLate/menus/generateCurrentChapterTOC.js", "../../src/apps/chapterLate/chapterLate.js"],
  "sourcesContent": ["/*!\n * clipboard.js v2.0.8\n * https://clipboardjs.com/\n *\n * Licensed MIT \u00A9 Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 134:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ clipboard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(279);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(370);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(817);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n;// CONCATENATED MODULE: ./src/clipboard-action.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\n\nvar ClipboardAction = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options\n   */\n  function ClipboardAction(options) {\n    _classCallCheck(this, ClipboardAction);\n\n    this.resolveOptions(options);\n    this.initSelection();\n  }\n  /**\n   * Defines base properties passed from constructor.\n   * @param {Object} options\n   */\n\n\n  _createClass(ClipboardAction, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = options.action;\n      this.container = options.container;\n      this.emitter = options.emitter;\n      this.target = options.target;\n      this.text = options.text;\n      this.trigger = options.trigger;\n      this.selectedText = '';\n    }\n    /**\n     * Decides which selection strategy is going to be applied based\n     * on the existence of `text` and `target` properties.\n     */\n\n  }, {\n    key: \"initSelection\",\n    value: function initSelection() {\n      if (this.text) {\n        this.selectFake();\n      } else if (this.target) {\n        this.selectTarget();\n      }\n    }\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     */\n\n  }, {\n    key: \"createFakeElement\",\n    value: function createFakeElement() {\n      var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n      this.fakeElem = document.createElement('textarea'); // Prevent zooming on iOS\n\n      this.fakeElem.style.fontSize = '12pt'; // Reset box model\n\n      this.fakeElem.style.border = '0';\n      this.fakeElem.style.padding = '0';\n      this.fakeElem.style.margin = '0'; // Move element out of screen horizontally\n\n      this.fakeElem.style.position = 'absolute';\n      this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n      var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n      this.fakeElem.style.top = \"\".concat(yPosition, \"px\");\n      this.fakeElem.setAttribute('readonly', '');\n      this.fakeElem.value = this.text;\n      return this.fakeElem;\n    }\n    /**\n     * Get's the value of fakeElem,\n     * and makes a selection on it.\n     */\n\n  }, {\n    key: \"selectFake\",\n    value: function selectFake() {\n      var _this = this;\n\n      var fakeElem = this.createFakeElement();\n\n      this.fakeHandlerCallback = function () {\n        return _this.removeFake();\n      };\n\n      this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n      this.container.appendChild(fakeElem);\n      this.selectedText = select_default()(fakeElem);\n      this.copyText();\n      this.removeFake();\n    }\n    /**\n     * Only removes the fake element after another click event, that way\n     * a user can hit `Ctrl+C` to copy because selection still exists.\n     */\n\n  }, {\n    key: \"removeFake\",\n    value: function removeFake() {\n      if (this.fakeHandler) {\n        this.container.removeEventListener('click', this.fakeHandlerCallback);\n        this.fakeHandler = null;\n        this.fakeHandlerCallback = null;\n      }\n\n      if (this.fakeElem) {\n        this.container.removeChild(this.fakeElem);\n        this.fakeElem = null;\n      }\n    }\n    /**\n     * Selects the content from element passed on `target` property.\n     */\n\n  }, {\n    key: \"selectTarget\",\n    value: function selectTarget() {\n      this.selectedText = select_default()(this.target);\n      this.copyText();\n    }\n    /**\n     * Executes the copy operation based on the current selection.\n     */\n\n  }, {\n    key: \"copyText\",\n    value: function copyText() {\n      var succeeded;\n\n      try {\n        succeeded = document.execCommand(this.action);\n      } catch (err) {\n        succeeded = false;\n      }\n\n      this.handleResult(succeeded);\n    }\n    /**\n     * Fires an event based on the copy operation result.\n     * @param {Boolean} succeeded\n     */\n\n  }, {\n    key: \"handleResult\",\n    value: function handleResult(succeeded) {\n      this.emitter.emit(succeeded ? 'success' : 'error', {\n        action: this.action,\n        text: this.selectedText,\n        trigger: this.trigger,\n        clearSelection: this.clearSelection.bind(this)\n      });\n    }\n    /**\n     * Moves focus away from `target` and back to the trigger, removes current selection.\n     */\n\n  }, {\n    key: \"clearSelection\",\n    value: function clearSelection() {\n      if (this.trigger) {\n        this.trigger.focus();\n      }\n\n      document.activeElement.blur();\n      window.getSelection().removeAllRanges();\n    }\n    /**\n     * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n     * @param {String} action\n     */\n\n  }, {\n    key: \"destroy\",\n\n    /**\n     * Destroy lifecycle.\n     */\n    value: function destroy() {\n      this.removeFake();\n    }\n  }, {\n    key: \"action\",\n    set: function set() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n      this._action = action;\n\n      if (this._action !== 'copy' && this._action !== 'cut') {\n        throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n      }\n    }\n    /**\n     * Gets the `action` property.\n     * @return {String}\n     */\n    ,\n    get: function get() {\n      return this._action;\n    }\n    /**\n     * Sets the `target` property using an element\n     * that will be have its content copied.\n     * @param {Element} target\n     */\n\n  }, {\n    key: \"target\",\n    set: function set(target) {\n      if (target !== undefined) {\n        if (target && _typeof(target) === 'object' && target.nodeType === 1) {\n          if (this.action === 'copy' && target.hasAttribute('disabled')) {\n            throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n          }\n\n          if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n            throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n          }\n\n          this._target = target;\n        } else {\n          throw new Error('Invalid \"target\" value, use a valid Element');\n        }\n      }\n    }\n    /**\n     * Gets the `target` property.\n     * @return {String|HTMLElement}\n     */\n    ,\n    get: function get() {\n      return this._target;\n    }\n  }]);\n\n  return ClipboardAction;\n}();\n\n/* harmony default export */ var clipboard_action = (ClipboardAction);\n;// CONCATENATED MODULE: ./src/clipboard.js\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\n\nfunction clipboard_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction clipboard_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction clipboard_createClass(Constructor, protoProps, staticProps) { if (protoProps) clipboard_defineProperties(Constructor.prototype, protoProps); if (staticProps) clipboard_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\nfunction getAttributeValue(suffix, element) {\n  var attribute = \"data-clipboard-\".concat(suffix);\n\n  if (!element.hasAttribute(attribute)) {\n    return;\n  }\n\n  return element.getAttribute(attribute);\n}\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\n\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\n  _inherits(Clipboard, _Emitter);\n\n  var _super = _createSuper(Clipboard);\n\n  /**\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n   * @param {Object} options\n   */\n  function Clipboard(trigger, options) {\n    var _this;\n\n    clipboard_classCallCheck(this, Clipboard);\n\n    _this = _super.call(this);\n\n    _this.resolveOptions(options);\n\n    _this.listenClick(trigger);\n\n    return _this;\n  }\n  /**\n   * Defines if attributes would be resolved using internal setter functions\n   * or custom functions that were passed in the constructor.\n   * @param {Object} options\n   */\n\n\n  clipboard_createClass(Clipboard, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n    }\n    /**\n     * Adds a click event listener to the passed trigger.\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     */\n\n  }, {\n    key: \"listenClick\",\n    value: function listenClick(trigger) {\n      var _this2 = this;\n\n      this.listener = listen_default()(trigger, 'click', function (e) {\n        return _this2.onClick(e);\n      });\n    }\n    /**\n     * Defines a new `ClipboardAction` on each click event.\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      var trigger = e.delegateTarget || e.currentTarget;\n\n      if (this.clipboardAction) {\n        this.clipboardAction = null;\n      }\n\n      this.clipboardAction = new clipboard_action({\n        action: this.action(trigger),\n        target: this.target(trigger),\n        text: this.text(trigger),\n        container: this.container,\n        trigger: trigger,\n        emitter: this\n      });\n    }\n    /**\n     * Default `action` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultAction\",\n    value: function defaultAction(trigger) {\n      return getAttributeValue('action', trigger);\n    }\n    /**\n     * Default `target` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultTarget\",\n    value: function defaultTarget(trigger) {\n      var selector = getAttributeValue('target', trigger);\n\n      if (selector) {\n        return document.querySelector(selector);\n      }\n    }\n    /**\n     * Returns the support of the given action, or all actions if no action is\n     * given.\n     * @param {String} [action]\n     */\n\n  }, {\n    key: \"defaultText\",\n\n    /**\n     * Default `text` lookup function.\n     * @param {Element} trigger\n     */\n    value: function defaultText(trigger) {\n      return getAttributeValue('text', trigger);\n    }\n    /**\n     * Destroy lifecycle.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.listener.destroy();\n\n      if (this.clipboardAction) {\n        this.clipboardAction.destroy();\n        this.clipboardAction = null;\n      }\n    }\n  }], [{\n    key: \"isSupported\",\n    value: function isSupported() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n      var actions = typeof action === 'string' ? [action] : action;\n      var support = !!document.queryCommandSupported;\n      actions.forEach(function (action) {\n        support = support && !!document.queryCommandSupported(action);\n      });\n      return support;\n    }\n  }]);\n\n  return Clipboard;\n}((tiny_emitter_default()));\n\n/* harmony default export */ var clipboard = (Clipboard);\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar closest = __webpack_require__(828);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(__unused_webpack_module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar is = __webpack_require__(879);\nvar delegate = __webpack_require__(438);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(134);\n/******/ })()\n.default;\n});", "/* PrismJS 1.20.0\nhttps://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+c+css-extras+glsl+js-extras+js-templates&plugins=line-highlight+line-numbers+wpd+inline-color+normalize-whitespace+toolbar+copy-to-clipboard+match-braces */\n/// <reference lib=\"WebWorker\"/>\n\nimport ClipboardJS from 'clipboard';\n\nvar _self =\n  typeof window !== 'undefined'\n    ? window // if in browser\n    : typeof WorkerGlobalScope !== 'undefined' &&\n      self instanceof WorkerGlobalScope\n    ? self // if in worker\n    : {}; // if in node js\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nexport default Prism = (function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler:\n      _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(\n            tokens.type,\n            encode(tokens.content),\n            tokens.alias,\n          );\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function (o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function (obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', { value: ++uniqueId });\n        }\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n\n        var clone, id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */ ({});\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return /** @type {any} */ (clone);\n\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */ (/** @type {any} */ (o)).forEach(\n              function (v, i) {\n                clone[i] = deepClone(v, visited);\n              },\n            );\n\n            return /** @type {any} */ (clone);\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function (element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n        if (element) {\n          return (element.className.match(lang) || [\n            ,\n            'none',\n          ])[1].toLowerCase();\n        }\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function () {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n        if (\n          'currentScript' in document &&\n          1 < 2 /* hack to trip TS' flow analysis */\n        ) {\n          return /** @type {any} */ (document.currentScript);\n        }\n\n        // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) ||\n            [])[1];\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function (element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      },\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || /** @type {any} */ (_.languages);\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n              propertyType = _.util.type(property);\n\n            if (\n              propertyType === 'Object' &&\n              !visited[objId(property)]\n            ) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (\n              propertyType === 'Array' &&\n              !visited[objId(property)]\n            ) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      },\n    },\n\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism\u2019s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function (async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function (container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector:\n          'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code',\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(\n        env.container.querySelectorAll(env.selector),\n      );\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; (element = env.elements[i++]); ) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will only be run by the current worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function (element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n      var grammar = _.languages[language];\n\n      // Set language on the element, if not present\n      element.className =\n        element.className.replace(lang, '').replace(/\\s+/g, ' ') +\n        ' language-' +\n        language;\n\n      // Set language on the parent, for styling\n      var parent = element.parentElement;\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className =\n          parent.className.replace(lang, '').replace(/\\s+/g, ' ') +\n          ' language-' +\n          language;\n      }\n\n      var code = element.textContent;\n\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code,\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(\n          JSON.stringify({\n            language: env.language,\n            code: env.code,\n            immediateClose: true,\n          }),\n        );\n      } else {\n        insertHighlightedCode(\n          _.highlight(env.code, env.grammar, env.language),\n        );\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you\u2019re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language,\n      };\n      _.hooks.run('before-tokenize', env);\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function (text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function (name, callback) {\n        var hooks = _.hooks.all;\n\n        hooks[name] = hooks[name] || [];\n\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function (name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; (callback = callbacks[i++]); ) {\n          callback(env);\n        }\n      },\n    },\n\n    Token: Token,\n  };\n  _self.Prism = _;\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language,\n    };\n\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes +=\n        ' ' +\n        name +\n        '=\"' +\n        (env.attributes[name] || '').replace(/\"/g, '&quot;') +\n        '\"';\n    }\n\n    return (\n      '<' +\n      env.tag +\n      ' class=\"' +\n      env.classes.join(' ') +\n      '\"' +\n      attributes +\n      '>' +\n      env.content +\n      '</' +\n      env.tag +\n      '>'\n    );\n  };\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(\n    text,\n    tokenList,\n    grammar,\n    startNode,\n    startPos,\n    rematch,\n  ) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j],\n          inside = patternObj.inside,\n          lookbehind = !!patternObj.lookbehind,\n          greedy = !!patternObj.greedy,\n          lookbehindLength = 0,\n          alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern\n            .toString()\n            .match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(\n            patternObj.pattern.source,\n            flags + 'g',\n          );\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n\n        for (\n          // iterate the token list and keep track of the current token/string position\n          var currentNode = startNode.next, pos = startPos;\n          currentNode !== tokenList.tail;\n          pos += currentNode.value.length,\n            currentNode = currentNode.next\n        ) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          if (greedy && currentNode != tokenList.tail.prev) {\n            pattern.lastIndex = pos;\n            var match = pattern.exec(text);\n            if (!match) {\n              break;\n            }\n\n            var from =\n              match.index +\n              (lookbehind && match[1] ? match[1].length : 0);\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (\n              var k = currentNode;\n              k !== tokenList.tail &&\n              (p < to || typeof k.value === 'string');\n              k = k.next\n            ) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            pattern.lastIndex = 0;\n\n            var match = pattern.exec(str);\n          }\n\n          if (!match) {\n            continue;\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0;\n          }\n\n          var from = match.index + lookbehindLength,\n            matchStr = match[0].slice(lookbehindLength),\n            to = from + matchStr.length,\n            before = str.slice(0, from),\n            after = str.slice(to);\n\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n\n          var wrapped = new Token(\n            token,\n            inside ? _.tokenize(matchStr, inside) : matchStr,\n            alias,\n            matchStr,\n          );\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n            matchGrammar(\n              text,\n              tokenList,\n              grammar,\n              currentNode.prev,\n              pos,\n              {\n                cause: token + ',' + j,\n                reach: reach,\n              },\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = { value: null, prev: null, next: null };\n    /** @type {LinkedListNode<T>} */\n    var tail = { value: null, prev: head, next: null };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n\n    var newNode = { value: value, prev: node, next: next };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener(\n        'message',\n        function (evt) {\n          var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n          _self.postMessage(\n            _.highlight(code, _.languages[lang], lang),\n          );\n          if (immediateClose) {\n            _self.close();\n          }\n        },\n        false,\n      );\n    }\n\n    return _;\n  }\n\n  // Get current script and highlight\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n    if (\n      readyState === 'loading' ||\n      (readyState === 'interactive' && script && script.defer)\n    ) {\n      document.addEventListener(\n        'DOMContentLoaded',\n        highlightAutomaticallyCallback,\n      );\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\nPrism.languages.markup = {\n  comment: /<!--[\\s\\S]*?-->/,\n  prolog: /<\\?[\\s\\S]+?\\?>/,\n  doctype: {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null, // see below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true,\n      },\n      punctuation: /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      name: /[^\\s<>'\"]+/,\n    },\n  },\n  cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  tag: {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[^\\s>\\/:]+:/,\n        },\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          punctuation: [\n            {\n              pattern: /^=/,\n              alias: 'attr-equals',\n            },\n            /\"|'/,\n          ],\n        },\n      },\n      punctuation: /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          namespace: /^[^\\s>\\/:]+:/,\n        },\n      },\n    },\n  },\n  entity: [\n    {\n      pattern: /&[\\da-z]{1,8};/i,\n      alias: 'named-entity',\n    },\n    /&#x?[\\da-f]{1,8};/i,\n  ],\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n  Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside =\n  Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang],\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside,\n      },\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang],\n    };\n\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(\n        /(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n          /__/g,\n          function () {\n            return tagName;\n          },\n        ),\n        'i',\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: inside,\n    };\n\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  },\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n  Prism.languages.css = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\//,\n    atrule: {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        rule: /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector',\n        },\n        keyword: {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true,\n        },\n        // See rest below\n      },\n    },\n    url: {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp(\n        '\\\\burl\\\\((?:' +\n          string.source +\n          '|' +\n          /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n          ')\\\\)',\n        'i',\n      ),\n      greedy: true,\n      inside: {\n        function: /^url/i,\n        punctuation: /^\\(|\\)$/,\n        string: {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url',\n        },\n      },\n    },\n    selector: RegExp(\n      '[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)',\n    ),\n    string: {\n      pattern: string,\n      greedy: true,\n    },\n    property: /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    important: /!important\\b/i,\n    function: /[-a-z0-9]+(?=\\()/i,\n    punctuation: /[(){};:,]/,\n  };\n\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'style-attr': {\n          pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n          inside: {\n            'attr-name': {\n              pattern: /^\\s*style/i,\n              inside: markup.tag.inside,\n            },\n            punctuation: /^\\s*=\\s*['\"]|['\"]\\s*$/,\n            'attr-value': {\n              pattern: /.+/i,\n              inside: Prism.languages.css,\n            },\n          },\n          alias: 'language-css',\n        },\n      },\n      markup.tag,\n    );\n  }\n})(Prism);\n\nPrism.languages.clike = {\n  comment: [\n    {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n    },\n    {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true,\n    },\n  ],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/,\n    },\n  },\n  keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: /\\w+(?=\\()/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  punctuation: /[{}[\\];(),.:]/,\n};\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [\n    Prism.languages.clike['class-name'],\n    {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true,\n    },\n  ],\n  keyword: [\n    {\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true,\n    },\n    {\n      pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true,\n    },\n  ],\n  number: /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  function: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n});\n\nPrism.languages.javascript[\n  'class-name'\n][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n  regex: {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function',\n  },\n  parameter: [\n    {\n      pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n  ],\n  constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/,\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string',\n      },\n      interpolation: {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation',\n          },\n          rest: Prism.languages.javascript,\n        },\n      },\n      string: /[\\s\\S]+/,\n    },\n  },\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  comment: {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true,\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+/,\n    lookbehind: true,\n  },\n  keyword: /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  function: /[a-z_]\\w*(?=\\s*\\()/i,\n  operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  number: /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i,\n});\n\nPrism.languages.insertBefore('c', 'string', {\n  macro: {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      string: [\n        {\n          // highlight the path of the include statement as a string\n          pattern: /^(#\\s*include\\s*)<[^>]+>/,\n          lookbehind: true,\n        },\n        Prism.languages.c['string'],\n      ],\n      comment: Prism.languages.c['comment'],\n      // highlight macro directives as keywords\n      directive: {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword',\n      },\n      'directive-hash': /^#/,\n      punctuation: /##|\\\\(?=[\\r\\n])/,\n      expression: {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c,\n      },\n    },\n  },\n  // highlight predefined macros as constants\n  constant: /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/,\n});\n\ndelete Prism.languages.c['boolean'];\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: (selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      class: /\\.[-\\w]+/,\n      id: /#[-\\w]+/,\n      attribute: {\n        pattern: RegExp(\n          '\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]',\n        ),\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword',\n          },\n          namespace: {\n            pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\|$/,\n            },\n          },\n          'attr-name': {\n            pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n            lookbehind: true,\n          },\n          'attr-value': [\n            string,\n            {\n              pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n              lookbehind: true,\n            },\n          ],\n          operator: /[|~*^$]?=/,\n        },\n      },\n      'n-th': [\n        {\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/,\n          },\n        },\n        {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true,\n        },\n      ],\n      combinator: />|\\+|~|\\|\\|/,\n\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\n      punctuation: /[(),]/,\n    }),\n  };\n\n  Prism.languages.css['atrule'].inside[\n    'selector-function-argument'\n  ].inside = selectorInside;\n\n  Prism.languages.insertBefore('css', 'property', {\n    variable: {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n      lookbehind: true,\n    },\n  });\n\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true,\n  };\n  // 123 -123 .123 -.123 12.3 -12.3\n  var number = {\n    pattern: /(^|[^\\w.-])-?\\d*\\.?\\d+/,\n    lookbehind: true,\n  };\n\n  Prism.languages.insertBefore('css', 'function', {\n    operator: {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true,\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    hexcode: {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color',\n    },\n    color: [\n      /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n      {\n        pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n        inside: {\n          unit: unit,\n          number: number,\n          function: /[\\w-]+(?=\\()/,\n          punctuation: /[(),]/,\n        },\n      },\n    ],\n    // it's important that there is no boundary assertion after the hex digits\n    entity: /\\\\[\\da-f]{1,8}/i,\n    unit: unit,\n    number: number,\n  });\n})(Prism);\n\nPrism.languages.glsl = Prism.languages.extend('c', {\n  keyword: /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/,\n});\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp(\n        '(\\\\.\\\\s*)' +\n          Prism.languages.javascript['function-variable'].pattern\n            .source,\n      ),\n      lookbehind: true,\n      alias: [\n        'function-variable',\n        'method',\n        'function',\n        'property-access',\n      ],\n    },\n  });\n\n  Prism.languages.insertBefore('javascript', 'function', {\n    method: {\n      pattern: RegExp(\n        '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source,\n      ),\n      lookbehind: true,\n      alias: ['function', 'property-access'],\n    },\n  });\n\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [\n      {\n        // standard built-ins\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n        pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n        alias: 'class-name',\n      },\n      {\n        // errors\n        pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n        alias: 'class-name',\n      },\n    ],\n  });\n\n  Prism.languages.javascript['keyword'].unshift(\n    {\n      pattern: /\\b(?:as|default|export|from|import)\\b/,\n      alias: 'module',\n    },\n    {\n      pattern: /\\bnull\\b/,\n      alias: ['null', 'nil'],\n    },\n    {\n      pattern: /\\bundefined\\b/,\n      alias: 'nil',\n    },\n  );\n\n  Prism.languages.insertBefore('javascript', 'operator', {\n    spread: {\n      pattern: /\\.{3}/,\n      alias: 'operator',\n    },\n    arrow: {\n      pattern: /=>/,\n      alias: 'operator',\n    },\n  });\n\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true,\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true,\n    },\n    dom: {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable',\n    },\n    console: {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name',\n    },\n  });\n\n  // add 'maybe-class-name' to tokens which might be a class name\n  var maybeClassNameTokens = [\n    'function',\n    'function-variable',\n    'method',\n    'method-variable',\n    'property-access',\n  ];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token];\n\n    // convert regex to object\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value,\n      };\n    }\n\n    // keep in mind that we don't support arrays\n\n    var inside = value.inside || {};\n    value.inside = inside;\n\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string'];\n\n  // see the pattern in prism-javascript.js\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject =\n    interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp(\n        '((?:' + tag + ')\\\\s*)' + templateLiteralPattern,\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string',\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language,\n        },\n      },\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [\n    // styled-jsx:\n    //   css`a { color: #25F; }`\n    // styled-components:\n    //   styled.h1`color: red;`\n    createTemplate(\n      'css',\n      /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n        .source,\n    ),\n\n    // html`<p></p>`\n    // div.innerHTML = `<p></p>`\n    createTemplate(\n      'html',\n      /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source,\n    ),\n\n    // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n    createTemplate('svg', /\\bsvg/.source),\n\n    // md`# h1`, markdown`## h2`\n    createTemplate('markdown', /\\b(?:md|markdown)/.source),\n\n    // gql`...`, graphql`...`, graphql.experimental`...`\n    createTemplate(\n      'graphql',\n      /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source,\n    ),\n\n    // vanilla template string\n    templateString,\n  ].filter(Boolean);\n\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language,\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar[\n      'interpolation-punctuation'\n    ] = interpolationPunctuationObject;\n\n    /** @type {Array} */\n    var tokens = Prism.tokenize(expression, tempGrammar);\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n\n      var args = [1, 1];\n      args.push.apply(\n        args,\n        tokenizeWithHooks(\n          tokens[1],\n          Prism.languages.javascript,\n          'javascript',\n        ),\n      );\n\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token(\n      'interpolation',\n      tokens,\n      interpolationObject.alias,\n      expression,\n    );\n  }\n\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n\n    // because they might be escaped, we need a lookbehind, so we use Prism\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      interpolation: {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true,\n      },\n    });\n\n    // replace all interpolations with a placeholder which is not in the code already\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n    var placeholderMap = {};\n    var embeddedCode = _tokens\n      .map(function (token) {\n        if (typeof token === 'string') {\n          return token;\n        } else {\n          var interpolationExpression = token.content;\n\n          var placeholder;\n          while (\n            code.indexOf(\n              (placeholder = getPlaceholder(\n                placeholderCounter++,\n                language,\n              )),\n            ) !== -1\n          ) {}\n          placeholderMap[placeholder] = interpolationExpression;\n          return placeholder;\n        }\n      })\n      .join('');\n\n    // 2. Tokenize the embedded code\n\n    var embeddedTokens = tokenizeWithHooks(\n      embeddedCode,\n      grammar,\n      language,\n    );\n\n    // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (\n          typeof token === 'string' ||\n          typeof token.content === 'string'\n        ) {\n          var placeholder = placeholders[placeholderCounter];\n          var s =\n            typeof token === 'string'\n              ? token\n              : /** @type {string} */ (token.content);\n\n          var index = s.indexOf(placeholder);\n          if (index !== -1) {\n            ++placeholderCounter;\n\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(\n              placeholderMap[placeholder],\n            );\n            var after = s.substring(index + placeholder.length);\n\n            var replacement = [];\n            if (before) {\n              replacement.push(before);\n            }\n            replacement.push(middle);\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n    walkTokens(embeddedTokens);\n\n    return new Prism.Token(\n      language,\n      embeddedTokens,\n      'language-' + language,\n      code,\n    );\n  }\n\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n  var supportedLanguages = {\n    javascript: true,\n    js: true,\n    typescript: true,\n    ts: true,\n    jsx: true,\n    tsx: true,\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n\n          var embedded = content[1];\n          if (\n            content.length === 3 &&\n            typeof embedded !== 'string' &&\n            embedded.type === 'embedded-code'\n          ) {\n            // get string content\n            var code = stringContent(embedded);\n\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n\n            var grammar = Prism.languages[language];\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n\n(function () {\n  if (\n    typeof self === 'undefined' ||\n    !self.Prism ||\n    !self.document ||\n    !document.querySelector\n  ) {\n    return;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {ParentNode} [container]\n   * @returns {HTMLElement[]}\n   */\n  function $$(selector, container) {\n    return Array.prototype.slice.call(\n      (container || document).querySelectorAll(selector),\n    );\n  }\n\n  /**\n   * Returns whether the given element has the given class.\n   *\n   * @param {Element} element\n   * @param {string} className\n   * @returns {boolean}\n   */\n  function hasClass(element, className) {\n    className = ' ' + className + ' ';\n    return (\n      (' ' + element.className + ' ')\n        .replace(/[\\n\\t]/g, ' ')\n        .indexOf(className) > -1\n    );\n  }\n\n  /**\n   * Calls the given function.\n   *\n   * @param {() => any} func\n   * @returns {void}\n   */\n  function callFunction(func) {\n    func();\n  }\n\n  // Some browsers round the line-height, others don't.\n  // We need to test for it to position the elements properly.\n  var isLineHeightRounded = (function () {\n    var res;\n    return function () {\n      if (typeof res === 'undefined') {\n        var d = document.createElement('div');\n        d.style.fontSize = '13px';\n        d.style.lineHeight = '1.5';\n        d.style.padding = '0';\n        d.style.border = '0';\n        d.innerHTML = '&nbsp;<br />&nbsp;';\n        document.body.appendChild(d);\n        // Browsers that round the line-height should have offsetHeight === 38\n        // The others should have 39.\n        res = d.offsetHeight === 38;\n        document.body.removeChild(d);\n      }\n      return res;\n    };\n  })();\n\n  /**\n   * Highlights the lines of the given pre.\n   *\n   * This function is split into a DOM measuring and mutate phase to improve performance.\n   * The returned function mutates the DOM when called.\n   *\n   * @param {HTMLElement} pre\n   * @param {string} [lines]\n   * @param {string} [classes='']\n   * @returns {() => void}\n   */\n  function highlightLines(pre, lines, classes) {\n    lines =\n      typeof lines === 'string'\n        ? lines\n        : pre.getAttribute('data-line');\n\n    var ranges = lines.replace(/\\s+/g, '').split(',').filter(Boolean);\n    var offset = +pre.getAttribute('data-line-offset') || 0;\n\n    var parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\n    var lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\n    var hasLineNumbers = hasClass(pre, 'line-numbers');\n    var parentElement = hasLineNumbers\n      ? pre\n      : pre.querySelector('code') || pre;\n    var mutateActions = /** @type {(() => void)[]} */ ([]);\n\n    ranges.forEach(function (currentRange) {\n      var range = currentRange.split('-');\n\n      var start = +range[0];\n      var end = +range[1] || start;\n\n      /** @type {HTMLElement} */\n      var line =\n        pre.querySelector(\n          '.line-highlight[data-range=\"' + currentRange + '\"]',\n        ) || document.createElement('div');\n\n      mutateActions.push(function () {\n        line.setAttribute('aria-hidden', 'true');\n        line.setAttribute('data-range', currentRange);\n        line.className = (classes || '') + ' line-highlight';\n      });\n\n      // if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\n      if (hasLineNumbers && Prism.plugins.lineNumbers) {\n        var startNode = Prism.plugins.lineNumbers.getLine(pre, start);\n        var endNode = Prism.plugins.lineNumbers.getLine(pre, end);\n\n        if (startNode) {\n          var top = startNode.offsetTop + 'px';\n          mutateActions.push(function () {\n            line.style.top = top;\n          });\n        }\n\n        if (endNode) {\n          var height =\n            endNode.offsetTop -\n            startNode.offsetTop +\n            endNode.offsetHeight +\n            'px';\n          mutateActions.push(function () {\n            line.style.height = height;\n          });\n        }\n      } else {\n        mutateActions.push(function () {\n          line.setAttribute('data-start', start);\n\n          if (end > start) {\n            line.setAttribute('data-end', end);\n          }\n\n          line.style.top = (start - offset - 1) * lineHeight + 'px';\n\n          line.textContent = new Array(end - start + 2).join(' \\n');\n        });\n      }\n\n      mutateActions.push(function () {\n        // allow this to play nicely with the line-numbers plugin\n        // need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\n        parentElement.appendChild(line);\n      });\n    });\n\n    var id = pre.id;\n    if (hasLineNumbers && id) {\n      // This implements linkable line numbers. Linkable line numbers use Line Highlight to create a link to a\n      // specific line. For this to work, the pre element has to:\n      //  1) have line numbers,\n      //  2) have the `linkable-line-numbers` class or an ascendant that has that class, and\n      //  3) have an id.\n\n      var linkableLineNumbersClass = 'linkable-line-numbers';\n      var linkableLineNumbers = false;\n      var node = pre;\n      while (node) {\n        if (hasClass(node, linkableLineNumbersClass)) {\n          linkableLineNumbers = true;\n          break;\n        }\n        node = node.parentElement;\n      }\n\n      if (linkableLineNumbers) {\n        if (!hasClass(pre, linkableLineNumbersClass)) {\n          // add class to pre\n          mutateActions.push(function () {\n            pre.className = (\n              pre.className +\n              ' ' +\n              linkableLineNumbersClass\n            ).trim();\n          });\n        }\n\n        var start = parseInt(pre.getAttribute('data-start') || '1');\n\n        // iterate all line number spans\n        $$('.line-numbers-rows > span', pre).forEach(function (\n          lineSpan,\n          i,\n        ) {\n          var lineNumber = i + start;\n          lineSpan.onclick = function () {\n            var hash = id + '.' + lineNumber;\n\n            // this will prevent scrolling since the span is obviously in view\n            scrollIntoView = false;\n            location.hash = hash;\n            setTimeout(function () {\n              scrollIntoView = true;\n            }, 1);\n          };\n        });\n      }\n    }\n\n    return function () {\n      mutateActions.forEach(callFunction);\n    };\n  }\n\n  var scrollIntoView = true;\n  function applyHash() {\n    var hash = location.hash.slice(1);\n\n    // Remove pre-existing temporary lines\n    $$('.temporary.line-highlight').forEach(function (line) {\n      line.parentNode.removeChild(line);\n    });\n\n    var range = (hash.match(/\\.([\\d,-]+)$/) || [, ''])[1];\n\n    if (!range || document.getElementById(hash)) {\n      return;\n    }\n\n    var id = hash.slice(0, hash.lastIndexOf('.')),\n      pre = document.getElementById(id);\n\n    if (!pre) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-line')) {\n      pre.setAttribute('data-line', '');\n    }\n\n    var mutateDom = highlightLines(pre, range, 'temporary ');\n    mutateDom();\n\n    if (scrollIntoView) {\n      document\n        .querySelector('.temporary.line-highlight')\n        .scrollIntoView();\n    }\n  }\n\n  var fakeTimer = 0; // Hack to limit the number of times applyHash() runs\n\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre = env.element.parentNode;\n    var lines = pre && pre.getAttribute('data-line');\n\n    if (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    /*\n     * Cleanup for other plugins (e.g. autoloader).\n     *\n     * Sometimes <code> blocks are highlighted multiple times. It is necessary\n     * to cleanup any left-over tags, because the whitespace inside of the <div>\n     * tags change the content of the <code> tag.\n     */\n    var num = 0;\n    $$('.line-highlight', pre).forEach(function (line) {\n      num += line.textContent.length;\n      line.parentNode.removeChild(line);\n    });\n    // Remove extra whitespace\n    if (num && /^( \\n)+$/.test(env.code.slice(-num))) {\n      env.code = env.code.slice(0, -num);\n    }\n  });\n\n  Prism.hooks.add('complete', function completeHook(env) {\n    var pre = env.element.parentNode;\n    var lines = pre && pre.getAttribute('data-line');\n\n    if (!pre || !lines || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    clearTimeout(fakeTimer);\n\n    var hasLineNumbers = Prism.plugins.lineNumbers;\n    var isLineNumbersLoaded = env.plugins && env.plugins.lineNumbers;\n\n    if (\n      hasClass(pre, 'line-numbers') &&\n      hasLineNumbers &&\n      !isLineNumbersLoaded\n    ) {\n      Prism.hooks.add('line-numbers', completeHook);\n    } else {\n      var mutateDom = highlightLines(pre, lines);\n      mutateDom();\n      fakeTimer = setTimeout(applyHash, 1);\n    }\n  });\n\n  window.addEventListener('hashchange', applyHash);\n  window.addEventListener('resize', function () {\n    var actions = $$('pre[data-line]').map(function (pre) {\n      return highlightLines(pre);\n    });\n    actions.forEach(callFunction);\n  });\n})();\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  /**\n   * Plugin name which is used as a class name for <pre> which is activating the plugin\n   * @type {String}\n   */\n  var PLUGIN_NAME = 'line-numbers';\n\n  /**\n   * Regular expression used for determining line breaks\n   * @type {RegExp}\n   */\n  var NEW_LINE_EXP = /\\n(?!$)/g;\n\n  /**\n   * Global exports\n   */\n  var config = (Prism.plugins.lineNumbers = {\n    /**\n     * Get node for provided line number\n     * @param {Element} element pre element\n     * @param {Number} number line number\n     * @return {Element|undefined}\n     */\n    getLine: function (element, number) {\n      if (\n        element.tagName !== 'PRE' ||\n        !element.classList.contains(PLUGIN_NAME)\n      ) {\n        return;\n      }\n\n      var lineNumberRows = element.querySelector(\n        '.line-numbers-rows',\n      );\n      var lineNumberStart =\n        parseInt(element.getAttribute('data-start'), 10) || 1;\n      var lineNumberEnd =\n        lineNumberStart + (lineNumberRows.children.length - 1);\n\n      if (number < lineNumberStart) {\n        number = lineNumberStart;\n      }\n      if (number > lineNumberEnd) {\n        number = lineNumberEnd;\n      }\n\n      var lineIndex = number - lineNumberStart;\n\n      return lineNumberRows.children[lineIndex];\n    },\n\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {HTMLElement} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function (element) {\n      resizeElements([element]);\n    },\n\n    /**\n     * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n     * the current viewport.\n     *\n     * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n     *\n     * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n     *\n     * @type {boolean}\n     */\n    assumeViewportIndependence: true,\n  });\n\n  /**\n   * Resizes the given elements.\n   *\n   * @param {HTMLElement[]} elements\n   */\n  function resizeElements(elements) {\n    elements = elements.filter(function (e) {\n      var codeStyles = getStyles(e);\n      var whiteSpace = codeStyles['white-space'];\n      return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n    });\n\n    if (elements.length == 0) {\n      return;\n    }\n\n    var infos = elements\n      .map(function (element) {\n        var codeElement = element.querySelector('code');\n        var lineNumbersWrapper = element.querySelector(\n          '.line-numbers-rows',\n        );\n        if (!codeElement || !lineNumbersWrapper) {\n          return undefined;\n        }\n\n        /** @type {HTMLElement} */\n        var lineNumberSizer = element.querySelector(\n          '.line-numbers-sizer',\n        );\n        var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n        if (!lineNumberSizer) {\n          lineNumberSizer = document.createElement('span');\n          lineNumberSizer.className = 'line-numbers-sizer';\n\n          codeElement.appendChild(lineNumberSizer);\n        }\n\n        lineNumberSizer.innerHTML = '0';\n        lineNumberSizer.style.display = 'block';\n\n        var oneLinerHeight = lineNumberSizer.getBoundingClientRect()\n          .height;\n        lineNumberSizer.innerHTML = '';\n\n        return {\n          element: element,\n          lines: codeLines,\n          lineHeights: [],\n          oneLinerHeight: oneLinerHeight,\n          sizer: lineNumberSizer,\n        };\n      })\n      .filter(Boolean);\n\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lines = info.lines;\n      var lineHeights = info.lineHeights;\n      var oneLinerHeight = info.oneLinerHeight;\n\n      lineHeights[lines.length - 1] = undefined;\n      lines.forEach(function (line, index) {\n        if (line && line.length > 1) {\n          var e = lineNumberSizer.appendChild(\n            document.createElement('span'),\n          );\n          e.style.display = 'block';\n          e.textContent = line;\n        } else {\n          lineHeights[index] = oneLinerHeight;\n        }\n      });\n    });\n\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lineHeights = info.lineHeights;\n\n      var childIndex = 0;\n      for (var i = 0; i < lineHeights.length; i++) {\n        if (lineHeights[i] === undefined) {\n          lineHeights[i] = lineNumberSizer.children[\n            childIndex++\n          ].getBoundingClientRect().height;\n        }\n      }\n    });\n\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var wrapper = info.element.querySelector('.line-numbers-rows');\n\n      lineNumberSizer.style.display = 'none';\n      lineNumberSizer.innerHTML = '';\n\n      info.lineHeights.forEach(function (height, lineNumber) {\n        wrapper.children[lineNumber].style.height = height + 'px';\n      });\n    });\n  }\n\n  /**\n   * Returns style declarations for the element\n   * @param {Element} element\n   */\n  var getStyles = function (element) {\n    if (!element) {\n      return null;\n    }\n\n    return window.getComputedStyle\n      ? getComputedStyle(element)\n      : element.currentStyle || null;\n  };\n\n  var lastWidth = undefined;\n  window.addEventListener('resize', function () {\n    if (\n      config.assumeViewportIndependence &&\n      lastWidth === window.innerWidth\n    ) {\n      return;\n    }\n    lastWidth = window.innerWidth;\n\n    resizeElements(\n      Array.prototype.slice.call(\n        document.querySelectorAll('pre.' + PLUGIN_NAME),\n      ),\n    );\n  });\n\n  Prism.hooks.add('complete', function (env) {\n    if (!env.code) {\n      return;\n    }\n\n    var code = /** @type {Element} */ (env.element);\n    var pre = /** @type {HTMLElement} */ (code.parentNode);\n\n    // works only for <code> wrapped inside <pre> (not inline)\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    // Abort if line numbers already exists\n    if (code.querySelector('.line-numbers-rows')) {\n      return;\n    }\n\n    // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n    if (!Prism.util.isActive(code, PLUGIN_NAME)) {\n      return;\n    }\n\n    // Remove the class 'line-numbers' from the <code>\n    code.classList.remove(PLUGIN_NAME);\n    // Add the class 'line-numbers' to the <pre>\n    pre.classList.add(PLUGIN_NAME);\n\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n\n    var lines = new Array(linesNum + 1).join('<span></span>');\n\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n      pre.style.counterReset =\n        'linenumber ' +\n        (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n\n    resizeElements([pre]);\n\n    Prism.hooks.run('line-numbers', env);\n  });\n\n  Prism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n  });\n})();\n\n(function () {\n  if (\n    (typeof self !== 'undefined' && !self.Prism) ||\n    (typeof global !== 'undefined' && !global.Prism)\n  ) {\n    return;\n  }\n\n  if (Prism.languages.css) {\n    // check whether the selector is an advanced pattern before extending it\n    if (Prism.languages.css.selector.pattern) {\n      Prism.languages.css.selector.inside['pseudo-class'] = /:[\\w-]+/;\n      Prism.languages.css.selector.inside[\n        'pseudo-element'\n      ] = /::[\\w-]+/;\n    } else {\n      Prism.languages.css.selector = {\n        pattern: Prism.languages.css.selector,\n        inside: {\n          'pseudo-class': /:[\\w-]+/,\n          'pseudo-element': /::[\\w-]+/,\n        },\n      };\n    }\n  }\n\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.inside.tag.inside['tag-id'] = /[\\w-]+/;\n\n    var Tags = {\n      HTML: {\n        a: 1,\n        abbr: 1,\n        acronym: 1,\n        b: 1,\n        basefont: 1,\n        bdo: 1,\n        big: 1,\n        blink: 1,\n        cite: 1,\n        code: 1,\n        dfn: 1,\n        em: 1,\n        kbd: 1,\n        i: 1,\n        rp: 1,\n        rt: 1,\n        ruby: 1,\n        s: 1,\n        samp: 1,\n        small: 1,\n        spacer: 1,\n        strike: 1,\n        strong: 1,\n        sub: 1,\n        sup: 1,\n        time: 1,\n        tt: 1,\n        u: 1,\n        var: 1,\n        wbr: 1,\n        noframes: 1,\n        summary: 1,\n        command: 1,\n        dt: 1,\n        dd: 1,\n        figure: 1,\n        figcaption: 1,\n        center: 1,\n        section: 1,\n        nav: 1,\n        article: 1,\n        aside: 1,\n        hgroup: 1,\n        header: 1,\n        footer: 1,\n        address: 1,\n        noscript: 1,\n        isIndex: 1,\n        main: 1,\n        mark: 1,\n        marquee: 1,\n        meter: 1,\n        menu: 1,\n      },\n      SVG: {\n        animateColor: 1,\n        animateMotion: 1,\n        animateTransform: 1,\n        glyph: 1,\n        feBlend: 1,\n        feColorMatrix: 1,\n        feComponentTransfer: 1,\n        feFuncR: 1,\n        feFuncG: 1,\n        feFuncB: 1,\n        feFuncA: 1,\n        feComposite: 1,\n        feConvolveMatrix: 1,\n        feDiffuseLighting: 1,\n        feDisplacementMap: 1,\n        feFlood: 1,\n        feGaussianBlur: 1,\n        feImage: 1,\n        feMerge: 1,\n        feMergeNode: 1,\n        feMorphology: 1,\n        feOffset: 1,\n        feSpecularLighting: 1,\n        feTile: 1,\n        feTurbulence: 1,\n        feDistantLight: 1,\n        fePointLight: 1,\n        feSpotLight: 1,\n        linearGradient: 1,\n        radialGradient: 1,\n        altGlyph: 1,\n        textPath: 1,\n        tref: 1,\n        altglyph: 1,\n        textpath: 1,\n        altglyphdef: 1,\n        altglyphitem: 1,\n        clipPath: 1,\n        'color-profile': 1,\n        cursor: 1,\n        'font-face': 1,\n        'font-face-format': 1,\n        'font-face-name': 1,\n        'font-face-src': 1,\n        'font-face-uri': 1,\n        foreignObject: 1,\n        glyphRef: 1,\n        hkern: 1,\n        vkern: 1,\n      },\n      MathML: {},\n    };\n  }\n\n  var language;\n\n  Prism.hooks.add('wrap', function (env) {\n    if (\n      (env.type == 'tag-id' ||\n        (env.type == 'property' && env.content.indexOf('-') != 0) ||\n        (env.type == 'rule' && env.content.indexOf('@-') != 0) ||\n        (env.type == 'pseudo-class' &&\n          env.content.indexOf(':-') != 0) ||\n        (env.type == 'pseudo-element' &&\n          env.content.indexOf('::-') != 0) ||\n        (env.type == 'attr-name' &&\n          env.content.indexOf('data-') != 0)) &&\n      env.content.indexOf('<') === -1\n    ) {\n      if (\n        env.language == 'css' ||\n        env.language == 'scss' ||\n        env.language == 'markup'\n      ) {\n        var href = 'https://webplatform.github.io/docs/';\n        var content = env.content;\n\n        if (env.language == 'css' || env.language == 'scss') {\n          href += 'css/';\n\n          if (env.type == 'property') {\n            href += 'properties/';\n          } else if (env.type == 'rule') {\n            href += 'atrules/';\n            content = content.substring(1);\n          } else if (env.type == 'pseudo-class') {\n            href += 'selectors/pseudo-classes/';\n            content = content.substring(1);\n          } else if (env.type == 'pseudo-element') {\n            href += 'selectors/pseudo-elements/';\n            content = content.substring(2);\n          }\n        } else if (env.language == 'markup') {\n          if (env.type == 'tag-id') {\n            // Check language\n            language = getLanguage(env.content) || language;\n\n            if (language) {\n              href += language + '/elements/';\n            } else {\n              return; // Abort\n            }\n          } else if (env.type == 'attr-name') {\n            if (language) {\n              href += language + '/attributes/';\n            } else {\n              return; // Abort\n            }\n          }\n        }\n\n        href += content;\n        env.tag = 'a';\n        env.attributes.href = href;\n        env.attributes.target = '_blank';\n      }\n    }\n  });\n\n  function getLanguage(tag) {\n    var tagL = tag.toLowerCase();\n\n    if (Tags.HTML[tagL]) {\n      return 'html';\n    } else if (Tags.SVG[tag]) {\n      return 'svg';\n    } else if (Tags.MathML[tag]) {\n      return 'mathml';\n    }\n\n    // Not in dictionary, perform check\n    if (Tags.HTML[tagL] !== 0 && typeof document !== 'undefined') {\n      var htmlInterface = (document\n        .createElement(tag)\n        .toString()\n        .match(/\\[object HTML(.+)Element\\]/) || [])[1];\n\n      if (htmlInterface && htmlInterface != 'Unknown') {\n        Tags.HTML[tagL] = 1;\n        return 'html';\n      }\n    }\n\n    Tags.HTML[tagL] = 0;\n\n    if (Tags.SVG[tag] !== 0 && typeof document !== 'undefined') {\n      var svgInterface = (document\n        .createElementNS('http://www.w3.org/2000/svg', tag)\n        .toString()\n        .match(/\\[object SVG(.+)Element\\]/) || [])[1];\n\n      if (svgInterface && svgInterface != 'Unknown') {\n        Tags.SVG[tag] = 1;\n        return 'svg';\n      }\n    }\n\n    Tags.SVG[tag] = 0;\n\n    // Lame way to detect MathML, but browsers don\u2019t expose interface names there :(\n    if (Tags.MathML[tag] !== 0) {\n      if (tag.indexOf('m') === 0) {\n        Tags.MathML[tag] = 1;\n        return 'mathml';\n      }\n    }\n\n    Tags.MathML[tag] = 0;\n\n    return null;\n  }\n})();\n(function () {\n  if (\n    typeof self === 'undefined' ||\n    typeof Prism === 'undefined' ||\n    typeof document === 'undefined'\n  ) {\n    return;\n  }\n\n  // Copied from the markup language definition\n  var HTML_TAG = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/g;\n\n  // a regex to validate hexadecimal colors\n  var HEX_COLOR = /^#?((?:[\\da-f]){3,4}|(?:[\\da-f]{2}){3,4})$/i;\n\n  /**\n   * Parses the given hexadecimal representation and returns the parsed RGBA color.\n   *\n   * If the format of the given string is invalid, `undefined` will be returned.\n   * Valid formats are: `RGB`, `RGBA`, `RRGGBB`, and `RRGGBBAA`.\n   *\n   * Hexadecimal colors are parsed because they are not fully supported by older browsers, so converting them to\n   * `rgba` functions improves browser compatibility.\n   *\n   * @param {string} hex\n   * @returns {string | undefined}\n   */\n  function parseHexColor(hex) {\n    var match = HEX_COLOR.exec(hex);\n    if (!match) {\n      return undefined;\n    }\n    hex = match[1]; // removes the leading \"#\"\n\n    // the width and number of channels\n    var channelWidth = hex.length >= 6 ? 2 : 1;\n    var channelCount = hex.length / channelWidth;\n\n    // the scale used to normalize 4bit and 8bit values\n    var scale = channelWidth == 1 ? 1 / 15 : 1 / 255;\n\n    // normalized RGBA channels\n    var channels = [];\n    for (var i = 0; i < channelCount; i++) {\n      var int = parseInt(\n        hex.substr(i * channelWidth, channelWidth),\n        16,\n      );\n      channels.push(int * scale);\n    }\n    if (channelCount == 3) {\n      channels.push(1); // add alpha of 100%\n    }\n\n    // output\n    var rgb = channels\n      .slice(0, 3)\n      .map(function (x) {\n        return String(Math.round(x * 255));\n      })\n      .join(',');\n    var alpha = String(Number(channels[3].toFixed(3))); // easy way to round 3 decimal places\n\n    return 'rgba(' + rgb + ',' + alpha + ')';\n  }\n\n  /**\n   * Validates the given Color using the current browser's internal implementation.\n   *\n   * @param {string} color\n   * @returns {string | undefined}\n   */\n  function validateColor(color) {\n    var s = new Option().style;\n    s.color = color;\n    return s.color ? color : undefined;\n  }\n\n  /**\n   * An array of function which parse a given string representation of a color.\n   *\n   * These parser serve as validators and as a layer of compatibility to support color formats which the browser\n   * might not support natively.\n   *\n   * @type {((value: string) => (string|undefined))[]}\n   */\n  var parsers = [parseHexColor, validateColor];\n\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'color' || env.classes.indexOf('color') >= 0) {\n      var content = env.content;\n\n      // remove all HTML tags inside\n      var rawText = content.split(HTML_TAG).join('');\n\n      var color;\n      for (var i = 0, l = parsers.length; i < l && !color; i++) {\n        color = parsers[i](rawText);\n      }\n\n      if (!color) {\n        return;\n      }\n\n      var previewElement =\n        '<span class=\"inline-color-wrapper\"><span class=\"inline-color\" style=\"background-color:' +\n        color +\n        ';\"></span></span>';\n      env.content = previewElement + content;\n    }\n  });\n})();\n\n(function () {\n  var assign =\n    Object.assign ||\n    function (obj1, obj2) {\n      for (var name in obj2) {\n        if (obj2.hasOwnProperty(name)) obj1[name] = obj2[name];\n      }\n      return obj1;\n    };\n\n  function NormalizeWhitespace(defaults) {\n    this.defaults = assign({}, defaults);\n  }\n\n  function toCamelCase(value) {\n    return value.replace(/-(\\w)/g, function (match, firstChar) {\n      return firstChar.toUpperCase();\n    });\n  }\n\n  function tabLen(str) {\n    var res = 0;\n    for (var i = 0; i < str.length; ++i) {\n      if (str.charCodeAt(i) == '\\t'.charCodeAt(0)) res += 3;\n    }\n    return str.length + res;\n  }\n\n  NormalizeWhitespace.prototype = {\n    setDefaults: function (defaults) {\n      this.defaults = assign(this.defaults, defaults);\n    },\n    normalize: function (input, settings) {\n      settings = assign(this.defaults, settings);\n\n      for (var name in settings) {\n        var methodName = toCamelCase(name);\n        if (\n          name !== 'normalize' &&\n          methodName !== 'setDefaults' &&\n          settings[name] &&\n          this[methodName]\n        ) {\n          input = this[methodName].call(this, input, settings[name]);\n        }\n      }\n\n      return input;\n    },\n\n    /*\n     * Normalization methods\n     */\n    leftTrim: function (input) {\n      return input.replace(/^\\s+/, '');\n    },\n    rightTrim: function (input) {\n      return input.replace(/\\s+$/, '');\n    },\n    tabsToSpaces: function (input, spaces) {\n      spaces = spaces | 0 || 4;\n      return input.replace(/\\t/g, new Array(++spaces).join(' '));\n    },\n    spacesToTabs: function (input, spaces) {\n      spaces = spaces | 0 || 4;\n      return input.replace(RegExp(' {' + spaces + '}', 'g'), '\\t');\n    },\n    removeTrailing: function (input) {\n      return input.replace(/\\s*?$/gm, '');\n    },\n    // Support for deprecated plugin remove-initial-line-feed\n    removeInitialLineFeed: function (input) {\n      return input.replace(/^(?:\\r?\\n|\\r)/, '');\n    },\n    removeIndent: function (input) {\n      var indents = input.match(/^[^\\S\\n\\r]*(?=\\S)/gm);\n\n      if (!indents || !indents[0].length) return input;\n\n      indents.sort(function (a, b) {\n        return a.length - b.length;\n      });\n\n      if (!indents[0].length) return input;\n\n      return input.replace(RegExp('^' + indents[0], 'gm'), '');\n    },\n    indent: function (input, tabs) {\n      return input.replace(\n        /^[^\\S\\n\\r]*(?=\\S)/gm,\n        new Array(++tabs).join('\\t') + '$&',\n      );\n    },\n    breakLines: function (input, characters) {\n      characters = characters === true ? 80 : characters | 0 || 80;\n\n      var lines = input.split('\\n');\n      for (var i = 0; i < lines.length; ++i) {\n        if (tabLen(lines[i]) <= characters) continue;\n\n        var line = lines[i].split(/(\\s+)/g),\n          len = 0;\n\n        for (var j = 0; j < line.length; ++j) {\n          var tl = tabLen(line[j]);\n          len += tl;\n          if (len > characters) {\n            line[j] = '\\n' + line[j];\n            len = tl;\n          }\n        }\n        lines[i] = line.join('');\n      }\n      return lines.join('\\n');\n    },\n  };\n\n  // Support node modules\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = NormalizeWhitespace;\n  }\n\n  // Exit if prism is not loaded\n  if (typeof Prism === 'undefined') {\n    return;\n  }\n\n  Prism.plugins.NormalizeWhitespace = new NormalizeWhitespace({\n    'remove-trailing': true,\n    'remove-indent': true,\n    'left-trim': true,\n    'right-trim': true,\n    /*'break-lines': 80,\n\t'indent': 2,\n\t'remove-initial-line-feed': false,\n\t'tabs-to-spaces': 4,\n\t'spaces-to-tabs': 4*/\n  });\n\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var Normalizer = Prism.plugins.NormalizeWhitespace;\n\n    // Check settings\n    if (\n      env.settings &&\n      env.settings['whitespace-normalization'] === false\n    ) {\n      return;\n    }\n\n    // Check classes\n    if (\n      !Prism.util.isActive(\n        env.element,\n        'whitespace-normalization',\n        true,\n      )\n    ) {\n      return;\n    }\n\n    // Simple mode if there is no env.element\n    if ((!env.element || !env.element.parentNode) && env.code) {\n      env.code = Normalizer.normalize(env.code, env.settings);\n      return;\n    }\n\n    // Normal mode\n    var pre = env.element.parentNode;\n    if (!env.code || !pre || pre.nodeName.toLowerCase() !== 'pre') {\n      return;\n    }\n\n    var children = pre.childNodes,\n      before = '',\n      after = '',\n      codeFound = false;\n\n    // Move surrounding whitespace from the <pre> tag into the <code> tag\n    for (var i = 0; i < children.length; ++i) {\n      var node = children[i];\n\n      if (node == env.element) {\n        codeFound = true;\n      } else if (node.nodeName === '#text') {\n        if (codeFound) {\n          after += node.nodeValue;\n        } else {\n          before += node.nodeValue;\n        }\n\n        pre.removeChild(node);\n        --i;\n      }\n    }\n\n    if (!env.element.children.length || !Prism.plugins.KeepMarkup) {\n      env.code = before + env.code + after;\n      env.code = Normalizer.normalize(env.code, env.settings);\n    } else {\n      // Preserve markup for keep-markup plugin\n      var html = before + env.element.innerHTML + after;\n      env.element.innerHTML = Normalizer.normalize(\n        html,\n        env.settings,\n      );\n      env.code = env.element.textContent;\n    }\n  });\n})();\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  var callbacks = [];\n  var map = {};\n  var noop = function () {};\n\n  Prism.plugins.toolbar = {};\n\n  /**\n   * @typedef ButtonOptions\n   * @property {string} text The text displayed.\n   * @property {string} [url] The URL of the link which will be created.\n   * @property {Function} [onClick] The event listener for the `click` event of the created button.\n   * @property {string} [className] The class attribute to include with element.\n   */\n\n  /**\n   * Register a button callback with the toolbar.\n   *\n   * @param {string} key\n   * @param {ButtonOptions|Function} opts\n   */\n  var registerButton = (Prism.plugins.toolbar.registerButton = function (\n    key,\n    opts,\n  ) {\n    var callback;\n\n    if (typeof opts === 'function') {\n      callback = opts;\n    } else {\n      callback = function (env) {\n        var element;\n\n        if (typeof opts.onClick === 'function') {\n          element = document.createElement('button');\n          element.type = 'button';\n          element.addEventListener('click', function () {\n            opts.onClick.call(this, env);\n          });\n        } else if (typeof opts.url === 'string') {\n          element = document.createElement('a');\n          element.href = opts.url;\n        } else {\n          element = document.createElement('span');\n        }\n\n        if (opts.className) {\n          element.classList.add(opts.className);\n        }\n\n        element.textContent = opts.text;\n\n        return element;\n      };\n    }\n\n    if (key in map) {\n      console.warn(\n        'There is a button with the key \"' +\n          key +\n          '\" registered already.',\n      );\n      return;\n    }\n\n    callbacks.push((map[key] = callback));\n  });\n\n  /**\n   * Returns the callback order of the given element.\n   *\n   * @param {HTMLElement} element\n   * @returns {string[] | undefined}\n   */\n  function getOrder(element) {\n    while (element) {\n      var order = element.getAttribute('data-toolbar-order');\n      if (order != null) {\n        order = order.trim();\n        if (order.length) {\n          return order.split(/\\s*,\\s*/g);\n        } else {\n          return [];\n        }\n      }\n      element = element.parentElement;\n    }\n  }\n\n  /**\n   * Post-highlight Prism hook callback.\n   *\n   * @param env\n   */\n  var hook = (Prism.plugins.toolbar.hook = function (env) {\n    // Check if inline or actual code block (credit to line-numbers plugin)\n    var pre = env.element.parentNode;\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    // Autoloader rehighlights, so only do this once.\n    if (pre.parentNode.classList.contains('code-toolbar')) {\n      return;\n    }\n\n    // Create wrapper for <pre> to prevent scrolling toolbar with content\n    var wrapper = document.createElement('div');\n    wrapper.classList.add('code-toolbar');\n    pre.parentNode.insertBefore(wrapper, pre);\n    wrapper.appendChild(pre);\n\n    // Setup the toolbar\n    var toolbar = document.createElement('div');\n    toolbar.classList.add('toolbar');\n\n    // order callbacks\n    var elementCallbacks = callbacks;\n    var order = getOrder(env.element);\n    if (order) {\n      elementCallbacks = order.map(function (key) {\n        return map[key] || noop;\n      });\n    }\n\n    elementCallbacks.forEach(function (callback) {\n      var element = callback(env);\n\n      if (!element) {\n        return;\n      }\n\n      var item = document.createElement('div');\n      item.classList.add('toolbar-item');\n\n      item.appendChild(element);\n      toolbar.appendChild(item);\n    });\n\n    // Add our toolbar to the currently created wrapper of <pre> tag\n    wrapper.appendChild(toolbar);\n  });\n\n  registerButton('label', function (env) {\n    var pre = env.element.parentNode;\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-label')) {\n      return;\n    }\n\n    var element, template;\n    var text = pre.getAttribute('data-label');\n    try {\n      // Any normal text will blow up this selector.\n      template = document.querySelector('template#' + text);\n    } catch (e) {}\n\n    if (template) {\n      element = template.content;\n    } else {\n      if (pre.hasAttribute('data-url')) {\n        element = document.createElement('a');\n        element.href = pre.getAttribute('data-url');\n      } else {\n        element = document.createElement('span');\n      }\n\n      element.textContent = text;\n    }\n\n    return element;\n  });\n\n  /**\n   * Register the toolbar with Prism.\n   */\n  Prism.hooks.add('complete', hook);\n})();\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  if (!Prism.plugins.toolbar) {\n    console.warn(\n      'Copy to Clipboard plugin loaded before Toolbar plugin.',\n    );\n\n    return;\n  }\n\n  var callbacks = [];\n\n  Prism.plugins.toolbar.registerButton('copy-to-clipboard', function (\n    env,\n  ) {\n    var linkCopy = document.createElement('button');\n    linkCopy.textContent = 'Copy';\n\n    var element = env.element;\n\n    if (!ClipboardJS) {\n      callbacks.push(registerClipboard);\n    } else {\n      registerClipboard();\n    }\n\n    return linkCopy;\n\n    function registerClipboard() {\n      var clip = new ClipboardJS(linkCopy, {\n        text: function () {\n          return element.textContent;\n        },\n      });\n\n      clip.on('success', function () {\n        linkCopy.textContent = 'Copied!';\n\n        resetText();\n      });\n      clip.on('error', function () {\n        linkCopy.textContent = 'Press Ctrl+C to copy';\n\n        resetText();\n      });\n    }\n\n    function resetText() {\n      setTimeout(function () {\n        linkCopy.textContent = 'Copy';\n      }, 5000);\n    }\n  });\n})();\n\n(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  var MATCH_ALL_CLASS = /(?:^|\\s)match-braces(?:\\s|$)/;\n\n  var BRACE_HOVER_CLASS = /(?:^|\\s)brace-hover(?:\\s|$)/;\n  var BRACE_SELECTED_CLASS = /(?:^|\\s)brace-selected(?:\\s|$)/;\n\n  var NO_BRACE_HOVER_CLASS = /(?:^|\\s)no-brace-hover(?:\\s|$)/;\n  var NO_BRACE_SELECT_CLASS = /(?:^|\\s)no-brace-select(?:\\s|$)/;\n\n  var PARTNER = {\n    '(': ')',\n    '[': ']',\n    '{': '}',\n  };\n\n  var NAMES = {\n    '(': 'brace-round',\n    '[': 'brace-square',\n    '{': 'brace-curly',\n  };\n\n  var LEVEL_WARP = 12;\n\n  var pairIdCounter = 0;\n\n  var BRACE_ID_PATTERN = /^(pair-\\d+-)(open|close)$/;\n\n  /**\n   * Returns the brace partner given one brace of a brace pair.\n   *\n   * @param {HTMLElement} brace\n   * @returns {HTMLElement}\n   */\n  function getPartnerBrace(brace) {\n    var match = BRACE_ID_PATTERN.exec(brace.id);\n    return document.querySelector(\n      '#' + match[1] + (match[2] == 'open' ? 'close' : 'open'),\n    );\n  }\n\n  /**\n   * @this {HTMLElement}\n   */\n  function hoverBrace() {\n    for (\n      var parent = this.parentElement;\n      parent;\n      parent = parent.parentElement\n    ) {\n      if (NO_BRACE_HOVER_CLASS.test(parent.className)) {\n        return;\n      }\n    }\n\n    [this, getPartnerBrace(this)].forEach(function (ele) {\n      ele.className = (\n        ele.className.replace(BRACE_HOVER_CLASS, ' ') + ' brace-hover'\n      ).replace(/\\s+/g, ' ');\n    });\n  }\n  /**\n   * @this {HTMLElement}\n   */\n  function leaveBrace() {\n    [this, getPartnerBrace(this)].forEach(function (ele) {\n      ele.className = ele.className.replace(BRACE_HOVER_CLASS, ' ');\n    });\n  }\n  /**\n   * @this {HTMLElement}\n   */\n  function clickBrace() {\n    for (\n      var parent = this.parentElement;\n      parent;\n      parent = parent.parentElement\n    ) {\n      if (NO_BRACE_SELECT_CLASS.test(parent.className)) {\n        return;\n      }\n    }\n\n    [this, getPartnerBrace(this)].forEach(function (ele) {\n      ele.className = (\n        ele.className.replace(BRACE_SELECTED_CLASS, ' ') +\n        ' brace-selected'\n      ).replace(/\\s+/g, ' ');\n    });\n  }\n\n  Prism.hooks.add('complete', function (env) {\n    /** @type {HTMLElement} */\n    var code = env.element;\n    var pre = code.parentElement;\n\n    if (!pre || pre.tagName != 'PRE') {\n      return;\n    }\n\n    // find the braces to match\n    /** @type {string[]} */\n    var toMatch = [];\n    for (var ele = code; ele; ele = ele.parentElement) {\n      if (MATCH_ALL_CLASS.test(ele.className)) {\n        toMatch.push('(', '[', '{');\n        break;\n      }\n    }\n\n    if (toMatch.length == 0) {\n      // nothing to match\n      return;\n    }\n\n    if (!pre.__listenerAdded) {\n      // code blocks might be highlighted more than once\n      pre.addEventListener(\n        'mousedown',\n        function removeBraceSelected() {\n          // the code element might have been replaced\n          var code = pre.querySelector('code');\n          Array.prototype.slice\n            .call(code.querySelectorAll('.brace-selected'))\n            .forEach(function (element) {\n              element.className = element.className.replace(\n                BRACE_SELECTED_CLASS,\n                ' ',\n              );\n            });\n        },\n      );\n      Object.defineProperty(pre, '__listenerAdded', { value: true });\n    }\n\n    /** @type {HTMLSpanElement[]} */\n    var punctuation = Array.prototype.slice.call(\n      code.querySelectorAll('span.token.punctuation'),\n    );\n\n    /** @type {{ index: number, open: boolean, element: HTMLElement }[]} */\n    var allBraces = [];\n\n    toMatch.forEach(function (open) {\n      var close = PARTNER[open];\n      var name = NAMES[open];\n\n      /** @type {[number, number][]} */\n      var pairs = [];\n      /** @type {number[]} */\n      var openStack = [];\n\n      for (var i = 0; i < punctuation.length; i++) {\n        var element = punctuation[i];\n        if (element.childElementCount == 0) {\n          var text = element.textContent;\n          if (text === open) {\n            allBraces.push({\n              index: i,\n              open: true,\n              element: element,\n            });\n            element.className += ' ' + name;\n            element.className += ' brace-open';\n            openStack.push(i);\n          } else if (text === close) {\n            allBraces.push({\n              index: i,\n              open: false,\n              element: element,\n            });\n            element.className += ' ' + name;\n            element.className += ' brace-close';\n            if (openStack.length) {\n              pairs.push([i, openStack.pop()]);\n            }\n          }\n        }\n      }\n\n      pairs.forEach(function (pair) {\n        var pairId = 'pair-' + pairIdCounter++ + '-';\n\n        var openEle = punctuation[pair[0]];\n        var closeEle = punctuation[pair[1]];\n\n        openEle.id = pairId + 'open';\n        closeEle.id = pairId + 'close';\n\n        [openEle, closeEle].forEach(function (ele) {\n          ele.addEventListener('mouseenter', hoverBrace);\n          ele.addEventListener('mouseleave', leaveBrace);\n          ele.addEventListener('click', clickBrace);\n        });\n      });\n    });\n\n    var level = 0;\n    allBraces.sort(function (a, b) {\n      return a.index - b.index;\n    });\n    allBraces.forEach(function (brace) {\n      if (brace.open) {\n        brace.element.className +=\n          ' brace-level-' + ((level % LEVEL_WARP) + 1);\n        level++;\n      } else {\n        level = Math.max(0, level - 1);\n        brace.element.className +=\n          ' brace-level-' + ((level % LEVEL_WARP) + 1);\n      }\n    });\n  });\n})();\n", "// Disable auto formatting. Must be done before importing Prism script\r\nwindow.Prism = window.Prism || {};\r\nPrism.manual = true;\r\n\r\nimport Prism from './vendor/prism/prism.js';\r\n\r\nPrism.plugins.NormalizeWhitespace.setDefaults({\r\n  'remove-trailing': true,\r\n  'remove-indent': true,\r\n  'left-trim': true,\r\n  'right-trim': true,\r\n  // 'break-lines': 80,\r\n  // 'indent': 2,\r\n  'remove-initial-line-feed': false,\r\n  // 'tabs-to-spaces': 4,\r\n  // 'spaces-to-tabs': 4,\r\n});\r\n\r\nfunction setupCodeHighlights() {\r\n  const highlights = document.querySelectorAll('.highlight');\r\n\r\n  // line highlight requires waiting a frame to work\r\n  // otherwise lines don't get highlighted until after a resize\r\n  setTimeout(() => {\r\n    for (const element of highlights) {\r\n      Prism.highlightElement(element, false);\r\n    }\r\n  }, 0);\r\n}\r\n\r\nexport { setupCodeHighlights };\r\n", "function addAnchorLinks() {\r\n  const content = document.querySelector('.content');\r\n\r\n  if (!content) return;\r\n  const headings = content.querySelectorAll('h2,h3,h4,h5,h6');\r\n\r\n  headings.forEach((heading) => {\r\n    if (heading.classList.contains('no-anchor')) {\r\n      return;\r\n    }\r\n    const id = heading.getAttribute('id');\r\n\r\n    const anchor = document.createElement('a');\r\n    anchor.className = 'anchor-link';\r\n    anchor.href = `#${id}`;\r\n    anchor.innerText = '#';\r\n\r\n    heading.appendChild(anchor);\r\n  });\r\n}\r\n\r\nexport { addAnchorLinks };\r\n", "function scrollToAnchor() {\r\n  if (window.location.hash.length > 0) {\r\n    if (window.location.hash.includes('lightbox')) return;\r\n    const target = document.querySelector(window.location.hash);\r\n    if (target) {\r\n      document.querySelector('.scroller').scrollTo({\r\n        top: target.offsetTop - 100,\r\n        left: 0,\r\n        behavior: 'auto',\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport { scrollToAnchor };\r\n", "/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nclass SourceLocation {\n  // The + prefix indicates that these fields aren't writeable\n  // Lexer holding the input string.\n  // Start offset, zero-based inclusive.\n  // End offset, zero-based exclusive.\n  constructor(lexer, start, end) {\n    this.lexer = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.lexer = lexer;\n    this.start = start;\n    this.end = end;\n  }\n  /**\n   * Merges two `SourceLocation`s from location providers, given they are\n   * provided in order of appearance.\n   * - Returns the first one's location if only the first is provided.\n   * - Returns a merged range of the first and the last if both are provided\n   *   and their lexers match.\n   * - Otherwise, returns null.\n   */\n\n\n  static range(first, second) {\n    if (!second) {\n      return first && first.loc;\n    } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n      return null;\n    } else {\n      return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n    }\n  }\n\n}\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nclass Token {\n  constructor(text, // the text of this token\n  loc) {\n    this.text = void 0;\n    this.loc = void 0;\n    this.text = text;\n    this.loc = loc;\n  }\n  /**\n   * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n   * the whole input range enclosed by these two.\n   */\n\n\n  range(endToken, // last token of the range, inclusive\n  text) // the text of the newly constructed token\n  {\n    return new Token(text, SourceLocation.range(this, endToken));\n  }\n\n}\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nclass ParseError {\n  // Error position based on passed-in Token or ParseNode.\n  constructor(message, // The error message\n  token) // An object providing position information\n  {\n    this.position = void 0;\n    let error = \"KaTeX parse error: \" + message;\n    let start;\n    const loc = token && token.loc;\n\n    if (loc && loc.start <= loc.end) {\n      // If we have the input and a position, make the error a bit fancier\n      // Get the input\n      const input = loc.lexer.input; // Prepend some information\n\n      start = loc.start;\n      const end = loc.end;\n\n      if (start === input.length) {\n        error += \" at end of input: \";\n      } else {\n        error += \" at position \" + (start + 1) + \": \";\n      } // Underline token in question using combining underscores\n\n\n      const underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\"); // Extract some context from the input and add it to the error\n\n      let left;\n\n      if (start > 15) {\n        left = \"\u2026\" + input.slice(start - 15, start);\n      } else {\n        left = input.slice(0, start);\n      }\n\n      let right;\n\n      if (end + 15 < input.length) {\n        right = input.slice(end, end + 15) + \"\u2026\";\n      } else {\n        right = input.slice(end);\n      }\n\n      error += left + underlined + right;\n    } // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n\n\n    const self = new Error(error);\n    self.name = \"ParseError\"; // $FlowFixMe\n\n    self.__proto__ = ParseError.prototype; // $FlowFixMe\n\n    self.position = start;\n    return self;\n  }\n\n} // $FlowFixMe More hackery\n\n\nParseError.prototype.__proto__ = Error.prototype;\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\n/**\n * Return whether an element is contained in a list\n */\nconst contains = function contains(list, elem) {\n  return list.indexOf(elem) !== -1;\n};\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n\nconst deflt = function deflt(setting, defaultIfUndefined) {\n  return setting === undefined ? defaultIfUndefined : setting;\n}; // hyphenate and escape adapted from Facebook's React under Apache 2 license\n\n\nconst uppercase = /([A-Z])/g;\n\nconst hyphenate = function hyphenate(str) {\n  return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"&amp;\",\n  \">\": \"&gt;\",\n  \"<\": \"&lt;\",\n  \"\\\"\": \"&quot;\",\n  \"'\": \"&#x27;\"\n};\nconst ESCAPE_REGEX = /[&><\"']/g;\n/**\n * Escapes text to prevent scripting attacks.\n */\n\nfunction escape(text) {\n  return String(text).replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\n\n\nconst getBaseElem = function getBaseElem(group) {\n  if (group.type === \"ordgroup\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"color\") {\n    if (group.body.length === 1) {\n      return getBaseElem(group.body[0]);\n    } else {\n      return group;\n    }\n  } else if (group.type === \"font\") {\n    return getBaseElem(group.body);\n  } else {\n    return group;\n  }\n};\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\n\n\nconst isCharacterBox = function isCharacterBox(group) {\n  const baseElem = getBaseElem(group); // These are all they types of groups which hold single characters\n\n  return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nconst assert = function assert(value) {\n  if (!value) {\n    throw new Error('Expected non-null, but got ' + String(value));\n  }\n\n  return value;\n};\n/**\n * Return the protocol of a URL, or \"_relative\" if the URL does not specify a\n * protocol (and thus is relative).\n */\n\nconst protocolFromUrl = function protocolFromUrl(url) {\n  const protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n  return protocol != null ? protocol[1] : \"_relative\";\n};\nvar utils = {\n  contains,\n  deflt,\n  escape,\n  hyphenate,\n  getBaseElem,\n  isCharacterBox,\n  protocolFromUrl\n};\n\n/* eslint no-console:0 */\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nclass Settings {\n  constructor(options) {\n    this.displayMode = void 0;\n    this.output = void 0;\n    this.leqno = void 0;\n    this.fleqn = void 0;\n    this.throwOnError = void 0;\n    this.errorColor = void 0;\n    this.macros = void 0;\n    this.minRuleThickness = void 0;\n    this.colorIsTextColor = void 0;\n    this.strict = void 0;\n    this.trust = void 0;\n    this.maxSize = void 0;\n    this.maxExpand = void 0;\n    // allow null options\n    options = options || {};\n    this.displayMode = utils.deflt(options.displayMode, false);\n    this.output = utils.deflt(options.output, \"htmlAndMathml\");\n    this.leqno = utils.deflt(options.leqno, false);\n    this.fleqn = utils.deflt(options.fleqn, false);\n    this.throwOnError = utils.deflt(options.throwOnError, true);\n    this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n    this.macros = options.macros || {};\n    this.minRuleThickness = Math.max(0, utils.deflt(options.minRuleThickness, 0));\n    this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n    this.strict = utils.deflt(options.strict, \"warn\");\n    this.trust = utils.deflt(options.trust, false);\n    this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n    this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n  }\n  /**\n   * Report nonstrict (non-LaTeX-compatible) input.\n   * Can safely not be called if `this.strict` is false in JavaScript.\n   */\n\n\n  reportNonstrict(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      strict = strict(errorCode, errorMsg, token);\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return;\n    } else if (strict === true || strict === \"error\") {\n      throw new ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + `${errorMsg} [${errorCode}]`, token);\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + `${errorMsg} [${errorCode}]`);\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + `unrecognized '${strict}': ${errorMsg} [${errorCode}]`);\n    }\n  }\n  /**\n   * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n   * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n   * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n   * translates to a return value of `false`.  May still print a warning:\n   * \"warn\" prints a warning and returns `false`.\n   * This is for the second category of `errorCode`s listed in the README.\n   */\n\n\n  useStrictBehavior(errorCode, errorMsg, token) {\n    let strict = this.strict;\n\n    if (typeof strict === \"function\") {\n      // Allow return value of strict function to be boolean or string\n      // (or null/undefined, meaning no further processing).\n      // But catch any exceptions thrown by function, treating them\n      // like \"error\".\n      try {\n        strict = strict(errorCode, errorMsg, token);\n      } catch (error) {\n        strict = \"error\";\n      }\n    }\n\n    if (!strict || strict === \"ignore\") {\n      return false;\n    } else if (strict === true || strict === \"error\") {\n      return true;\n    } else if (strict === \"warn\") {\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + `${errorMsg} [${errorCode}]`);\n      return false;\n    } else {\n      // won't happen in type-safe code\n      typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + `unrecognized '${strict}': ${errorMsg} [${errorCode}]`);\n      return false;\n    }\n  }\n  /**\n   * Check whether to test potentially dangerous input, and return\n   * `true` (trusted) or `false` (untrusted).  The sole argument `context`\n   * should be an object with `command` field specifying the relevant LaTeX\n   * command (as a string starting with `\\`), and any other arguments, etc.\n   * If `context` has a `url` field, a `protocol` field will automatically\n   * get added by this function (changing the specified object).\n   */\n\n\n  isTrusted(context) {\n    if (context.url && !context.protocol) {\n      context.protocol = utils.protocolFromUrl(context.url);\n    }\n\n    const trust = typeof this.trust === \"function\" ? this.trust(context) : this.trust;\n    return Boolean(trust);\n  }\n\n}\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nclass Style {\n  constructor(id, size, cramped) {\n    this.id = void 0;\n    this.size = void 0;\n    this.cramped = void 0;\n    this.id = id;\n    this.size = size;\n    this.cramped = cramped;\n  }\n  /**\n   * Get the style of a superscript given a base in the current style.\n   */\n\n\n  sup() {\n    return styles[sup[this.id]];\n  }\n  /**\n   * Get the style of a subscript given a base in the current style.\n   */\n\n\n  sub() {\n    return styles[sub[this.id]];\n  }\n  /**\n   * Get the style of a fraction numerator given the fraction in the current\n   * style.\n   */\n\n\n  fracNum() {\n    return styles[fracNum[this.id]];\n  }\n  /**\n   * Get the style of a fraction denominator given the fraction in the current\n   * style.\n   */\n\n\n  fracDen() {\n    return styles[fracDen[this.id]];\n  }\n  /**\n   * Get the cramped version of a style (in particular, cramping a cramped style\n   * doesn't change the style).\n   */\n\n\n  cramp() {\n    return styles[cramp[this.id]];\n  }\n  /**\n   * Get a text or display version of this style.\n   */\n\n\n  text() {\n    return styles[text[this.id]];\n  }\n  /**\n   * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n   */\n\n\n  isTight() {\n    return this.size >= 2;\n  }\n\n} // Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nconst D = 0;\nconst Dc = 1;\nconst T = 2;\nconst Tc = 3;\nconst S = 4;\nconst Sc = 5;\nconst SS = 6;\nconst SSc = 7; // Instances of the different styles\n\nconst styles = [new Style(D, 0, false), new Style(Dc, 0, true), new Style(T, 1, false), new Style(Tc, 1, true), new Style(S, 2, false), new Style(Sc, 2, true), new Style(SS, 3, false), new Style(SSc, 3, true)]; // Lookup tables for switching from one style to another\n\nconst sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nconst sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nconst fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nconst cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nconst text = [D, Dc, T, Tc, T, Tc, T, Tc]; // We only export some of the styles.\n\nvar Style$1 = {\n  DISPLAY: styles[D],\n  TEXT: styles[T],\n  SCRIPT: styles[S],\n  SCRIPTSCRIPT: styles[SS]\n};\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nconst scriptData = [{\n  // Latin characters beyond the Latin-1 characters we have metrics for.\n  // Needed for Czech, Hungarian and Turkish text, for example.\n  name: 'latin',\n  blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n  [0x0300, 0x036f]]\n}, {\n  // The Cyrillic script used by Russian and related languages.\n  // A Cyrillic subset used to be supported as explicitly defined\n  // symbols in symbols.js\n  name: 'cyrillic',\n  blocks: [[0x0400, 0x04ff]]\n}, {\n  // The Brahmic scripts of South and Southeast Asia\n  // Devanagari (0900\u2013097F)\n  // Bengali (0980\u201309FF)\n  // Gurmukhi (0A00\u20130A7F)\n  // Gujarati (0A80\u20130AFF)\n  // Oriya (0B00\u20130B7F)\n  // Tamil (0B80\u20130BFF)\n  // Telugu (0C00\u20130C7F)\n  // Kannada (0C80\u20130CFF)\n  // Malayalam (0D00\u20130D7F)\n  // Sinhala (0D80\u20130DFF)\n  // Thai (0E00\u20130E7F)\n  // Lao (0E80\u20130EFF)\n  // Tibetan (0F00\u20130FFF)\n  // Myanmar (1000\u2013109F)\n  name: 'brahmic',\n  blocks: [[0x0900, 0x109F]]\n}, {\n  name: 'georgian',\n  blocks: [[0x10A0, 0x10ff]]\n}, {\n  // Chinese and Japanese.\n  // The \"k\" in cjk is for Korean, but we've separated Korean out\n  name: \"cjk\",\n  blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n  [0x4E00, 0x9FAF], // CJK ideograms\n  [0xFF00, 0xFF60]]\n}, {\n  // Korean\n  name: 'hangul',\n  blocks: [[0xAC00, 0xD7AF]]\n}];\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\nfunction scriptFromCodepoint(codepoint) {\n  for (let i = 0; i < scriptData.length; i++) {\n    const script = scriptData[i];\n\n    for (let i = 0; i < script.blocks.length; i++) {\n      const block = script.blocks[i];\n\n      if (codepoint >= block[0] && codepoint <= block[1]) {\n        return script.name;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\n\nconst allBlocks = [];\nscriptData.forEach(s => s.blocks.forEach(b => allBlocks.push(...b)));\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\n\nfunction supportedCodepoint(codepoint) {\n  for (let i = 0; i < allBlocks.length; i += 2) {\n    if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * This file provides support to domTree.js and delimiter.js.\n * It's a storehouse of path geometry for SVG images.\n */\n// In all paths below, the viewBox-to-em scale is 1000:1.\nconst hLinePad = 80; // padding above a sqrt viniculum. Prevents image cropping.\n// The viniculum of a \\sqrt can be made thicker by a KaTeX rendering option.\n// Think of variable extraViniculum as two detours in the SVG path.\n// The detour begins at the lower left of the area labeled extraViniculum below.\n// The detour proceeds one extraViniculum distance up and slightly to the right,\n// displacing the radiused corner between surd and viniculum. The radius is\n// traversed as usual, then the detour resumes. It goes right, to the end of\n// the very long viniculumn, then down one extraViniculum distance,\n// after which it resumes regular path geometry for the radical.\n\n/*                                                  viniculum\n                                                   /\n         /\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2190extraViniculum\n        / \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u21900.04em (40 unit) std viniculum thickness\n       / /\n      / /\n     / /\\\n    / / surd\n*/\n\nconst sqrtMain = function sqrtMain(extraViniculum, hLinePad) {\n  // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n  return `M95,${622 + extraViniculum + hLinePad}\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl${extraViniculum / 2.075} -${extraViniculum}\nc5.3,-9.3,12,-14,20,-14\nH400000v${40 + extraViniculum}H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM${834 + extraViniculum} ${hLinePad}h400000v${40 + extraViniculum}h-400000z`;\n};\n\nconst sqrtSize1 = function sqrtSize1(extraViniculum, hLinePad) {\n  // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n  return `M263,${601 + extraViniculum + hLinePad}c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl${extraViniculum / 2.084} -${extraViniculum}\nc4.7,-7.3,11,-11,19,-11\nH40000v${40 + extraViniculum}H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM${1001 + extraViniculum} ${hLinePad}h400000v${40 + extraViniculum}h-400000z`;\n};\n\nconst sqrtSize2 = function sqrtSize2(extraViniculum, hLinePad) {\n  // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n  return `M983 ${10 + extraViniculum + hLinePad}\nl${extraViniculum / 3.13} -${extraViniculum}\nc4,-6.7,10,-10,18,-10 H400000v${40 + extraViniculum}\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM${1001 + extraViniculum} ${hLinePad}h400000v${40 + extraViniculum}h-400000z`;\n};\n\nconst sqrtSize3 = function sqrtSize3(extraViniculum, hLinePad) {\n  // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n  return `M424,${2398 + extraViniculum + hLinePad}\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl${extraViniculum / 4.223} -${extraViniculum}c4,-6.7,10,-10,18,-10 H400000\nv${40 + extraViniculum}H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M${1001 + extraViniculum} ${hLinePad}\nh400000v${40 + extraViniculum}h-400000z`;\n};\n\nconst sqrtSize4 = function sqrtSize4(extraViniculum, hLinePad) {\n  // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n  return `M473,${2713 + extraViniculum + hLinePad}\nc339.3,-1799.3,509.3,-2700,510,-2702 l${extraViniculum / 5.298} -${extraViniculum}\nc3.3,-7.3,9.3,-11,18,-11 H400000v${40 + extraViniculum}H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM${1001 + extraViniculum} ${hLinePad}h400000v${40 + extraViniculum}H1017.7z`;\n};\n\nconst sqrtTall = function sqrtTall(extraViniculum, hLinePad, viewBoxHeight) {\n  // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n  // One path edge has a variable length. It runs vertically from the viniculumn\n  // to a point near (14 units) the bottom of the surd. The viniculum\n  // is normally 40 units thick. So the length of the line in question is:\n  const vertSegment = viewBoxHeight - 54 - hLinePad - extraViniculum;\n  return `M702 ${extraViniculum + hLinePad}H400000${40 + extraViniculum}\nH742v${vertSegment}l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 ${hLinePad}H400000v${40 + extraViniculum}H742z`;\n};\n\nconst sqrtPath = function sqrtPath(size, extraViniculum, viewBoxHeight) {\n  extraViniculum = 1000 * extraViniculum; // Convert from document ems to viewBox.\n\n  let path = \"\";\n\n  switch (size) {\n    case \"sqrtMain\":\n      path = sqrtMain(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize1\":\n      path = sqrtSize1(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize2\":\n      path = sqrtSize2(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize3\":\n      path = sqrtSize3(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtSize4\":\n      path = sqrtSize4(extraViniculum, hLinePad);\n      break;\n\n    case \"sqrtTall\":\n      path = sqrtTall(extraViniculum, hLinePad, viewBoxHeight);\n  }\n\n  return path;\n};\nconst path = {\n  // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n  doubleleftarrow: `M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z`,\n  // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n  doublerightarrow: `M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,\n  // leftarrow is from glyph U+2190 in font KaTeX Main\n  leftarrow: `M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z`,\n  // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n  leftbrace: `M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,\n  leftbraceunder: `M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,\n  // overgroup is from the MnSymbol package (public domain)\n  leftgroup: `M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z`,\n  leftgroupunder: `M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z`,\n  // Harpoons are from glyph U+21BD in font KaTeX Main\n  leftharpoon: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,\n  leftharpoonplus: `M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z`,\n  leftharpoondown: `M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,\n  leftharpoondownplus: `M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,\n  // hook is from glyph U+21A9 in font KaTeX Main\n  lefthook: `M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z`,\n  leftlinesegment: `M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z`,\n  leftmapsto: `M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z`,\n  // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n  leftToFrom: `M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,\n  longequal: `M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z`,\n  midbrace: `M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,\n  midbraceunder: `M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,\n  oiintSize1: `M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,\n  oiintSize2: `M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z`,\n  oiiintSize1: `M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,\n  oiiintSize2: `M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,\n  rightarrow: `M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z`,\n  rightbrace: `M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,\n  rightbraceunder: `M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,\n  rightgroup: `M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z`,\n  rightgroupunder: `M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,\n  rightharpoon: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z`,\n  rightharpoonplus: `M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,\n  rightharpoondown: `M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,\n  rightharpoondownplus: `M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z`,\n  righthook: `M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,\n  rightlinesegment: `M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,\n  rightToFrom: `M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,\n  // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n  twoheadleftarrow: `M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,\n  twoheadrightarrow: `M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,\n  // tilde1 is a modified version of a glyph from the MnSymbol package\n  tilde1: `M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z`,\n  // ditto tilde2, tilde3, & tilde4\n  tilde2: `M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,\n  tilde3: `M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z`,\n  tilde4: `M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z`,\n  // vec is from glyph U+20D7 in font KaTeX Main\n  vec: `M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z`,\n  // widehat1 is a modified version of a glyph from the MnSymbol package\n  widehat1: `M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,\n  // ditto widehat2, widehat3, & widehat4\n  widehat2: `M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  widehat3: `M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  widehat4: `M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,\n  // widecheck paths are all inverted versions of widehat\n  widecheck1: `M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,\n  widecheck2: `M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  widecheck3: `M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  widecheck4: `M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,\n  // The next ten paths support reaction arrows from the mhchem package.\n  // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n  // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n  baraboveleftarrow: `M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,\n  // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n  rightarrowabovebar: `M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,\n  // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n  // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n  baraboveshortleftharpoon: `M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,\n  rightharpoonaboveshortbar: `M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,\n  shortbaraboveleftharpoon: `M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,\n  shortrightharpoonabovebar: `M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`\n};\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nclass DocumentFragment {\n  // HtmlDomNode\n  // Never used; needed for satisfying interface.\n  constructor(children) {\n    this.children = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.children = children;\n    this.classes = [];\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = {};\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /** Convert the fragment into a node. */\n\n\n  toNode() {\n    const frag = document.createDocumentFragment();\n\n    for (let i = 0; i < this.children.length; i++) {\n      frag.appendChild(this.children[i].toNode());\n    }\n\n    return frag;\n  }\n  /** Convert the fragment into HTML markup. */\n\n\n  toMarkup() {\n    let markup = \"\"; // Simply concatenate the markup for the children together.\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText. Applies to\n   * MathDomNode's only.\n   */\n\n\n  toText() {\n    // To avoid this, we would subclass documentFragment separately for\n    // MathML, but polyfills for subclassing is expensive per PR 1469.\n    // $FlowFixMe: Only works for ChildType = MathDomNode.\n    const toText = child => child.toText();\n\n    return this.children.map(toText).join(\"\");\n  }\n\n}\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nconst createClass = function createClass(classes) {\n  return classes.filter(cls => cls).join(\" \");\n};\n\nconst initNode = function initNode(classes, options, style) {\n  this.classes = classes || [];\n  this.attributes = {};\n  this.height = 0;\n  this.depth = 0;\n  this.maxFontSize = 0;\n  this.style = style || {};\n\n  if (options) {\n    if (options.style.isTight()) {\n      this.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      this.style.color = color;\n    }\n  }\n};\n/**\n * Convert into an HTML node\n */\n\n\nconst toNode = function toNode(tagName) {\n  const node = document.createElement(tagName); // Apply the class\n\n  node.className = createClass(this.classes); // Apply inline styles\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      // $FlowFixMe Flow doesn't seem to understand span.style's type.\n      node.style[style] = this.style[style];\n    }\n  } // Apply attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      node.setAttribute(attr, this.attributes[attr]);\n    }\n  } // Append the children, also as HTML nodes\n\n\n  for (let i = 0; i < this.children.length; i++) {\n    node.appendChild(this.children[i].toNode());\n  }\n\n  return node;\n};\n/**\n * Convert into an HTML markup string\n */\n\n\nconst toMarkup = function toMarkup(tagName) {\n  let markup = `<${tagName}`; // Add the class\n\n  if (this.classes.length) {\n    markup += ` class=\"${utils.escape(createClass(this.classes))}\"`;\n  }\n\n  let styles = \"\"; // Add the styles, after hyphenation\n\n  for (const style in this.style) {\n    if (this.style.hasOwnProperty(style)) {\n      styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n    }\n  }\n\n  if (styles) {\n    markup += ` style=\"${utils.escape(styles)}\"`;\n  } // Add the attributes\n\n\n  for (const attr in this.attributes) {\n    if (this.attributes.hasOwnProperty(attr)) {\n      markup += ` ${attr}=\"${utils.escape(this.attributes[attr])}\"`;\n    }\n  }\n\n  markup += \">\"; // Add the markup of the children, also as markup\n\n  for (let i = 0; i < this.children.length; i++) {\n    markup += this.children[i].toMarkup();\n  }\n\n  markup += `</${tagName}>`;\n  return markup;\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n// This type does not include all CSS properties. Additional properties should\n// be added as needed.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nclass Span {\n  constructor(classes, children, options, style) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options, style);\n    this.children = children || [];\n  }\n  /**\n   * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n   * all browsers support attributes the same, and having too many custom\n   * attributes is probably bad.\n   */\n\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"span\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"span\");\n  }\n\n}\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\n\nclass Anchor {\n  constructor(href, classes, children, options) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    initNode.call(this, classes, options);\n    this.children = children || [];\n    this.setAttribute('href', href);\n  }\n\n  setAttribute(attribute, value) {\n    this.attributes[attribute] = value;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    return toNode.call(this, \"a\");\n  }\n\n  toMarkup() {\n    return toMarkup.call(this, \"a\");\n  }\n\n}\n/**\n * This node represents an image embed (<img>) element.\n */\n\nclass Img {\n  constructor(src, alt, style) {\n    this.src = void 0;\n    this.alt = void 0;\n    this.classes = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.maxFontSize = void 0;\n    this.style = void 0;\n    this.alt = alt;\n    this.src = src;\n    this.classes = [\"mord\"];\n    this.style = style;\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n\n  toNode() {\n    const node = document.createElement(\"img\");\n    node.src = this.src;\n    node.alt = this.alt;\n    node.className = \"mord\"; // Apply inline styles\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        // $FlowFixMe\n        node.style[style] = this.style[style];\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = `<img  src='${this.src} 'alt='${this.alt}' `; // Add the styles, after hyphenation\n\n    let styles = \"\";\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += `${utils.hyphenate(style)}:${this.style[style]};`;\n      }\n    }\n\n    if (styles) {\n      markup += ` style=\"${utils.escape(styles)}\"`;\n    }\n\n    markup += \"'/>\";\n    return markup;\n  }\n\n}\nconst iCombinations = {\n  '\u00EE': '\\u0131\\u0302',\n  '\u00EF': '\\u0131\\u0308',\n  '\u00ED': '\\u0131\\u0301',\n  // '\u012B': '\\u0131\\u0304', // enable when we add Extended Latin\n  '\u00EC': '\\u0131\\u0300'\n};\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\n\nclass SymbolNode {\n  constructor(text, height, depth, italic, skew, width, classes, style) {\n    this.text = void 0;\n    this.height = void 0;\n    this.depth = void 0;\n    this.italic = void 0;\n    this.skew = void 0;\n    this.width = void 0;\n    this.maxFontSize = void 0;\n    this.classes = void 0;\n    this.style = void 0;\n    this.text = text;\n    this.height = height || 0;\n    this.depth = depth || 0;\n    this.italic = italic || 0;\n    this.skew = skew || 0;\n    this.width = width || 0;\n    this.classes = classes || [];\n    this.style = style || {};\n    this.maxFontSize = 0; // Mark text from non-Latin scripts with specific classes so that we\n    // can specify which fonts to use.  This allows us to render these\n    // characters with a serif font in situations where the browser would\n    // either default to a sans serif or render a placeholder character.\n    // We use CSS class names like cjk_fallback, hangul_fallback and\n    // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n    // script names\n\n    const script = scriptFromCodepoint(this.text.charCodeAt(0));\n\n    if (script) {\n      this.classes.push(script + \"_fallback\");\n    }\n\n    if (/[\u00EE\u00EF\u00ED\u00EC]/.test(this.text)) {\n      // add \u012B when we add Extended Latin\n      this.text = iCombinations[this.text];\n    }\n  }\n\n  hasClass(className) {\n    return utils.contains(this.classes, className);\n  }\n  /**\n   * Creates a text node or span from a symbol node. Note that a span is only\n   * created if it is needed.\n   */\n\n\n  toNode() {\n    const node = document.createTextNode(this.text);\n    let span = null;\n\n    if (this.italic > 0) {\n      span = document.createElement(\"span\");\n      span.style.marginRight = this.italic + \"em\";\n    }\n\n    if (this.classes.length > 0) {\n      span = span || document.createElement(\"span\");\n      span.className = createClass(this.classes);\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        span = span || document.createElement(\"span\"); // $FlowFixMe Flow doesn't seem to understand span.style's type.\n\n        span.style[style] = this.style[style];\n      }\n    }\n\n    if (span) {\n      span.appendChild(node);\n      return span;\n    } else {\n      return node;\n    }\n  }\n  /**\n   * Creates markup for a symbol node.\n   */\n\n\n  toMarkup() {\n    // TODO(alpert): More duplication than I'd like from\n    // span.prototype.toMarkup and symbolNode.prototype.toNode...\n    let needsSpan = false;\n    let markup = \"<span\";\n\n    if (this.classes.length) {\n      needsSpan = true;\n      markup += \" class=\\\"\";\n      markup += utils.escape(createClass(this.classes));\n      markup += \"\\\"\";\n    }\n\n    let styles = \"\";\n\n    if (this.italic > 0) {\n      styles += \"margin-right:\" + this.italic + \"em;\";\n    }\n\n    for (const style in this.style) {\n      if (this.style.hasOwnProperty(style)) {\n        styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";\n      }\n    }\n\n    if (styles) {\n      needsSpan = true;\n      markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    const escaped = utils.escape(this.text);\n\n    if (needsSpan) {\n      markup += \">\";\n      markup += escaped;\n      markup += \"</span>\";\n      return markup;\n    } else {\n      return escaped;\n    }\n  }\n\n}\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\n\nclass SvgNode {\n  constructor(children, attributes) {\n    this.children = void 0;\n    this.attributes = void 0;\n    this.children = children || [];\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"svg\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<svg\"; // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += ` ${attr}='${this.attributes[attr]}'`;\n      }\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</svg>\";\n    return markup;\n  }\n\n}\nclass PathNode {\n  constructor(pathName, alternate) {\n    this.pathName = void 0;\n    this.alternate = void 0;\n    this.pathName = pathName;\n    this.alternate = alternate; // Used only for \\sqrt\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"path\");\n\n    if (this.alternate) {\n      node.setAttribute(\"d\", this.alternate);\n    } else {\n      node.setAttribute(\"d\", path[this.pathName]);\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    if (this.alternate) {\n      return `<path d='${this.alternate}'/>`;\n    } else {\n      return `<path d='${path[this.pathName]}'/>`;\n    }\n  }\n\n}\nclass LineNode {\n  constructor(attributes) {\n    this.attributes = void 0;\n    this.attributes = attributes || {};\n  }\n\n  toNode() {\n    const svgNS = \"http://www.w3.org/2000/svg\";\n    const node = document.createElementNS(svgNS, \"line\"); // Apply attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    return node;\n  }\n\n  toMarkup() {\n    let markup = \"<line\";\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += ` ${attr}='${this.attributes[attr]}'`;\n      }\n    }\n\n    markup += \"/>\";\n    return markup;\n  }\n\n}\nfunction assertSymbolDomNode(group) {\n  if (group instanceof SymbolNode) {\n    return group;\n  } else {\n    throw new Error(`Expected symbolNode but got ${String(group)}.`);\n  }\n}\nfunction assertSpan(group) {\n  if (group instanceof Span) {\n    return group;\n  } else {\n    throw new Error(`Expected span<HtmlDomNode> but got ${String(group)}.`);\n  }\n}\n\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\nvar metricMap = {\n  \"AMS-Regular\": {\n    \"65\": [0, 0.68889, 0, 0, 0.72222],\n    \"66\": [0, 0.68889, 0, 0, 0.66667],\n    \"67\": [0, 0.68889, 0, 0, 0.72222],\n    \"68\": [0, 0.68889, 0, 0, 0.72222],\n    \"69\": [0, 0.68889, 0, 0, 0.66667],\n    \"70\": [0, 0.68889, 0, 0, 0.61111],\n    \"71\": [0, 0.68889, 0, 0, 0.77778],\n    \"72\": [0, 0.68889, 0, 0, 0.77778],\n    \"73\": [0, 0.68889, 0, 0, 0.38889],\n    \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n    \"75\": [0, 0.68889, 0, 0, 0.77778],\n    \"76\": [0, 0.68889, 0, 0, 0.66667],\n    \"77\": [0, 0.68889, 0, 0, 0.94445],\n    \"78\": [0, 0.68889, 0, 0, 0.72222],\n    \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"80\": [0, 0.68889, 0, 0, 0.61111],\n    \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n    \"82\": [0, 0.68889, 0, 0, 0.72222],\n    \"83\": [0, 0.68889, 0, 0, 0.55556],\n    \"84\": [0, 0.68889, 0, 0, 0.66667],\n    \"85\": [0, 0.68889, 0, 0, 0.72222],\n    \"86\": [0, 0.68889, 0, 0, 0.72222],\n    \"87\": [0, 0.68889, 0, 0, 1.0],\n    \"88\": [0, 0.68889, 0, 0, 0.72222],\n    \"89\": [0, 0.68889, 0, 0, 0.72222],\n    \"90\": [0, 0.68889, 0, 0, 0.66667],\n    \"107\": [0, 0.68889, 0, 0, 0.55556],\n    \"165\": [0, 0.675, 0.025, 0, 0.75],\n    \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n    \"240\": [0, 0.68889, 0, 0, 0.55556],\n    \"295\": [0, 0.68889, 0, 0, 0.54028],\n    \"710\": [0, 0.825, 0, 0, 2.33334],\n    \"732\": [0, 0.9, 0, 0, 2.33334],\n    \"770\": [0, 0.825, 0, 0, 2.33334],\n    \"771\": [0, 0.9, 0, 0, 2.33334],\n    \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"8245\": [0, 0.54986, 0, 0, 0.275],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8487\": [0, 0.68889, 0, 0, 0.72222],\n    \"8498\": [0, 0.68889, 0, 0, 0.55556],\n    \"8502\": [0, 0.68889, 0, 0, 0.66667],\n    \"8503\": [0, 0.68889, 0, 0, 0.44445],\n    \"8504\": [0, 0.68889, 0, 0, 0.66667],\n    \"8513\": [0, 0.68889, 0, 0, 0.63889],\n    \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n    \"8619\": [0, 0.54986, 0, 0, 1.0],\n    \"8620\": [0, 0.54986, 0, 0, 1.0],\n    \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n    \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8624\": [0, 0.69224, 0, 0, 0.5],\n    \"8625\": [0, 0.69224, 0, 0, 0.5],\n    \"8630\": [0, 0.43056, 0, 0, 1.0],\n    \"8631\": [0, 0.43056, 0, 0, 1.0],\n    \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n    \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n    \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n    \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n    \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n    \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n    \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n    \"8705\": [0, 0.825, 0, 0, 0.5],\n    \"8708\": [0, 0.68889, 0, 0, 0.55556],\n    \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8717\": [0, 0.43056, 0, 0, 0.42917],\n    \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n    \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n    \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8733\": [0, 0.69224, 0, 0, 0.77778],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8737\": [0, 0.69224, 0, 0, 0.72222],\n    \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n    \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n    \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n    \"8756\": [0, 0.69224, 0, 0, 0.66667],\n    \"8757\": [0, 0.69224, 0, 0, 0.66667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n    \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n    \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8790\": [0, 0.69224, 0, 0, 0.77778],\n    \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n    \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n    \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n    \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n    \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n    \"8862\": [0, 0.675, 0, 0, 0.77778],\n    \"8863\": [0, 0.675, 0, 0, 0.77778],\n    \"8864\": [0, 0.675, 0, 0, 0.77778],\n    \"8865\": [0, 0.675, 0, 0, 0.77778],\n    \"8872\": [0, 0.69224, 0, 0, 0.61111],\n    \"8873\": [0, 0.69224, 0, 0, 0.72222],\n    \"8874\": [0, 0.69224, 0, 0, 0.88889],\n    \"8876\": [0, 0.68889, 0, 0, 0.61111],\n    \"8877\": [0, 0.68889, 0, 0, 0.61111],\n    \"8878\": [0, 0.68889, 0, 0, 0.72222],\n    \"8879\": [0, 0.68889, 0, 0, 0.72222],\n    \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8888\": [0, 0.54986, 0, 0, 1.11111],\n    \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n    \"8901\": [0, 0.54986, 0, 0, 0.27778],\n    \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"8907\": [0, 0.69224, 0, 0, 0.77778],\n    \"8908\": [0, 0.69224, 0, 0, 0.77778],\n    \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n    \"8910\": [0, 0.54986, 0, 0, 0.76042],\n    \"8911\": [0, 0.54986, 0, 0, 0.76042],\n    \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"8914\": [0, 0.54986, 0, 0, 0.66667],\n    \"8915\": [0, 0.54986, 0, 0, 0.66667],\n    \"8916\": [0, 0.69224, 0, 0, 0.66667],\n    \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n    \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n    \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n    \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n    \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n    \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n    \"9484\": [0, 0.69224, 0, 0, 0.5],\n    \"9488\": [0, 0.69224, 0, 0, 0.5],\n    \"9492\": [0, 0.37788, 0, 0, 0.5],\n    \"9496\": [0, 0.37788, 0, 0, 0.5],\n    \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n    \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n    \"9632\": [0, 0.675, 0, 0, 0.77778],\n    \"9633\": [0, 0.675, 0, 0, 0.77778],\n    \"9650\": [0, 0.54986, 0, 0, 0.72222],\n    \"9651\": [0, 0.54986, 0, 0, 0.72222],\n    \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9660\": [0, 0.54986, 0, 0, 0.72222],\n    \"9661\": [0, 0.54986, 0, 0, 0.72222],\n    \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n    \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n    \"10003\": [0, 0.69224, 0, 0, 0.83334],\n    \"10016\": [0, 0.69224, 0, 0, 0.83334],\n    \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n    \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n    \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n    \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n    \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n    \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n    \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n    \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n    \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n    \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n    \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n    \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n    \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n    \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n    \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n  },\n  \"Caligraphic-Regular\": {\n    \"48\": [0, 0.43056, 0, 0, 0.5],\n    \"49\": [0, 0.43056, 0, 0, 0.5],\n    \"50\": [0, 0.43056, 0, 0, 0.5],\n    \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n    \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n    \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n    \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n    \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n    \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n    \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n    \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n    \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n    \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n    \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n    \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n    \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n    \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n    \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n    \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n    \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n    \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n    \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n    \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n    \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n    \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n    \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n    \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n    \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n    \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n    \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n  },\n  \"Fraktur-Regular\": {\n    \"33\": [0, 0.69141, 0, 0, 0.29574],\n    \"34\": [0, 0.69141, 0, 0, 0.21471],\n    \"38\": [0, 0.69141, 0, 0, 0.73786],\n    \"39\": [0, 0.69141, 0, 0, 0.21201],\n    \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n    \"42\": [0, 0.62119, 0, 0, 0.27764],\n    \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"44\": [0, 0.10803, 0, 0, 0.27764],\n    \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n    \"46\": [0, 0.10803, 0, 0, 0.27764],\n    \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n    \"48\": [0, 0.47534, 0, 0, 0.50181],\n    \"49\": [0, 0.47534, 0, 0, 0.50181],\n    \"50\": [0, 0.47534, 0, 0, 0.50181],\n    \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"54\": [0, 0.69141, 0, 0, 0.50181],\n    \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"56\": [0, 0.69141, 0, 0, 0.50181],\n    \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n    \"58\": [0, 0.47534, 0, 0, 0.21606],\n    \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n    \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n    \"63\": [0, 0.69141, 0, 0, 0.36245],\n    \"65\": [0, 0.69141, 0, 0, 0.7176],\n    \"66\": [0, 0.69141, 0, 0, 0.88397],\n    \"67\": [0, 0.69141, 0, 0, 0.61254],\n    \"68\": [0, 0.69141, 0, 0, 0.83158],\n    \"69\": [0, 0.69141, 0, 0, 0.66278],\n    \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n    \"71\": [0, 0.69141, 0, 0, 0.78539],\n    \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n    \"73\": [0, 0.69141, 0, 0, 0.55448],\n    \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n    \"75\": [0, 0.69141, 0, 0, 0.66845],\n    \"76\": [0, 0.69141, 0, 0, 0.66602],\n    \"77\": [0, 0.69141, 0, 0, 1.04953],\n    \"78\": [0, 0.69141, 0, 0, 0.83212],\n    \"79\": [0, 0.69141, 0, 0, 0.82699],\n    \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n    \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n    \"82\": [0, 0.69141, 0, 0, 0.82807],\n    \"83\": [0, 0.69141, 0, 0, 0.82861],\n    \"84\": [0, 0.69141, 0, 0, 0.66899],\n    \"85\": [0, 0.69141, 0, 0, 0.64576],\n    \"86\": [0, 0.69141, 0, 0, 0.83131],\n    \"87\": [0, 0.69141, 0, 0, 1.04602],\n    \"88\": [0, 0.69141, 0, 0, 0.71922],\n    \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n    \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n    \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n    \"94\": [0, 0.69141, 0, 0, 0.49965],\n    \"97\": [0, 0.47534, 0, 0, 0.50046],\n    \"98\": [0, 0.69141, 0, 0, 0.51315],\n    \"99\": [0, 0.47534, 0, 0, 0.38946],\n    \"100\": [0, 0.62119, 0, 0, 0.49857],\n    \"101\": [0, 0.47534, 0, 0, 0.40053],\n    \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n    \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n    \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n    \"105\": [0, 0.69141, 0, 0, 0.27899],\n    \"106\": [0, 0.69141, 0, 0, 0.28088],\n    \"107\": [0, 0.69141, 0, 0, 0.38946],\n    \"108\": [0, 0.69141, 0, 0, 0.27953],\n    \"109\": [0, 0.47534, 0, 0, 0.76676],\n    \"110\": [0, 0.47534, 0, 0, 0.52666],\n    \"111\": [0, 0.47534, 0, 0, 0.48885],\n    \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n    \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n    \"114\": [0, 0.47534, 0, 0, 0.38919],\n    \"115\": [0, 0.47534, 0, 0, 0.44266],\n    \"116\": [0, 0.62119, 0, 0, 0.33301],\n    \"117\": [0, 0.47534, 0, 0, 0.5172],\n    \"118\": [0, 0.52396, 0, 0, 0.5118],\n    \"119\": [0, 0.52396, 0, 0, 0.77351],\n    \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n    \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n    \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n    \"8216\": [0, 0.69141, 0, 0, 0.21471],\n    \"8217\": [0, 0.69141, 0, 0, 0.21471],\n    \"58112\": [0, 0.62119, 0, 0, 0.49749],\n    \"58113\": [0, 0.62119, 0, 0, 0.4983],\n    \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n    \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n    \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n    \"58117\": [0, 0.69141, 0, 0, 0.33301],\n    \"58118\": [0, 0.62119, 0, 0, 0.33409],\n    \"58119\": [0, 0.47534, 0, 0, 0.50073]\n  },\n  \"Main-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.35],\n    \"34\": [0, 0.69444, 0, 0, 0.60278],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n    \"36\": [0.05556, 0.75, 0, 0, 0.575],\n    \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n    \"38\": [0, 0.69444, 0, 0, 0.89444],\n    \"39\": [0, 0.69444, 0, 0, 0.31944],\n    \"40\": [0.25, 0.75, 0, 0, 0.44722],\n    \"41\": [0.25, 0.75, 0, 0, 0.44722],\n    \"42\": [0, 0.75, 0, 0, 0.575],\n    \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n    \"45\": [0, 0.44444, 0, 0, 0.38333],\n    \"46\": [0, 0.15556, 0, 0, 0.31944],\n    \"47\": [0.25, 0.75, 0, 0, 0.575],\n    \"48\": [0, 0.64444, 0, 0, 0.575],\n    \"49\": [0, 0.64444, 0, 0, 0.575],\n    \"50\": [0, 0.64444, 0, 0, 0.575],\n    \"51\": [0, 0.64444, 0, 0, 0.575],\n    \"52\": [0, 0.64444, 0, 0, 0.575],\n    \"53\": [0, 0.64444, 0, 0, 0.575],\n    \"54\": [0, 0.64444, 0, 0, 0.575],\n    \"55\": [0, 0.64444, 0, 0, 0.575],\n    \"56\": [0, 0.64444, 0, 0, 0.575],\n    \"57\": [0, 0.64444, 0, 0, 0.575],\n    \"58\": [0, 0.44444, 0, 0, 0.31944],\n    \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n    \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"63\": [0, 0.69444, 0, 0, 0.54305],\n    \"64\": [0, 0.69444, 0, 0, 0.89444],\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0, 0, 0.81805],\n    \"67\": [0, 0.68611, 0, 0, 0.83055],\n    \"68\": [0, 0.68611, 0, 0, 0.88194],\n    \"69\": [0, 0.68611, 0, 0, 0.75555],\n    \"70\": [0, 0.68611, 0, 0, 0.72361],\n    \"71\": [0, 0.68611, 0, 0, 0.90416],\n    \"72\": [0, 0.68611, 0, 0, 0.9],\n    \"73\": [0, 0.68611, 0, 0, 0.43611],\n    \"74\": [0, 0.68611, 0, 0, 0.59444],\n    \"75\": [0, 0.68611, 0, 0, 0.90138],\n    \"76\": [0, 0.68611, 0, 0, 0.69166],\n    \"77\": [0, 0.68611, 0, 0, 1.09166],\n    \"78\": [0, 0.68611, 0, 0, 0.9],\n    \"79\": [0, 0.68611, 0, 0, 0.86388],\n    \"80\": [0, 0.68611, 0, 0, 0.78611],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n    \"82\": [0, 0.68611, 0, 0, 0.8625],\n    \"83\": [0, 0.68611, 0, 0, 0.63889],\n    \"84\": [0, 0.68611, 0, 0, 0.8],\n    \"85\": [0, 0.68611, 0, 0, 0.88472],\n    \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n    \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n    \"88\": [0, 0.68611, 0, 0, 0.86944],\n    \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n    \"90\": [0, 0.68611, 0, 0, 0.70277],\n    \"91\": [0.25, 0.75, 0, 0, 0.31944],\n    \"92\": [0.25, 0.75, 0, 0, 0.575],\n    \"93\": [0.25, 0.75, 0, 0, 0.31944],\n    \"94\": [0, 0.69444, 0, 0, 0.575],\n    \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n    \"97\": [0, 0.44444, 0, 0, 0.55902],\n    \"98\": [0, 0.69444, 0, 0, 0.63889],\n    \"99\": [0, 0.44444, 0, 0, 0.51111],\n    \"100\": [0, 0.69444, 0, 0, 0.63889],\n    \"101\": [0, 0.44444, 0, 0, 0.52708],\n    \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n    \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n    \"104\": [0, 0.69444, 0, 0, 0.63889],\n    \"105\": [0, 0.69444, 0, 0, 0.31944],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n    \"107\": [0, 0.69444, 0, 0, 0.60694],\n    \"108\": [0, 0.69444, 0, 0, 0.31944],\n    \"109\": [0, 0.44444, 0, 0, 0.95833],\n    \"110\": [0, 0.44444, 0, 0, 0.63889],\n    \"111\": [0, 0.44444, 0, 0, 0.575],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n    \"114\": [0, 0.44444, 0, 0, 0.47361],\n    \"115\": [0, 0.44444, 0, 0, 0.45361],\n    \"116\": [0, 0.63492, 0, 0, 0.44722],\n    \"117\": [0, 0.44444, 0, 0, 0.63889],\n    \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n    \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n    \"120\": [0, 0.44444, 0, 0, 0.60694],\n    \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n    \"122\": [0, 0.44444, 0, 0, 0.51111],\n    \"123\": [0.25, 0.75, 0, 0, 0.575],\n    \"124\": [0.25, 0.75, 0, 0, 0.31944],\n    \"125\": [0.25, 0.75, 0, 0, 0.575],\n    \"126\": [0.35, 0.34444, 0, 0, 0.575],\n    \"168\": [0, 0.69444, 0, 0, 0.575],\n    \"172\": [0, 0.44444, 0, 0, 0.76666],\n    \"176\": [0, 0.69444, 0, 0, 0.86944],\n    \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"184\": [0.17014, 0, 0, 0, 0.51111],\n    \"198\": [0, 0.68611, 0, 0, 1.04166],\n    \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n    \"223\": [0, 0.69444, 0, 0, 0.59722],\n    \"230\": [0, 0.44444, 0, 0, 0.83055],\n    \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n    \"305\": [0, 0.44444, 0, 0, 0.31944],\n    \"338\": [0, 0.68611, 0, 0, 1.16944],\n    \"339\": [0, 0.44444, 0, 0, 0.89444],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n    \"710\": [0, 0.69444, 0, 0, 0.575],\n    \"711\": [0, 0.63194, 0, 0, 0.575],\n    \"713\": [0, 0.59611, 0, 0, 0.575],\n    \"714\": [0, 0.69444, 0, 0, 0.575],\n    \"715\": [0, 0.69444, 0, 0, 0.575],\n    \"728\": [0, 0.69444, 0, 0, 0.575],\n    \"729\": [0, 0.69444, 0, 0, 0.31944],\n    \"730\": [0, 0.69444, 0, 0, 0.86944],\n    \"732\": [0, 0.69444, 0, 0, 0.575],\n    \"733\": [0, 0.69444, 0, 0, 0.575],\n    \"915\": [0, 0.68611, 0, 0, 0.69166],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0, 0, 0.89444],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0, 0, 0.76666],\n    \"928\": [0, 0.68611, 0, 0, 0.9],\n    \"931\": [0, 0.68611, 0, 0, 0.83055],\n    \"933\": [0, 0.68611, 0, 0, 0.89444],\n    \"934\": [0, 0.68611, 0, 0, 0.83055],\n    \"936\": [0, 0.68611, 0, 0, 0.89444],\n    \"937\": [0, 0.68611, 0, 0, 0.83055],\n    \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n    \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n    \"8216\": [0, 0.69444, 0, 0, 0.31944],\n    \"8217\": [0, 0.69444, 0, 0, 0.31944],\n    \"8220\": [0, 0.69444, 0, 0, 0.60278],\n    \"8221\": [0, 0.69444, 0, 0, 0.60278],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n    \"8242\": [0, 0.55556, 0, 0, 0.34444],\n    \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n    \"8463\": [0, 0.69444, 0, 0, 0.66759],\n    \"8465\": [0, 0.69444, 0, 0, 0.83055],\n    \"8467\": [0, 0.69444, 0, 0, 0.47361],\n    \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n    \"8476\": [0, 0.69444, 0, 0, 0.83055],\n    \"8501\": [0, 0.69444, 0, 0, 0.70277],\n    \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n    \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8597\": [0.25, 0.75, 0, 0, 0.575],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n    \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n    \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n    \"8704\": [0, 0.69444, 0, 0, 0.63889],\n    \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n    \"8707\": [0, 0.69444, 0, 0, 0.63889],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n    \"8711\": [0, 0.68611, 0, 0, 0.95833],\n    \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n    \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8725\": [0.25, 0.75, 0, 0, 0.575],\n    \"8726\": [0.25, 0.75, 0, 0, 0.575],\n    \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n    \"8733\": [0, 0.44444, 0, 0, 0.89444],\n    \"8734\": [0, 0.44444, 0, 0, 1.14999],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n    \"8741\": [0.25, 0.75, 0, 0, 0.575],\n    \"8743\": [0, 0.55556, 0, 0, 0.76666],\n    \"8744\": [0, 0.55556, 0, 0, 0.76666],\n    \"8745\": [0, 0.55556, 0, 0, 0.76666],\n    \"8746\": [0, 0.55556, 0, 0, 0.76666],\n    \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n    \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n    \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n    \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n    \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n    \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n    \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8846\": [0, 0.55556, 0, 0, 0.76666],\n    \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"8851\": [0, 0.55556, 0, 0, 0.76666],\n    \"8852\": [0, 0.55556, 0, 0, 0.76666],\n    \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n    \"8866\": [0, 0.69444, 0, 0, 0.70277],\n    \"8867\": [0, 0.69444, 0, 0, 0.70277],\n    \"8868\": [0, 0.69444, 0, 0, 0.89444],\n    \"8869\": [0, 0.69444, 0, 0, 0.89444],\n    \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n    \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n    \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n    \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n    \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n    \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n    \"9837\": [0, 0.75, 0, 0, 0.44722],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n    \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n    \"10815\": [0, 0.68611, 0, 0, 0.9],\n    \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"10928\": [0.19667, 0.69667, 0, 0, 0.89444],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Main-BoldItalic\": {\n    \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n    \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n    \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n    \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n    \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n    \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n    \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n    \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n    \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n    \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n    \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n    \"46\": [0, 0.14722, 0, 0, 0.35555],\n    \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n    \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n    \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n    \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n    \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n    \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n    \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n    \"65\": [0, 0.68611, 0, 0, 0.86555],\n    \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n    \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n    \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n    \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n    \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n    \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n    \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n    \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n    \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n    \"76\": [0, 0.68611, 0, 0, 0.69777],\n    \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n    \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n    \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n    \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n    \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n    \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n    \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n    \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n    \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n    \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n    \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n    \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n    \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n    \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n    \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n    \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n    \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n    \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n    \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n    \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n    \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n    \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n    \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n    \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n    \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n    \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n    \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n    \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n    \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n    \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n    \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n    \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n    \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n    \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n    \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n    \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n    \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n    \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n    \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n    \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n    \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n    \"163\": [0, 0.69444, 0, 0, 0.86853],\n    \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n    \"176\": [0, 0.69444, 0, 0, 0.94888],\n    \"184\": [0.17014, 0, 0, 0, 0.53222],\n    \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n    \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n    \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n    \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n    \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n    \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n    \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n    \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n    \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n    \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n    \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n    \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n    \"715\": [0, 0.69444, 0, 0, 0.59111],\n    \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n    \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"730\": [0, 0.69444, 0, 0, 0.94888],\n    \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n    \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n    \"916\": [0, 0.68611, 0, 0, 0.94444],\n    \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n    \"923\": [0, 0.68611, 0, 0, 0.80666],\n    \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n    \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n    \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n    \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n    \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n    \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n    \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n    \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n    \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n    \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n    \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n  },\n  \"Main-Italic\": {\n    \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n    \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n    \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n    \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n    \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n    \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n    \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n    \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n    \"46\": [0, 0.10556, 0, 0, 0.30667],\n    \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n    \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n    \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n    \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n    \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n    \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n    \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n    \"65\": [0, 0.68333, 0, 0, 0.74333],\n    \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n    \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n    \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n    \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n    \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n    \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n    \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n    \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n    \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n    \"76\": [0, 0.68333, 0, 0, 0.62722],\n    \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n    \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n    \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n    \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n    \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n    \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n    \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n    \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n    \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n    \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n    \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n    \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n    \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n    \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n    \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n    \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n    \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n    \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n    \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n    \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n    \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n    \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n    \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n    \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n    \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n    \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n    \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n    \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n    \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n    \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n    \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n    \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n    \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n    \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n    \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n    \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n    \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n    \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n    \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n    \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n    \"163\": [0, 0.69444, 0, 0, 0.76909],\n    \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n    \"176\": [0, 0.69444, 0, 0, 0.83129],\n    \"184\": [0.17014, 0, 0, 0, 0.46],\n    \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n    \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n    \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n    \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n    \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n    \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n    \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n    \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n    \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n    \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n    \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n    \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n    \"715\": [0, 0.69444, 0, 0, 0.51111],\n    \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n    \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n    \"730\": [0, 0.69444, 0, 0, 0.83129],\n    \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n    \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n    \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n    \"916\": [0, 0.68333, 0, 0, 0.81777],\n    \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n    \"923\": [0, 0.68333, 0, 0, 0.69222],\n    \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n    \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n    \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n    \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n    \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n    \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n    \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n    \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n    \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n    \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n    \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028]\n  },\n  \"Main-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.25],\n    \"33\": [0, 0.69444, 0, 0, 0.27778],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.77778],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n    \"45\": [0, 0.43056, 0, 0, 0.33333],\n    \"46\": [0, 0.10556, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.64444, 0, 0, 0.5],\n    \"49\": [0, 0.64444, 0, 0, 0.5],\n    \"50\": [0, 0.64444, 0, 0, 0.5],\n    \"51\": [0, 0.64444, 0, 0, 0.5],\n    \"52\": [0, 0.64444, 0, 0, 0.5],\n    \"53\": [0, 0.64444, 0, 0, 0.5],\n    \"54\": [0, 0.64444, 0, 0, 0.5],\n    \"55\": [0, 0.64444, 0, 0, 0.5],\n    \"56\": [0, 0.64444, 0, 0, 0.5],\n    \"57\": [0, 0.64444, 0, 0, 0.5],\n    \"58\": [0, 0.43056, 0, 0, 0.27778],\n    \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n    \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.77778],\n    \"65\": [0, 0.68333, 0, 0, 0.75],\n    \"66\": [0, 0.68333, 0, 0, 0.70834],\n    \"67\": [0, 0.68333, 0, 0, 0.72222],\n    \"68\": [0, 0.68333, 0, 0, 0.76389],\n    \"69\": [0, 0.68333, 0, 0, 0.68056],\n    \"70\": [0, 0.68333, 0, 0, 0.65278],\n    \"71\": [0, 0.68333, 0, 0, 0.78472],\n    \"72\": [0, 0.68333, 0, 0, 0.75],\n    \"73\": [0, 0.68333, 0, 0, 0.36111],\n    \"74\": [0, 0.68333, 0, 0, 0.51389],\n    \"75\": [0, 0.68333, 0, 0, 0.77778],\n    \"76\": [0, 0.68333, 0, 0, 0.625],\n    \"77\": [0, 0.68333, 0, 0, 0.91667],\n    \"78\": [0, 0.68333, 0, 0, 0.75],\n    \"79\": [0, 0.68333, 0, 0, 0.77778],\n    \"80\": [0, 0.68333, 0, 0, 0.68056],\n    \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n    \"82\": [0, 0.68333, 0, 0, 0.73611],\n    \"83\": [0, 0.68333, 0, 0, 0.55556],\n    \"84\": [0, 0.68333, 0, 0, 0.72222],\n    \"85\": [0, 0.68333, 0, 0, 0.75],\n    \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n    \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n    \"88\": [0, 0.68333, 0, 0, 0.75],\n    \"89\": [0, 0.68333, 0.025, 0, 0.75],\n    \"90\": [0, 0.68333, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.27778],\n    \"92\": [0.25, 0.75, 0, 0, 0.5],\n    \"93\": [0.25, 0.75, 0, 0, 0.27778],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n    \"97\": [0, 0.43056, 0, 0, 0.5],\n    \"98\": [0, 0.69444, 0, 0, 0.55556],\n    \"99\": [0, 0.43056, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.55556],\n    \"101\": [0, 0.43056, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n    \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.55556],\n    \"105\": [0, 0.66786, 0, 0, 0.27778],\n    \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n    \"107\": [0, 0.69444, 0, 0, 0.52778],\n    \"108\": [0, 0.69444, 0, 0, 0.27778],\n    \"109\": [0, 0.43056, 0, 0, 0.83334],\n    \"110\": [0, 0.43056, 0, 0, 0.55556],\n    \"111\": [0, 0.43056, 0, 0, 0.5],\n    \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n    \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n    \"114\": [0, 0.43056, 0, 0, 0.39167],\n    \"115\": [0, 0.43056, 0, 0, 0.39445],\n    \"116\": [0, 0.61508, 0, 0, 0.38889],\n    \"117\": [0, 0.43056, 0, 0, 0.55556],\n    \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n    \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n    \"120\": [0, 0.43056, 0, 0, 0.52778],\n    \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n    \"122\": [0, 0.43056, 0, 0, 0.44445],\n    \"123\": [0.25, 0.75, 0, 0, 0.5],\n    \"124\": [0.25, 0.75, 0, 0, 0.27778],\n    \"125\": [0.25, 0.75, 0, 0, 0.5],\n    \"126\": [0.35, 0.31786, 0, 0, 0.5],\n    \"160\": [0, 0, 0, 0, 0.25],\n    \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"168\": [0, 0.66786, 0, 0, 0.5],\n    \"172\": [0, 0.43056, 0, 0, 0.66667],\n    \"176\": [0, 0.69444, 0, 0, 0.75],\n    \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"198\": [0, 0.68333, 0, 0, 0.90278],\n    \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n    \"223\": [0, 0.69444, 0, 0, 0.5],\n    \"230\": [0, 0.43056, 0, 0, 0.72222],\n    \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n    \"305\": [0, 0.43056, 0, 0, 0.27778],\n    \"338\": [0, 0.68333, 0, 0, 1.01389],\n    \"339\": [0, 0.43056, 0, 0, 0.77778],\n    \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.62847, 0, 0, 0.5],\n    \"713\": [0, 0.56778, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.66786, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.75],\n    \"732\": [0, 0.66786, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.68333, 0, 0, 0.625],\n    \"916\": [0, 0.68333, 0, 0, 0.83334],\n    \"920\": [0, 0.68333, 0, 0, 0.77778],\n    \"923\": [0, 0.68333, 0, 0, 0.69445],\n    \"926\": [0, 0.68333, 0, 0, 0.66667],\n    \"928\": [0, 0.68333, 0, 0, 0.75],\n    \"931\": [0, 0.68333, 0, 0, 0.72222],\n    \"933\": [0, 0.68333, 0, 0, 0.77778],\n    \"934\": [0, 0.68333, 0, 0, 0.72222],\n    \"936\": [0, 0.68333, 0, 0, 0.77778],\n    \"937\": [0, 0.68333, 0, 0, 0.72222],\n    \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5],\n    \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n    \"8230\": [0, 0.12, 0, 0, 1.172],\n    \"8242\": [0, 0.55556, 0, 0, 0.275],\n    \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n    \"8463\": [0, 0.68889, 0, 0, 0.54028],\n    \"8465\": [0, 0.69444, 0, 0, 0.72222],\n    \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n    \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n    \"8476\": [0, 0.69444, 0, 0, 0.72222],\n    \"8501\": [0, 0.69444, 0, 0, 0.61111],\n    \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n    \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8597\": [0.25, 0.75, 0, 0, 0.5],\n    \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"8614\": [0.011, 0.511, 0, 0, 1.0],\n    \"8617\": [0.011, 0.511, 0, 0, 1.126],\n    \"8618\": [0.011, 0.511, 0, 0, 1.126],\n    \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8652\": [0.011, 0.671, 0, 0, 1.0],\n    \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n    \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n    \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n    \"8704\": [0, 0.69444, 0, 0, 0.55556],\n    \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n    \"8707\": [0, 0.69444, 0, 0, 0.55556],\n    \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n    \"8711\": [0, 0.68333, 0, 0, 0.83334],\n    \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n    \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8725\": [0.25, 0.75, 0, 0, 0.5],\n    \"8726\": [0.25, 0.75, 0, 0, 0.5],\n    \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n    \"8733\": [0, 0.43056, 0, 0, 0.77778],\n    \"8734\": [0, 0.43056, 0, 0, 1.0],\n    \"8736\": [0, 0.69224, 0, 0, 0.72222],\n    \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n    \"8741\": [0.25, 0.75, 0, 0, 0.5],\n    \"8743\": [0, 0.55556, 0, 0, 0.66667],\n    \"8744\": [0, 0.55556, 0, 0, 0.66667],\n    \"8745\": [0, 0.55556, 0, 0, 0.66667],\n    \"8746\": [0, 0.55556, 0, 0, 0.66667],\n    \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n    \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n    \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n    \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n    \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n    \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n    \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n    \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n    \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n    \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8846\": [0, 0.55556, 0, 0, 0.66667],\n    \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"8851\": [0, 0.55556, 0, 0, 0.66667],\n    \"8852\": [0, 0.55556, 0, 0, 0.66667],\n    \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"8866\": [0, 0.69444, 0, 0, 0.61111],\n    \"8867\": [0, 0.69444, 0, 0, 0.61111],\n    \"8868\": [0, 0.69444, 0, 0, 0.77778],\n    \"8869\": [0, 0.69444, 0, 0, 0.77778],\n    \"8872\": [0.249, 0.75, 0, 0, 0.867],\n    \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n    \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n    \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"8904\": [0.005, 0.505, 0, 0, 0.9],\n    \"8942\": [0.03, 0.9, 0, 0, 0.278],\n    \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n    \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n    \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n    \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n    \"9136\": [0.244, 0.744, 0, 0, 0.412],\n    \"9137\": [0.244, 0.744, 0, 0, 0.412],\n    \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n    \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n    \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n    \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n    \"9837\": [0, 0.75, 0, 0, 0.38889],\n    \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n    \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n    \"10222\": [0.244, 0.744, 0, 0, 0.412],\n    \"10223\": [0.244, 0.744, 0, 0, 0.412],\n    \"10229\": [0.011, 0.511, 0, 0, 1.609],\n    \"10230\": [0.011, 0.511, 0, 0, 1.638],\n    \"10231\": [0.011, 0.511, 0, 0, 1.859],\n    \"10232\": [0.024, 0.525, 0, 0, 1.609],\n    \"10233\": [0.024, 0.525, 0, 0, 1.638],\n    \"10234\": [0.024, 0.525, 0, 0, 1.858],\n    \"10236\": [0.011, 0.511, 0, 0, 1.638],\n    \"10815\": [0, 0.68333, 0, 0, 0.75],\n    \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"10928\": [0.13597, 0.63597, 0, 0, 0.77778],\n    \"57376\": [0.19444, 0.69444, 0, 0, 0]\n  },\n  \"Math-BoldItalic\": {\n    \"65\": [0, 0.68611, 0, 0, 0.86944],\n    \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n    \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n    \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n    \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n    \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n    \"71\": [0, 0.68611, 0, 0, 0.88673],\n    \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n    \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n    \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n    \"76\": [0, 0.68611, 0, 0, 0.75555],\n    \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n    \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n    \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n    \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n    \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n    \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n    \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n    \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n    \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n    \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n    \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n    \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n    \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n    \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n    \"97\": [0, 0.44444, 0, 0, 0.63287],\n    \"98\": [0, 0.69444, 0, 0, 0.52083],\n    \"99\": [0, 0.44444, 0, 0, 0.51342],\n    \"100\": [0, 0.69444, 0, 0, 0.60972],\n    \"101\": [0, 0.44444, 0, 0, 0.55361],\n    \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n    \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n    \"104\": [0, 0.69444, 0, 0, 0.66759],\n    \"105\": [0, 0.69326, 0, 0, 0.4048],\n    \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n    \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n    \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n    \"109\": [0, 0.44444, 0, 0, 1.0324],\n    \"110\": [0, 0.44444, 0, 0, 0.71296],\n    \"111\": [0, 0.44444, 0, 0, 0.58472],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n    \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n    \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n    \"115\": [0, 0.44444, 0, 0, 0.53125],\n    \"116\": [0, 0.63492, 0, 0, 0.41528],\n    \"117\": [0, 0.44444, 0, 0, 0.68102],\n    \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n    \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n    \"120\": [0, 0.44444, 0, 0, 0.65903],\n    \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n    \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n    \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n    \"916\": [0, 0.68611, 0, 0, 0.95833],\n    \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n    \"923\": [0, 0.68611, 0, 0, 0.80555],\n    \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n    \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n    \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n    \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n    \"934\": [0, 0.68611, 0, 0, 0.76666],\n    \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n    \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n    \"945\": [0, 0.44444, 0, 0, 0.76064],\n    \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n    \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n    \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n    \"949\": [0, 0.44444, 0, 0, 0.52882],\n    \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n    \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n    \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n    \"953\": [0, 0.44444, 0, 0, 0.41204],\n    \"954\": [0, 0.44444, 0, 0, 0.66759],\n    \"955\": [0, 0.69444, 0, 0, 0.67083],\n    \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n    \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n    \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n    \"959\": [0, 0.44444, 0, 0, 0.58472],\n    \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n    \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n    \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n    \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n    \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n    \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n    \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n    \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n    \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n    \"977\": [0, 0.69444, 0, 0, 0.69155],\n    \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n    \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n    \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n    \"1013\": [0, 0.44444, 0, 0, 0.48333]\n  },\n  \"Math-Italic\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"Math-Regular\": {\n    \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n    \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n    \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n    \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n    \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n    \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n    \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n    \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n    \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n    \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n    \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n    \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n    \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n    \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n    \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n    \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n    \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n    \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n    \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n    \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n    \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n    \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n    \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n    \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n    \"97\": [0, 0.43056, 0, 0, 0.52859],\n    \"98\": [0, 0.69444, 0, 0, 0.42917],\n    \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n    \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n    \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n    \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n    \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n    \"104\": [0, 0.69444, 0, 0, 0.57616],\n    \"105\": [0, 0.65952, 0, 0, 0.34451],\n    \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n    \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n    \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n    \"109\": [0, 0.43056, 0, 0, 0.87801],\n    \"110\": [0, 0.43056, 0, 0, 0.60023],\n    \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n    \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n    \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n    \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n    \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n    \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n    \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n    \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n    \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n    \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n    \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n    \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n    \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n    \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n    \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n    \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n    \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n    \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n    \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n    \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n    \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n    \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n    \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n    \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n    \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n    \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n    \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n    \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n    \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n    \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n    \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n    \"954\": [0, 0.43056, 0, 0, 0.57616],\n    \"955\": [0, 0.69444, 0, 0, 0.58334],\n    \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n    \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n    \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n    \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n    \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n    \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n    \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n    \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n    \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n    \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n    \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n    \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n    \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n    \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n    \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n    \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n    \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n    \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n  },\n  \"SansSerif-Bold\": {\n    \"33\": [0, 0.69444, 0, 0, 0.36667],\n    \"34\": [0, 0.69444, 0, 0, 0.55834],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n    \"36\": [0.05556, 0.75, 0, 0, 0.55],\n    \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n    \"38\": [0, 0.69444, 0, 0, 0.83056],\n    \"39\": [0, 0.69444, 0, 0, 0.30556],\n    \"40\": [0.25, 0.75, 0, 0, 0.42778],\n    \"41\": [0.25, 0.75, 0, 0, 0.42778],\n    \"42\": [0, 0.75, 0, 0, 0.55],\n    \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n    \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n    \"45\": [0, 0.45833, 0, 0, 0.36667],\n    \"46\": [0, 0.13056, 0, 0, 0.30556],\n    \"47\": [0.25, 0.75, 0, 0, 0.55],\n    \"48\": [0, 0.69444, 0, 0, 0.55],\n    \"49\": [0, 0.69444, 0, 0, 0.55],\n    \"50\": [0, 0.69444, 0, 0, 0.55],\n    \"51\": [0, 0.69444, 0, 0, 0.55],\n    \"52\": [0, 0.69444, 0, 0, 0.55],\n    \"53\": [0, 0.69444, 0, 0, 0.55],\n    \"54\": [0, 0.69444, 0, 0, 0.55],\n    \"55\": [0, 0.69444, 0, 0, 0.55],\n    \"56\": [0, 0.69444, 0, 0, 0.55],\n    \"57\": [0, 0.69444, 0, 0, 0.55],\n    \"58\": [0, 0.45833, 0, 0, 0.30556],\n    \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n    \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n    \"63\": [0, 0.69444, 0, 0, 0.51945],\n    \"64\": [0, 0.69444, 0, 0, 0.73334],\n    \"65\": [0, 0.69444, 0, 0, 0.73334],\n    \"66\": [0, 0.69444, 0, 0, 0.73334],\n    \"67\": [0, 0.69444, 0, 0, 0.70278],\n    \"68\": [0, 0.69444, 0, 0, 0.79445],\n    \"69\": [0, 0.69444, 0, 0, 0.64167],\n    \"70\": [0, 0.69444, 0, 0, 0.61111],\n    \"71\": [0, 0.69444, 0, 0, 0.73334],\n    \"72\": [0, 0.69444, 0, 0, 0.79445],\n    \"73\": [0, 0.69444, 0, 0, 0.33056],\n    \"74\": [0, 0.69444, 0, 0, 0.51945],\n    \"75\": [0, 0.69444, 0, 0, 0.76389],\n    \"76\": [0, 0.69444, 0, 0, 0.58056],\n    \"77\": [0, 0.69444, 0, 0, 0.97778],\n    \"78\": [0, 0.69444, 0, 0, 0.79445],\n    \"79\": [0, 0.69444, 0, 0, 0.79445],\n    \"80\": [0, 0.69444, 0, 0, 0.70278],\n    \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n    \"82\": [0, 0.69444, 0, 0, 0.70278],\n    \"83\": [0, 0.69444, 0, 0, 0.61111],\n    \"84\": [0, 0.69444, 0, 0, 0.73334],\n    \"85\": [0, 0.69444, 0, 0, 0.76389],\n    \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n    \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n    \"88\": [0, 0.69444, 0, 0, 0.73334],\n    \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n    \"90\": [0, 0.69444, 0, 0, 0.67223],\n    \"91\": [0.25, 0.75, 0, 0, 0.34306],\n    \"93\": [0.25, 0.75, 0, 0, 0.34306],\n    \"94\": [0, 0.69444, 0, 0, 0.55],\n    \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n    \"97\": [0, 0.45833, 0, 0, 0.525],\n    \"98\": [0, 0.69444, 0, 0, 0.56111],\n    \"99\": [0, 0.45833, 0, 0, 0.48889],\n    \"100\": [0, 0.69444, 0, 0, 0.56111],\n    \"101\": [0, 0.45833, 0, 0, 0.51111],\n    \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n    \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n    \"104\": [0, 0.69444, 0, 0, 0.56111],\n    \"105\": [0, 0.69444, 0, 0, 0.25556],\n    \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n    \"107\": [0, 0.69444, 0, 0, 0.53056],\n    \"108\": [0, 0.69444, 0, 0, 0.25556],\n    \"109\": [0, 0.45833, 0, 0, 0.86667],\n    \"110\": [0, 0.45833, 0, 0, 0.56111],\n    \"111\": [0, 0.45833, 0, 0, 0.55],\n    \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n    \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n    \"115\": [0, 0.45833, 0, 0, 0.42167],\n    \"116\": [0, 0.58929, 0, 0, 0.40417],\n    \"117\": [0, 0.45833, 0, 0, 0.56111],\n    \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n    \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n    \"120\": [0, 0.45833, 0, 0, 0.5],\n    \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n    \"122\": [0, 0.45833, 0, 0, 0.47639],\n    \"126\": [0.35, 0.34444, 0, 0, 0.55],\n    \"168\": [0, 0.69444, 0, 0, 0.55],\n    \"176\": [0, 0.69444, 0, 0, 0.73334],\n    \"180\": [0, 0.69444, 0, 0, 0.55],\n    \"184\": [0.17014, 0, 0, 0, 0.48889],\n    \"305\": [0, 0.45833, 0, 0, 0.25556],\n    \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n    \"710\": [0, 0.69444, 0, 0, 0.55],\n    \"711\": [0, 0.63542, 0, 0, 0.55],\n    \"713\": [0, 0.63778, 0, 0, 0.55],\n    \"728\": [0, 0.69444, 0, 0, 0.55],\n    \"729\": [0, 0.69444, 0, 0, 0.30556],\n    \"730\": [0, 0.69444, 0, 0, 0.73334],\n    \"732\": [0, 0.69444, 0, 0, 0.55],\n    \"733\": [0, 0.69444, 0, 0, 0.55],\n    \"915\": [0, 0.69444, 0, 0, 0.58056],\n    \"916\": [0, 0.69444, 0, 0, 0.91667],\n    \"920\": [0, 0.69444, 0, 0, 0.85556],\n    \"923\": [0, 0.69444, 0, 0, 0.67223],\n    \"926\": [0, 0.69444, 0, 0, 0.73334],\n    \"928\": [0, 0.69444, 0, 0, 0.79445],\n    \"931\": [0, 0.69444, 0, 0, 0.79445],\n    \"933\": [0, 0.69444, 0, 0, 0.85556],\n    \"934\": [0, 0.69444, 0, 0, 0.79445],\n    \"936\": [0, 0.69444, 0, 0, 0.85556],\n    \"937\": [0, 0.69444, 0, 0, 0.79445],\n    \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n    \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n    \"8216\": [0, 0.69444, 0, 0, 0.30556],\n    \"8217\": [0, 0.69444, 0, 0, 0.30556],\n    \"8220\": [0, 0.69444, 0, 0, 0.55834],\n    \"8221\": [0, 0.69444, 0, 0, 0.55834]\n  },\n  \"SansSerif-Italic\": {\n    \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n    \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n    \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n    \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n    \"42\": [0, 0.75, 0.11775, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n    \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n    \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n    \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n    \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n    \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n    \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n    \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n    \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n    \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n    \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n    \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n    \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n    \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n    \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n    \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n    \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n    \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n    \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n    \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n    \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n    \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n    \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n    \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n    \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n    \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n    \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n    \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n    \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n    \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n    \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n    \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n    \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n    \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n    \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n    \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n    \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n    \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n    \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n    \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.73752],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n    \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n    \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n    \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n    \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n    \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.73752],\n    \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n    \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n    \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n    \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n    \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n    \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n    \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n    \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n    \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n    \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n  },\n  \"SansSerif-Regular\": {\n    \"33\": [0, 0.69444, 0, 0, 0.31945],\n    \"34\": [0, 0.69444, 0, 0, 0.5],\n    \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n    \"36\": [0.05556, 0.75, 0, 0, 0.5],\n    \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n    \"38\": [0, 0.69444, 0, 0, 0.75834],\n    \"39\": [0, 0.69444, 0, 0, 0.27778],\n    \"40\": [0.25, 0.75, 0, 0, 0.38889],\n    \"41\": [0.25, 0.75, 0, 0, 0.38889],\n    \"42\": [0, 0.75, 0, 0, 0.5],\n    \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n    \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n    \"45\": [0, 0.44444, 0, 0, 0.33333],\n    \"46\": [0, 0.08333, 0, 0, 0.27778],\n    \"47\": [0.25, 0.75, 0, 0, 0.5],\n    \"48\": [0, 0.65556, 0, 0, 0.5],\n    \"49\": [0, 0.65556, 0, 0, 0.5],\n    \"50\": [0, 0.65556, 0, 0, 0.5],\n    \"51\": [0, 0.65556, 0, 0, 0.5],\n    \"52\": [0, 0.65556, 0, 0, 0.5],\n    \"53\": [0, 0.65556, 0, 0, 0.5],\n    \"54\": [0, 0.65556, 0, 0, 0.5],\n    \"55\": [0, 0.65556, 0, 0, 0.5],\n    \"56\": [0, 0.65556, 0, 0, 0.5],\n    \"57\": [0, 0.65556, 0, 0, 0.5],\n    \"58\": [0, 0.44444, 0, 0, 0.27778],\n    \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n    \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n    \"63\": [0, 0.69444, 0, 0, 0.47222],\n    \"64\": [0, 0.69444, 0, 0, 0.66667],\n    \"65\": [0, 0.69444, 0, 0, 0.66667],\n    \"66\": [0, 0.69444, 0, 0, 0.66667],\n    \"67\": [0, 0.69444, 0, 0, 0.63889],\n    \"68\": [0, 0.69444, 0, 0, 0.72223],\n    \"69\": [0, 0.69444, 0, 0, 0.59722],\n    \"70\": [0, 0.69444, 0, 0, 0.56945],\n    \"71\": [0, 0.69444, 0, 0, 0.66667],\n    \"72\": [0, 0.69444, 0, 0, 0.70834],\n    \"73\": [0, 0.69444, 0, 0, 0.27778],\n    \"74\": [0, 0.69444, 0, 0, 0.47222],\n    \"75\": [0, 0.69444, 0, 0, 0.69445],\n    \"76\": [0, 0.69444, 0, 0, 0.54167],\n    \"77\": [0, 0.69444, 0, 0, 0.875],\n    \"78\": [0, 0.69444, 0, 0, 0.70834],\n    \"79\": [0, 0.69444, 0, 0, 0.73611],\n    \"80\": [0, 0.69444, 0, 0, 0.63889],\n    \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n    \"82\": [0, 0.69444, 0, 0, 0.64584],\n    \"83\": [0, 0.69444, 0, 0, 0.55556],\n    \"84\": [0, 0.69444, 0, 0, 0.68056],\n    \"85\": [0, 0.69444, 0, 0, 0.6875],\n    \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n    \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n    \"88\": [0, 0.69444, 0, 0, 0.66667],\n    \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n    \"90\": [0, 0.69444, 0, 0, 0.61111],\n    \"91\": [0.25, 0.75, 0, 0, 0.28889],\n    \"93\": [0.25, 0.75, 0, 0, 0.28889],\n    \"94\": [0, 0.69444, 0, 0, 0.5],\n    \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n    \"97\": [0, 0.44444, 0, 0, 0.48056],\n    \"98\": [0, 0.69444, 0, 0, 0.51667],\n    \"99\": [0, 0.44444, 0, 0, 0.44445],\n    \"100\": [0, 0.69444, 0, 0, 0.51667],\n    \"101\": [0, 0.44444, 0, 0, 0.44445],\n    \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n    \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n    \"104\": [0, 0.69444, 0, 0, 0.51667],\n    \"105\": [0, 0.67937, 0, 0, 0.23889],\n    \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n    \"107\": [0, 0.69444, 0, 0, 0.48889],\n    \"108\": [0, 0.69444, 0, 0, 0.23889],\n    \"109\": [0, 0.44444, 0, 0, 0.79445],\n    \"110\": [0, 0.44444, 0, 0, 0.51667],\n    \"111\": [0, 0.44444, 0, 0, 0.5],\n    \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n    \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n    \"115\": [0, 0.44444, 0, 0, 0.38333],\n    \"116\": [0, 0.57143, 0, 0, 0.36111],\n    \"117\": [0, 0.44444, 0, 0, 0.51667],\n    \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n    \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n    \"120\": [0, 0.44444, 0, 0, 0.46111],\n    \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n    \"122\": [0, 0.44444, 0, 0, 0.43472],\n    \"126\": [0.35, 0.32659, 0, 0, 0.5],\n    \"168\": [0, 0.67937, 0, 0, 0.5],\n    \"176\": [0, 0.69444, 0, 0, 0.66667],\n    \"184\": [0.17014, 0, 0, 0, 0.44445],\n    \"305\": [0, 0.44444, 0, 0, 0.23889],\n    \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n    \"710\": [0, 0.69444, 0, 0, 0.5],\n    \"711\": [0, 0.63194, 0, 0, 0.5],\n    \"713\": [0, 0.60889, 0, 0, 0.5],\n    \"714\": [0, 0.69444, 0, 0, 0.5],\n    \"715\": [0, 0.69444, 0, 0, 0.5],\n    \"728\": [0, 0.69444, 0, 0, 0.5],\n    \"729\": [0, 0.67937, 0, 0, 0.27778],\n    \"730\": [0, 0.69444, 0, 0, 0.66667],\n    \"732\": [0, 0.67659, 0, 0, 0.5],\n    \"733\": [0, 0.69444, 0, 0, 0.5],\n    \"915\": [0, 0.69444, 0, 0, 0.54167],\n    \"916\": [0, 0.69444, 0, 0, 0.83334],\n    \"920\": [0, 0.69444, 0, 0, 0.77778],\n    \"923\": [0, 0.69444, 0, 0, 0.61111],\n    \"926\": [0, 0.69444, 0, 0, 0.66667],\n    \"928\": [0, 0.69444, 0, 0, 0.70834],\n    \"931\": [0, 0.69444, 0, 0, 0.72222],\n    \"933\": [0, 0.69444, 0, 0, 0.77778],\n    \"934\": [0, 0.69444, 0, 0, 0.72222],\n    \"936\": [0, 0.69444, 0, 0, 0.77778],\n    \"937\": [0, 0.69444, 0, 0, 0.72222],\n    \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n    \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n    \"8216\": [0, 0.69444, 0, 0, 0.27778],\n    \"8217\": [0, 0.69444, 0, 0, 0.27778],\n    \"8220\": [0, 0.69444, 0, 0, 0.5],\n    \"8221\": [0, 0.69444, 0, 0, 0.5]\n  },\n  \"Script-Regular\": {\n    \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n    \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n    \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n    \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n    \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n    \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n    \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n    \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n    \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n    \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n    \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n    \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n    \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n    \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n    \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n    \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n    \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n    \"82\": [0, 0.7, 0.06259, 0, 0.85],\n    \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n    \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n    \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n    \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n    \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n    \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n    \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n    \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n  },\n  \"Size1-Regular\": {\n    \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n    \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n    \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n    \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n    \"710\": [0, 0.72222, 0, 0, 0.55556],\n    \"732\": [0, 0.72222, 0, 0, 0.55556],\n    \"770\": [0, 0.72222, 0, 0, 0.55556],\n    \"771\": [0, 0.72222, 0, 0, 0.55556],\n    \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n    \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n    \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n    \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n    \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n    \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n    \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n    \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n    \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n    \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n    \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n    \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n    \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n    \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n  },\n  \"Size2-Regular\": {\n    \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n    \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n    \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n    \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n    \"710\": [0, 0.75, 0, 0, 1.0],\n    \"732\": [0, 0.75, 0, 0, 1.0],\n    \"770\": [0, 0.75, 0, 0, 1.0],\n    \"771\": [0, 0.75, 0, 0, 1.0],\n    \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n    \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n    \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n    \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n    \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n    \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n    \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n    \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n    \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n    \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n  },\n  \"Size3-Regular\": {\n    \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n    \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n    \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n    \"123\": [0.95003, 1.45, 0, 0, 0.75],\n    \"125\": [0.95003, 1.45, 0, 0, 0.75],\n    \"710\": [0, 0.75, 0, 0, 1.44445],\n    \"732\": [0, 0.75, 0, 0, 1.44445],\n    \"770\": [0, 0.75, 0, 0, 1.44445],\n    \"771\": [0, 0.75, 0, 0, 1.44445],\n    \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n    \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n    \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n    \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n  },\n  \"Size4-Regular\": {\n    \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n    \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n    \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n    \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"710\": [0, 0.825, 0, 0, 1.8889],\n    \"732\": [0, 0.825, 0, 0, 1.8889],\n    \"770\": [0, 0.825, 0, 0, 1.8889],\n    \"771\": [0, 0.825, 0, 0, 1.8889],\n    \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n    \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n    \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n    \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n    \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n    \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n    \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9129\": [0.90001, 0, 0, 0, 0.88889],\n    \"9130\": [0, 0.3, 0, 0, 0.88889],\n    \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n    \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n    \"9133\": [0.90001, 0, 0, 0, 0.88889],\n    \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n    \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n    \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n    \"57680\": [0, 0.12, 0, 0, 0.45],\n    \"57681\": [0, 0.12, 0, 0, 0.45],\n    \"57682\": [0, 0.12, 0, 0, 0.45],\n    \"57683\": [0, 0.12, 0, 0, 0.45]\n  },\n  \"Typewriter-Regular\": {\n    \"32\": [0, 0, 0, 0, 0.525],\n    \"33\": [0, 0.61111, 0, 0, 0.525],\n    \"34\": [0, 0.61111, 0, 0, 0.525],\n    \"35\": [0, 0.61111, 0, 0, 0.525],\n    \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"38\": [0, 0.61111, 0, 0, 0.525],\n    \"39\": [0, 0.61111, 0, 0, 0.525],\n    \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"42\": [0, 0.52083, 0, 0, 0.525],\n    \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"44\": [0.13889, 0.125, 0, 0, 0.525],\n    \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n    \"46\": [0, 0.125, 0, 0, 0.525],\n    \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"48\": [0, 0.61111, 0, 0, 0.525],\n    \"49\": [0, 0.61111, 0, 0, 0.525],\n    \"50\": [0, 0.61111, 0, 0, 0.525],\n    \"51\": [0, 0.61111, 0, 0, 0.525],\n    \"52\": [0, 0.61111, 0, 0, 0.525],\n    \"53\": [0, 0.61111, 0, 0, 0.525],\n    \"54\": [0, 0.61111, 0, 0, 0.525],\n    \"55\": [0, 0.61111, 0, 0, 0.525],\n    \"56\": [0, 0.61111, 0, 0, 0.525],\n    \"57\": [0, 0.61111, 0, 0, 0.525],\n    \"58\": [0, 0.43056, 0, 0, 0.525],\n    \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n    \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n    \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n    \"63\": [0, 0.61111, 0, 0, 0.525],\n    \"64\": [0, 0.61111, 0, 0, 0.525],\n    \"65\": [0, 0.61111, 0, 0, 0.525],\n    \"66\": [0, 0.61111, 0, 0, 0.525],\n    \"67\": [0, 0.61111, 0, 0, 0.525],\n    \"68\": [0, 0.61111, 0, 0, 0.525],\n    \"69\": [0, 0.61111, 0, 0, 0.525],\n    \"70\": [0, 0.61111, 0, 0, 0.525],\n    \"71\": [0, 0.61111, 0, 0, 0.525],\n    \"72\": [0, 0.61111, 0, 0, 0.525],\n    \"73\": [0, 0.61111, 0, 0, 0.525],\n    \"74\": [0, 0.61111, 0, 0, 0.525],\n    \"75\": [0, 0.61111, 0, 0, 0.525],\n    \"76\": [0, 0.61111, 0, 0, 0.525],\n    \"77\": [0, 0.61111, 0, 0, 0.525],\n    \"78\": [0, 0.61111, 0, 0, 0.525],\n    \"79\": [0, 0.61111, 0, 0, 0.525],\n    \"80\": [0, 0.61111, 0, 0, 0.525],\n    \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n    \"82\": [0, 0.61111, 0, 0, 0.525],\n    \"83\": [0, 0.61111, 0, 0, 0.525],\n    \"84\": [0, 0.61111, 0, 0, 0.525],\n    \"85\": [0, 0.61111, 0, 0, 0.525],\n    \"86\": [0, 0.61111, 0, 0, 0.525],\n    \"87\": [0, 0.61111, 0, 0, 0.525],\n    \"88\": [0, 0.61111, 0, 0, 0.525],\n    \"89\": [0, 0.61111, 0, 0, 0.525],\n    \"90\": [0, 0.61111, 0, 0, 0.525],\n    \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"94\": [0, 0.61111, 0, 0, 0.525],\n    \"95\": [0.09514, 0, 0, 0, 0.525],\n    \"96\": [0, 0.61111, 0, 0, 0.525],\n    \"97\": [0, 0.43056, 0, 0, 0.525],\n    \"98\": [0, 0.61111, 0, 0, 0.525],\n    \"99\": [0, 0.43056, 0, 0, 0.525],\n    \"100\": [0, 0.61111, 0, 0, 0.525],\n    \"101\": [0, 0.43056, 0, 0, 0.525],\n    \"102\": [0, 0.61111, 0, 0, 0.525],\n    \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"104\": [0, 0.61111, 0, 0, 0.525],\n    \"105\": [0, 0.61111, 0, 0, 0.525],\n    \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n    \"107\": [0, 0.61111, 0, 0, 0.525],\n    \"108\": [0, 0.61111, 0, 0, 0.525],\n    \"109\": [0, 0.43056, 0, 0, 0.525],\n    \"110\": [0, 0.43056, 0, 0, 0.525],\n    \"111\": [0, 0.43056, 0, 0, 0.525],\n    \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"114\": [0, 0.43056, 0, 0, 0.525],\n    \"115\": [0, 0.43056, 0, 0, 0.525],\n    \"116\": [0, 0.55358, 0, 0, 0.525],\n    \"117\": [0, 0.43056, 0, 0, 0.525],\n    \"118\": [0, 0.43056, 0, 0, 0.525],\n    \"119\": [0, 0.43056, 0, 0, 0.525],\n    \"120\": [0, 0.43056, 0, 0, 0.525],\n    \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"122\": [0, 0.43056, 0, 0, 0.525],\n    \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n    \"126\": [0, 0.61111, 0, 0, 0.525],\n    \"127\": [0, 0.61111, 0, 0, 0.525],\n    \"160\": [0, 0, 0, 0, 0.525],\n    \"176\": [0, 0.61111, 0, 0, 0.525],\n    \"184\": [0.19445, 0, 0, 0, 0.525],\n    \"305\": [0, 0.43056, 0, 0, 0.525],\n    \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n    \"711\": [0, 0.56597, 0, 0, 0.525],\n    \"713\": [0, 0.56555, 0, 0, 0.525],\n    \"714\": [0, 0.61111, 0, 0, 0.525],\n    \"715\": [0, 0.61111, 0, 0, 0.525],\n    \"728\": [0, 0.61111, 0, 0, 0.525],\n    \"730\": [0, 0.61111, 0, 0, 0.525],\n    \"770\": [0, 0.61111, 0, 0, 0.525],\n    \"771\": [0, 0.61111, 0, 0, 0.525],\n    \"776\": [0, 0.61111, 0, 0, 0.525],\n    \"915\": [0, 0.61111, 0, 0, 0.525],\n    \"916\": [0, 0.61111, 0, 0, 0.525],\n    \"920\": [0, 0.61111, 0, 0, 0.525],\n    \"923\": [0, 0.61111, 0, 0, 0.525],\n    \"926\": [0, 0.61111, 0, 0, 0.525],\n    \"928\": [0, 0.61111, 0, 0, 0.525],\n    \"931\": [0, 0.61111, 0, 0, 0.525],\n    \"933\": [0, 0.61111, 0, 0, 0.525],\n    \"934\": [0, 0.61111, 0, 0, 0.525],\n    \"936\": [0, 0.61111, 0, 0, 0.525],\n    \"937\": [0, 0.61111, 0, 0, 0.525],\n    \"8216\": [0, 0.61111, 0, 0, 0.525],\n    \"8217\": [0, 0.61111, 0, 0, 0.525],\n    \"8242\": [0, 0.61111, 0, 0, 0.525],\n    \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n  }\n};\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nconst sigmasAndXis = {\n  slant: [0.250, 0.250, 0.250],\n  // sigma1\n  space: [0.000, 0.000, 0.000],\n  // sigma2\n  stretch: [0.000, 0.000, 0.000],\n  // sigma3\n  shrink: [0.000, 0.000, 0.000],\n  // sigma4\n  xHeight: [0.431, 0.431, 0.431],\n  // sigma5\n  quad: [1.000, 1.171, 1.472],\n  // sigma6\n  extraSpace: [0.000, 0.000, 0.000],\n  // sigma7\n  num1: [0.677, 0.732, 0.925],\n  // sigma8\n  num2: [0.394, 0.384, 0.387],\n  // sigma9\n  num3: [0.444, 0.471, 0.504],\n  // sigma10\n  denom1: [0.686, 0.752, 1.025],\n  // sigma11\n  denom2: [0.345, 0.344, 0.532],\n  // sigma12\n  sup1: [0.413, 0.503, 0.504],\n  // sigma13\n  sup2: [0.363, 0.431, 0.404],\n  // sigma14\n  sup3: [0.289, 0.286, 0.294],\n  // sigma15\n  sub1: [0.150, 0.143, 0.200],\n  // sigma16\n  sub2: [0.247, 0.286, 0.400],\n  // sigma17\n  supDrop: [0.386, 0.353, 0.494],\n  // sigma18\n  subDrop: [0.050, 0.071, 0.100],\n  // sigma19\n  delim1: [2.390, 1.700, 1.980],\n  // sigma20\n  delim2: [1.010, 1.157, 1.420],\n  // sigma21\n  axisHeight: [0.250, 0.250, 0.250],\n  // sigma22\n  // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n  // they correspond to the font parameters of the extension fonts (family 3).\n  // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n  // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n  // values.\n  defaultRuleThickness: [0.04, 0.049, 0.049],\n  // xi8; cmex7: 0.049\n  bigOpSpacing1: [0.111, 0.111, 0.111],\n  // xi9\n  bigOpSpacing2: [0.166, 0.166, 0.166],\n  // xi10\n  bigOpSpacing3: [0.2, 0.2, 0.2],\n  // xi11\n  bigOpSpacing4: [0.6, 0.611, 0.611],\n  // xi12; cmex7: 0.611\n  bigOpSpacing5: [0.1, 0.143, 0.143],\n  // xi13; cmex7: 0.143\n  // The \\sqrt rule width is taken from the height of the surd character.\n  // Since we use the same font at all sizes, this thickness doesn't scale.\n  sqrtRuleThickness: [0.04, 0.04, 0.04],\n  // This value determines how large a pt is, for metrics which are defined\n  // in terms of pts.\n  // This value is also used in katex.less; if you change it make sure the\n  // values match.\n  ptPerEm: [10.0, 10.0, 10.0],\n  // The space between adjacent `|` columns in an array definition. From\n  // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n  doubleRuleSep: [0.2, 0.2, 0.2],\n  // The width of separator lines in {array} environments. From\n  // `\\showthe\\arrayrulewidth` in LaTeX. Equals 0.4 / ptPerEm.\n  arrayRuleWidth: [0.04, 0.04, 0.04],\n  // Two values from LaTeX source2e:\n  fboxsep: [0.3, 0.3, 0.3],\n  //        3 pt / ptPerEm\n  fboxrule: [0.04, 0.04, 0.04] // 0.4 pt / ptPerEm\n\n}; // This map contains a mapping from font name and character code to character\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\n\nconst extraCharacterMap = {\n  // Latin-1\n  '\u00C5': 'A',\n  '\u00C7': 'C',\n  '\u00D0': 'D',\n  '\u00DE': 'o',\n  '\u00E5': 'a',\n  '\u00E7': 'c',\n  '\u00F0': 'd',\n  '\u00FE': 'o',\n  // Cyrillic\n  '\u0410': 'A',\n  '\u0411': 'B',\n  '\u0412': 'B',\n  '\u0413': 'F',\n  '\u0414': 'A',\n  '\u0415': 'E',\n  '\u0416': 'K',\n  '\u0417': '3',\n  '\u0418': 'N',\n  '\u0419': 'N',\n  '\u041A': 'K',\n  '\u041B': 'N',\n  '\u041C': 'M',\n  '\u041D': 'H',\n  '\u041E': 'O',\n  '\u041F': 'N',\n  '\u0420': 'P',\n  '\u0421': 'C',\n  '\u0422': 'T',\n  '\u0423': 'y',\n  '\u0424': 'O',\n  '\u0425': 'X',\n  '\u0426': 'U',\n  '\u0427': 'h',\n  '\u0428': 'W',\n  '\u0429': 'W',\n  '\u042A': 'B',\n  '\u042B': 'X',\n  '\u042C': 'B',\n  '\u042D': '3',\n  '\u042E': 'X',\n  '\u042F': 'R',\n  '\u0430': 'a',\n  '\u0431': 'b',\n  '\u0432': 'a',\n  '\u0433': 'r',\n  '\u0434': 'y',\n  '\u0435': 'e',\n  '\u0436': 'm',\n  '\u0437': 'e',\n  '\u0438': 'n',\n  '\u0439': 'n',\n  '\u043A': 'n',\n  '\u043B': 'n',\n  '\u043C': 'm',\n  '\u043D': 'n',\n  '\u043E': 'o',\n  '\u043F': 'n',\n  '\u0440': 'p',\n  '\u0441': 'c',\n  '\u0442': 'o',\n  '\u0443': 'y',\n  '\u0444': 'b',\n  '\u0445': 'x',\n  '\u0446': 'n',\n  '\u0447': 'n',\n  '\u0448': 'w',\n  '\u0449': 'w',\n  '\u044A': 'a',\n  '\u044B': 'm',\n  '\u044C': 'a',\n  '\u044D': 'e',\n  '\u044E': 'm',\n  '\u044F': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n  metricMap[fontName] = metrics;\n}\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\n\nfunction getCharacterMetrics(character, font, mode) {\n  if (!metricMap[font]) {\n    throw new Error(`Font metrics not found for font: ${font}.`);\n  }\n\n  let ch = character.charCodeAt(0);\n  let metrics = metricMap[font][ch];\n\n  if (!metrics && character[0] in extraCharacterMap) {\n    ch = extraCharacterMap[character[0]].charCodeAt(0);\n    metrics = metricMap[font][ch];\n  }\n\n  if (!metrics && mode === 'text') {\n    // We don't typically have font metrics for Asian scripts.\n    // But since we support them in text mode, we need to return\n    // some sort of metrics.\n    // So if the character is in a script we support but we\n    // don't have metrics for it, just use the metrics for\n    // the Latin capital letter M. This is close enough because\n    // we (currently) only care about the height of the glpyh\n    // not its width.\n    if (supportedCodepoint(ch)) {\n      metrics = metricMap[font][77]; // 77 is the charcode for 'M'\n    }\n  }\n\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n}\nconst fontMetricsBySizeIndex = {};\n/**\n * Get the font metrics for a given size.\n */\n\nfunction getGlobalMetrics(size) {\n  let sizeIndex;\n\n  if (size >= 5) {\n    sizeIndex = 0;\n  } else if (size >= 3) {\n    sizeIndex = 1;\n  } else {\n    sizeIndex = 2;\n  }\n\n  if (!fontMetricsBySizeIndex[sizeIndex]) {\n    const metrics = fontMetricsBySizeIndex[sizeIndex] = {\n      cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n    };\n\n    for (const key in sigmasAndXis) {\n      if (sigmasAndXis.hasOwnProperty(key)) {\n        metrics[key] = sigmasAndXis[key][sizeIndex];\n      }\n    }\n  }\n\n  return fontMetricsBySizeIndex[sizeIndex];\n}\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/KaTeX/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\nconst ATOMS = {\n  \"bin\": 1,\n  \"close\": 1,\n  \"inner\": 1,\n  \"open\": 1,\n  \"punct\": 1,\n  \"rel\": 1\n};\nconst NON_ATOMS = {\n  \"accent-token\": 1,\n  \"mathord\": 1,\n  \"op-token\": 1,\n  \"spacing\": 1,\n  \"textord\": 1\n};\nconst symbols = {\n  \"math\": {},\n  \"text\": {}\n};\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\n\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n  symbols[mode][name] = {\n    font,\n    group,\n    replace\n  };\n\n  if (acceptUnicodeChar && replace) {\n    symbols[mode][replace] = symbols[mode][name];\n  }\n} // Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n// modes:\n\nconst math = \"math\";\nconst text$1 = \"text\"; // fonts:\n\nconst main = \"main\";\nconst ams = \"ams\"; // groups:\n\nconst accent = \"accent-token\";\nconst bin = \"bin\";\nconst close = \"close\";\nconst inner = \"inner\";\nconst mathord = \"mathord\";\nconst op = \"op-token\";\nconst open = \"open\";\nconst punct = \"punct\";\nconst rel = \"rel\";\nconst spacing = \"spacing\";\nconst textord = \"textord\"; // Now comes the symbol table\n// Relation Symbols\n\ndefineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\", true);\ndefineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\", true);\ndefineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\", true);\ndefineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");\ndefineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\", true);\ndefineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\", true);\ndefineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\", true);\ndefineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\", true);\ndefineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\", true);\ndefineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\", true);\ndefineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\", true);\ndefineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\", true);\ndefineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\", true);\ndefineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\", true);\ndefineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\"); // Punctuation\n\ndefineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");\ndefineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\"); // Misc Symbols\n\ndefineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(text$1, main, textord, \"\\u0023\", \"\\\\#\");\ndefineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(text$1, main, textord, \"\\u0026\", \"\\\\&\");\ndefineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\", true);\ndefineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\", true);\ndefineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\", true);\ndefineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\", true);\ndefineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\", true);\ndefineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(text$1, main, textord, \"\\u00a7\", \"\\\\S\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b6\", \"\\\\P\", true); // Math and Text\n\ndefineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(text$1, main, textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(text$1, main, textord, \"\\u2021\", \"\\\\textdaggerdbl\"); // Large Delimiters\n\ndefineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\", true);\ndefineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\", true);\ndefineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\", true);\ndefineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\", true); // Binary Operators\n\ndefineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\", true);\ndefineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");\ndefineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");\ndefineSymbol(math, main, bin, \"\\u0026\", \"\\\\And\"); // from amsmath\n// Arrow Symbols\n\ndefineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\", true);\ndefineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\", true);\ndefineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\", true); // AMS Negated Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\", true); // Symbol names preceeded by \"@\" each have a corresponding macro.\n\ndefineSymbol(math, ams, rel, \"\\ue010\", \"\\\\@nleqslant\");\ndefineSymbol(math, ams, rel, \"\\ue011\", \"\\\\@nleqq\");\ndefineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\@lvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\", true); // unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(math, ams, rel, \"\\ue006\", \"\\\\@nshortmid\");\ndefineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\@varsubsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue017\", \"\\\\@varsubsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\", true);\ndefineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\@ngeqslant\");\ndefineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\@ngeqq\");\ndefineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\", true);\ndefineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\@gvertneqq\");\ndefineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true); // unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\", true);\ndefineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\", true); // unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(math, ams, rel, \"\\ue007\", \"\\\\@nshortparallel\");\ndefineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(math, ams, rel, \"\\ue018\", \"\\\\@nsupseteqq\");\ndefineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\", true);\ndefineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\@varsupsetneq\");\ndefineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue019\", \"\\\\@varsupsetneqq\");\ndefineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\", true);\ndefineSymbol(math, ams, rel, \"\\ue016\", \"\\\\@nsubseteqq\");\ndefineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");\ndefineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\"); // AMS Negated Arrows\n\ndefineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\", true); // AMS Misc\n\ndefineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");\ndefineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");\ndefineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");\ndefineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");\ndefineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(text$1, ams, textord, \"\\u00ae\", \"\\\\circledR\");\ndefineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");\ndefineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");\ndefineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");\ndefineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");\ndefineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\", true); // unicode-math maps U+F0 (\u00F0) to \\matheth. We map to AMS function \\eth\n\ndefineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\", true);\ndefineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");\ndefineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");\ndefineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\"); // unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\n\ndefineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(text$1, ams, textord, \"\\u00a5\", \"\\\\yen\", true);\ndefineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(text$1, ams, textord, \"\\u2713\", \"\\\\checkmark\"); // AMS Hebrew\n\ndefineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\", true); // AMS Greek\n\ndefineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\", true);\ndefineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\"); // AMS Delimiters\n\ndefineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\", true); // AMS Binary Relations\n\ndefineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\", true);\ndefineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\", true);\ndefineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\", true);\ndefineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\", true);\ndefineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\", true);\ndefineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\", true);\ndefineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\", true);\ndefineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");\ndefineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");\ndefineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\", true);\ndefineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\", true);\ndefineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\", true);\ndefineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\", true);\ndefineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\", true);\ndefineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\", true);\ndefineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");\ndefineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\", true);\ndefineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\", true);\ndefineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\", true);\ndefineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\", true);\ndefineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\", true);\ndefineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");\ndefineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");\ndefineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\", true);\ndefineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\", true);\ndefineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\", true);\ndefineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");\ndefineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\"); // unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");\ndefineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\"); // unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\n\ndefineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");\ndefineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");\ndefineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");\ndefineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");\ndefineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");\ndefineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true); // AMS Binary Operators\n\ndefineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\", true);\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\", true);\ndefineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\", true);\ndefineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\", true);\ndefineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\", true);\ndefineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\", true);\ndefineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\", true);\ndefineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\", true);\ndefineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");\ndefineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\", true);\ndefineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");\ndefineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");\ndefineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\", true); // AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\n\ndefineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\", true); // unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\", true); // unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\", true);\ndefineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\", true); // unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\n\ndefineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\", true);\ndefineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\", true);\ndefineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");\ndefineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\", true);\ndefineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");\ndefineSymbol(math, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(math, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\$\");\ndefineSymbol(text$1, main, textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(math, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(text$1, main, textord, \"%\", \"\\\\%\");\ndefineSymbol(math, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\_\");\ndefineSymbol(text$1, main, textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\", true);\ndefineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");\ndefineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\", true);\ndefineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\", true);\ndefineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\", true);\ndefineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\", true);\ndefineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\", true);\ndefineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\", true);\ndefineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\", true);\ndefineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\", true);\ndefineSymbol(math, main, textord, \"A\", \"\\u0391\");\ndefineSymbol(math, main, textord, \"B\", \"\\u0392\");\ndefineSymbol(math, main, textord, \"E\", \"\\u0395\");\ndefineSymbol(math, main, textord, \"Z\", \"\\u0396\");\ndefineSymbol(math, main, textord, \"H\", \"\\u0397\");\ndefineSymbol(math, main, textord, \"I\", \"\\u0399\");\ndefineSymbol(math, main, textord, \"K\", \"\\u039A\");\ndefineSymbol(math, main, textord, \"M\", \"\\u039C\");\ndefineSymbol(math, main, textord, \"N\", \"\\u039D\");\ndefineSymbol(math, main, textord, \"O\", \"\\u039F\");\ndefineSymbol(math, main, textord, \"P\", \"\\u03A1\");\ndefineSymbol(math, main, textord, \"T\", \"\\u03A4\");\ndefineSymbol(math, main, textord, \"X\", \"\\u03A7\");\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\", true);\ndefineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");\ndefineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");\ndefineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");\ndefineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\", true);\ndefineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\", true);\ndefineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\", true);\ndefineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\", true);\ndefineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\", true);\ndefineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\", true);\ndefineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\", true);\ndefineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\", true);\ndefineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\", true);\ndefineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\", true);\ndefineSymbol(math, main, mathord, \"\\u03bf\", \"\\\\omicron\", true);\ndefineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\", true);\ndefineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\", true);\ndefineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\", true);\ndefineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\", true);\ndefineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\", true);\ndefineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\", true);\ndefineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\", true);\ndefineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\", true);\ndefineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\", true);\ndefineSymbol(math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(math, main, bin, \"+\", \"+\");\ndefineSymbol(math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\", true);\ndefineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\", true);\ndefineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\", true);\ndefineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\", true);\ndefineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\", true);\ndefineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");\ndefineSymbol(math, main, open, \"(\", \"(\");\ndefineSymbol(math, main, open, \"[\", \"[\");\ndefineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\", true);\ndefineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(math, main, close, \")\", \")\");\ndefineSymbol(math, main, close, \"]\", \"]\");\ndefineSymbol(math, main, close, \"?\", \"?\");\ndefineSymbol(math, main, close, \"!\", \"!\");\ndefineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\", true);\ndefineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(math, main, rel, \"=\", \"=\");\ndefineSymbol(math, main, rel, \"<\", \"<\");\ndefineSymbol(math, main, rel, \">\", \">\");\ndefineSymbol(math, main, rel, \":\", \":\");\ndefineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(math, main, rel, \"\\ue020\", \"\\\\@not\");\ndefineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");\ndefineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\"); // Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\n\ndefineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"~\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\space\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\nobreakspace\");\ndefineSymbol(math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(math, main, punct, \",\", \",\");\ndefineSymbol(math, main, punct, \";\", \";\");\ndefineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\", true);\ndefineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\", true);\ndefineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\", true);\ndefineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\", true);\ndefineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");\ndefineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");\ndefineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");\ndefineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");\ndefineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");\ndefineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\{\");\ndefineSymbol(text$1, main, textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(math, main, close, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\}\");\ndefineSymbol(text$1, main, textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(math, main, open, \"{\", \"\\\\lbrace\");\ndefineSymbol(math, main, close, \"}\", \"\\\\rbrace\");\ndefineSymbol(math, main, open, \"[\", \"\\\\lbrack\");\ndefineSymbol(text$1, main, textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(math, main, close, \"]\", \"\\\\rbrack\");\ndefineSymbol(text$1, main, textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(math, main, open, \"(\", \"\\\\lparen\");\ndefineSymbol(math, main, close, \")\", \"\\\\rparen\");\ndefineSymbol(text$1, main, textord, \"<\", \"\\\\textless\"); // in T1 fontenc\n\ndefineSymbol(text$1, main, textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\n\ndefineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\", true);\ndefineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\", true);\ndefineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"|\");\ndefineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(text$1, main, textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\n\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(text$1, main, textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(text$1, main, textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(text$1, main, textord, \"\\\\\", \"\\\\textbackslash\");\ndefineSymbol(text$1, main, textord, \"^\", \"\\\\textasciicircum\");\ndefineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\", true);\ndefineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\", true);\ndefineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\", true);\ndefineSymbol(math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(math, main, op, \"\\u22c1\", \"\\\\bigvee\");\ndefineSymbol(math, main, op, \"\\u22c0\", \"\\\\bigwedge\");\ndefineSymbol(math, main, op, \"\\u2a04\", \"\\\\biguplus\");\ndefineSymbol(math, main, op, \"\\u22c2\", \"\\\\bigcap\");\ndefineSymbol(math, main, op, \"\\u22c3\", \"\\\\bigcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\int\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\intop\");\ndefineSymbol(math, main, op, \"\\u222c\", \"\\\\iint\");\ndefineSymbol(math, main, op, \"\\u222d\", \"\\\\iiint\");\ndefineSymbol(math, main, op, \"\\u220f\", \"\\\\prod\");\ndefineSymbol(math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(math, main, op, \"\\u2a02\", \"\\\\bigotimes\");\ndefineSymbol(math, main, op, \"\\u2a01\", \"\\\\bigoplus\");\ndefineSymbol(math, main, op, \"\\u2a00\", \"\\\\bigodot\");\ndefineSymbol(math, main, op, \"\\u222e\", \"\\\\oint\");\ndefineSymbol(math, main, op, \"\\u222f\", \"\\\\oiint\");\ndefineSymbol(math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(math, main, op, \"\\u2a06\", \"\\\\bigsqcup\");\ndefineSymbol(math, main, op, \"\\u222b\", \"\\\\smallint\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(text$1, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(math, main, inner, \"\\u22ef\", \"\\\\@cdots\", true);\ndefineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\", true);\ndefineSymbol(math, main, textord, \"\\u22ee\", \"\\\\varvdots\"); // \\vdots is a macro\n\ndefineSymbol(math, main, accent, \"\\u02ca\", \"\\\\acute\");\ndefineSymbol(math, main, accent, \"\\u02cb\", \"\\\\grave\");\ndefineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");\ndefineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");\ndefineSymbol(math, main, accent, \"\\u02c9\", \"\\\\bar\");\ndefineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");\ndefineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");\ndefineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");\ndefineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");\ndefineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");\ndefineSymbol(math, main, accent, \"\\u02da\", \"\\\\mathring\");\ndefineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(text$1, main, textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(text$1, main, textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(text$1, main, textord, \"\\u00df\", \"\\\\ss\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u00e6\", \"\\\\ae\", true);\ndefineSymbol(text$1, main, textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(text$1, main, textord, \"\\u00f8\", \"\\\\o\", true);\ndefineSymbol(text$1, main, textord, \"\\u00c6\", \"\\\\AE\", true);\ndefineSymbol(text$1, main, textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(text$1, main, textord, \"\\u00d8\", \"\\\\O\", true);\ndefineSymbol(text$1, main, accent, \"\\u02ca\", \"\\\\'\"); // acute\n\ndefineSymbol(text$1, main, accent, \"\\u02cb\", \"\\\\`\"); // grave\n\ndefineSymbol(text$1, main, accent, \"\\u02c6\", \"\\\\^\"); // circumflex\n\ndefineSymbol(text$1, main, accent, \"\\u02dc\", \"\\\\~\"); // tilde\n\ndefineSymbol(text$1, main, accent, \"\\u02c9\", \"\\\\=\"); // macron\n\ndefineSymbol(text$1, main, accent, \"\\u02d8\", \"\\\\u\"); // breve\n\ndefineSymbol(text$1, main, accent, \"\\u02d9\", \"\\\\.\"); // dot above\n\ndefineSymbol(text$1, main, accent, \"\\u02da\", \"\\\\r\"); // ring above\n\ndefineSymbol(text$1, main, accent, \"\\u02c7\", \"\\\\v\"); // caron\n\ndefineSymbol(text$1, main, accent, \"\\u00a8\", '\\\\\"'); // diaresis\n\ndefineSymbol(text$1, main, accent, \"\\u02dd\", \"\\\\H\"); // double acute\n\ndefineSymbol(text$1, main, accent, \"\\u25ef\", \"\\\\textcircled\"); // \\bigcirc glyph\n// These ligatures are detected and created in Parser.js's `formLigatures`.\n\nconst ligatures = {\n  \"--\": true,\n  \"---\": true,\n  \"``\": true,\n  \"''\": true\n};\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"--\");\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"---\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"`\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"'\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"``\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"\\\\textquotedblleft\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"''\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"\\\\textquotedblright\"); //  \\degree from gensymb package\n\ndefineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\", true);\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\degree\"); // \\textdegree from inputenc package\n\ndefineSymbol(text$1, main, textord, \"\\u00b0\", \"\\\\textdegree\", true); // TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\n\ndefineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\mathsterling\", true);\ndefineSymbol(text$1, main, mathord, \"\\u00a3\", \"\\\\pounds\");\ndefineSymbol(text$1, main, mathord, \"\\u00a3\", \"\\\\textsterling\", true);\ndefineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, ams, textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"\\\\ \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \" \");\ndefineSymbol(text$1, main, spacing, \"\\u00a0\", \"~\"); // There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\n\nconst mathTextSymbols = \"0123456789/@.\\\"\";\n\nfor (let i = 0; i < mathTextSymbols.length; i++) {\n  const ch = mathTextSymbols.charAt(i);\n  defineSymbol(math, main, textord, ch, ch);\n} // All of these are textords in text mode\n\n\nconst textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\n\nfor (let i = 0; i < textSymbols.length; i++) {\n  const ch = textSymbols.charAt(i);\n  defineSymbol(text$1, main, textord, ch, ch);\n} // All of these are textords in text mode, and mathords in math mode\n\n\nconst letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(text$1, main, textord, ch, ch);\n} // Blackboard bold and script letters in Unicode range\n\n\ndefineSymbol(math, ams, textord, \"C\", \"\\u2102\"); // blackboard bold\n\ndefineSymbol(text$1, ams, textord, \"C\", \"\\u2102\");\ndefineSymbol(math, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(text$1, ams, textord, \"H\", \"\\u210D\");\ndefineSymbol(math, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(text$1, ams, textord, \"N\", \"\\u2115\");\ndefineSymbol(math, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(text$1, ams, textord, \"P\", \"\\u2119\");\ndefineSymbol(math, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(text$1, ams, textord, \"Q\", \"\\u211A\");\ndefineSymbol(math, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(text$1, ams, textord, \"R\", \"\\u211D\");\ndefineSymbol(math, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(text$1, ams, textord, \"Z\", \"\\u2124\");\ndefineSymbol(math, main, mathord, \"h\", \"\\u210E\"); // italic h, Planck constant\n\ndefineSymbol(text$1, main, mathord, \"h\", \"\\u210E\"); // The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\n\nlet wideChar = \"\";\n\nfor (let i = 0; i < letters.length; i++) {\n  const ch = letters.charAt(i); // The hex numbers in the next line are a surrogate pair.\n  // 0xD835 is the high surrogate for all letters in the range we support.\n  // 0xDC00 is the low surrogate for bold A.\n\n  wideChar = String.fromCharCode(0xD835, 0xDC00 + i); // A-Z a-z bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC34 + i); // A-Z a-z italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDC68 + i); // A-Z a-z bold italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDD04 + i); // A-Z a-z Fractur\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDA0 + i); // A-Z a-z sans-serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDDD4 + i); // A-Z a-z sans bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE08 + i); // A-Z a-z sans italic\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDE70 + i); // A-Z a-z monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n\n  if (i < 26) {\n    // KaTeX fonts have only capital letters for blackboard bold and script.\n    // See exception for k below.\n    wideChar = String.fromCharCode(0xD835, 0xDD38 + i); // A-Z double struck\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(text$1, main, textord, ch, wideChar);\n    wideChar = String.fromCharCode(0xD835, 0xDC9C + i); // A-Z script\n\n    defineSymbol(math, main, mathord, ch, wideChar);\n    defineSymbol(text$1, main, textord, ch, wideChar);\n  } // TODO: Add bold script when it is supported by a KaTeX font.\n\n} // \"k\" is the only double struck lower case letter in the KaTeX fonts.\n\n\nwideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\n\ndefineSymbol(math, main, mathord, \"k\", wideChar);\ndefineSymbol(text$1, main, textord, \"k\", wideChar); // Next, some wide character numerals\n\nfor (let i = 0; i < 10; i++) {\n  const ch = i.toString();\n  wideChar = String.fromCharCode(0xD835, 0xDFCE + i); // 0-9 bold\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFE2 + i); // 0-9 sans serif\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFEC + i); // 0-9 bold sans\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n  wideChar = String.fromCharCode(0xD835, 0xDFF6 + i); // 0-9 monospace\n\n  defineSymbol(math, main, mathord, ch, wideChar);\n  defineSymbol(text$1, main, textord, ch, wideChar);\n} // We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\n\n\nconst extraLatin = \"\u00C7\u00D0\u00DE\u00E7\u00FE\";\n\nfor (let i = 0; i < extraLatin.length; i++) {\n  const ch = extraLatin.charAt(i);\n  defineSymbol(math, main, mathord, ch, ch);\n  defineSymbol(text$1, main, textord, ch, ch);\n}\n\ndefineSymbol(text$1, main, textord, \"\u00F0\", \"\u00F0\"); // Unicode versions of existing characters\n\ndefineSymbol(text$1, main, textord, \"\\u2013\", \"\u2013\");\ndefineSymbol(text$1, main, textord, \"\\u2014\", \"\u2014\");\ndefineSymbol(text$1, main, textord, \"\\u2018\", \"\u2018\");\ndefineSymbol(text$1, main, textord, \"\\u2019\", \"\u2019\");\ndefineSymbol(text$1, main, textord, \"\\u201c\", \"\u201C\");\ndefineSymbol(text$1, main, textord, \"\\u201d\", \"\u201D\");\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\nconst wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathdefault\", \"textit\", \"Math-Italic\"], // a-z italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nconst wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\nconst wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n  // IE doesn't support codePointAt(). So work with the surrogate pair.\n  const H = wideChar.charCodeAt(0); // high surrogate\n\n  const L = wideChar.charCodeAt(1); // low surrogate\n\n  const codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n  const j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n  if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n    // wideLatinLetterData contains exactly 26 chars on each row.\n    // So we can calculate the relevant row. No traverse necessary.\n    const i = Math.floor((codePoint - 0x1D400) / 26);\n    return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n  } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n    // Numerals, ten per row.\n    const i = Math.floor((codePoint - 0x1D7CE) / 10);\n    return [wideNumeralData[i][2], wideNumeralData[i][j]];\n  } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n    // dotless i or j\n    return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n  } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n    // Greek letters. Not supported, yet.\n    return [\"\", \"\"];\n  } else {\n    // We don't support any wide characters outside 1D400\u20131D7FF.\n    throw new ParseError(\"Unsupported character: \" + wideChar);\n  }\n};\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\nconst sizeStyleMap = [// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\nconst sizeMultipliers = [// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nconst sizeAtStyle = function sizeAtStyle(size, style) {\n  return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n}; // In these types, \"\" (empty string) means \"no change\".\n\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nclass Options {\n  // A font family applies to a group of fonts (i.e. SansSerif), while a font\n  // represents a specific font (i.e. SansSerif Bold).\n  // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n\n  /**\n   * The base size index.\n   */\n  constructor(data) {\n    this.style = void 0;\n    this.color = void 0;\n    this.size = void 0;\n    this.textSize = void 0;\n    this.phantom = void 0;\n    this.font = void 0;\n    this.fontFamily = void 0;\n    this.fontWeight = void 0;\n    this.fontShape = void 0;\n    this.sizeMultiplier = void 0;\n    this.maxSize = void 0;\n    this.minRuleThickness = void 0;\n    this._fontMetrics = void 0;\n    this.style = data.style;\n    this.color = data.color;\n    this.size = data.size || Options.BASESIZE;\n    this.textSize = data.textSize || this.size;\n    this.phantom = !!data.phantom;\n    this.font = data.font || \"\";\n    this.fontFamily = data.fontFamily || \"\";\n    this.fontWeight = data.fontWeight || '';\n    this.fontShape = data.fontShape || '';\n    this.sizeMultiplier = sizeMultipliers[this.size - 1];\n    this.maxSize = data.maxSize;\n    this.minRuleThickness = data.minRuleThickness;\n    this._fontMetrics = undefined;\n  }\n  /**\n   * Returns a new options object with the same properties as \"this\".  Properties\n   * from \"extension\" will be copied to the new options object.\n   */\n\n\n  extend(extension) {\n    const data = {\n      style: this.style,\n      size: this.size,\n      textSize: this.textSize,\n      color: this.color,\n      phantom: this.phantom,\n      font: this.font,\n      fontFamily: this.fontFamily,\n      fontWeight: this.fontWeight,\n      fontShape: this.fontShape,\n      maxSize: this.maxSize,\n      minRuleThickness: this.minRuleThickness\n    };\n\n    for (const key in extension) {\n      if (extension.hasOwnProperty(key)) {\n        data[key] = extension[key];\n      }\n    }\n\n    return new Options(data);\n  }\n  /**\n   * Return an options object with the given style. If `this.style === style`,\n   * returns `this`.\n   */\n\n\n  havingStyle(style) {\n    if (this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: sizeAtStyle(this.textSize, style)\n      });\n    }\n  }\n  /**\n   * Return an options object with a cramped version of the current style. If\n   * the current style is cramped, returns `this`.\n   */\n\n\n  havingCrampedStyle() {\n    return this.havingStyle(this.style.cramp());\n  }\n  /**\n   * Return an options object with the given size and in at least `\\textstyle`.\n   * Returns `this` if appropriate.\n   */\n\n\n  havingSize(size) {\n    if (this.size === size && this.textSize === size) {\n      return this;\n    } else {\n      return this.extend({\n        style: this.style.text(),\n        size: size,\n        textSize: size,\n        sizeMultiplier: sizeMultipliers[size - 1]\n      });\n    }\n  }\n  /**\n   * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n   * changes to at least `\\textstyle`.\n   */\n\n\n  havingBaseStyle(style) {\n    style = style || this.style.text();\n    const wantSize = sizeAtStyle(Options.BASESIZE, style);\n\n    if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n      return this;\n    } else {\n      return this.extend({\n        style: style,\n        size: wantSize\n      });\n    }\n  }\n  /**\n   * Remove the effect of sizing changes such as \\Huge.\n   * Keep the effect of the current style, such as \\scriptstyle.\n   */\n\n\n  havingBaseSizing() {\n    let size;\n\n    switch (this.style.id) {\n      case 4:\n      case 5:\n        size = 3; // normalsize in scriptstyle\n\n        break;\n\n      case 6:\n      case 7:\n        size = 1; // normalsize in scriptscriptstyle\n\n        break;\n\n      default:\n        size = 6;\n      // normalsize in textstyle or displaystyle\n    }\n\n    return this.extend({\n      style: this.style.text(),\n      size: size\n    });\n  }\n  /**\n   * Create a new options object with the given color.\n   */\n\n\n  withColor(color) {\n    return this.extend({\n      color: color\n    });\n  }\n  /**\n   * Create a new options object with \"phantom\" set to true.\n   */\n\n\n  withPhantom() {\n    return this.extend({\n      phantom: true\n    });\n  }\n  /**\n   * Creates a new options object with the given math font or old text font.\n   * @type {[type]}\n   */\n\n\n  withFont(font) {\n    return this.extend({\n      font\n    });\n  }\n  /**\n   * Create a new options objects with the given fontFamily.\n   */\n\n\n  withTextFontFamily(fontFamily) {\n    return this.extend({\n      fontFamily,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontWeight(fontWeight) {\n    return this.extend({\n      fontWeight,\n      font: \"\"\n    });\n  }\n  /**\n   * Creates a new options object with the given font weight\n   */\n\n\n  withTextFontShape(fontShape) {\n    return this.extend({\n      fontShape,\n      font: \"\"\n    });\n  }\n  /**\n   * Return the CSS sizing classes required to switch from enclosing options\n   * `oldOptions` to `this`. Returns an array of classes.\n   */\n\n\n  sizingClasses(oldOptions) {\n    if (oldOptions.size !== this.size) {\n      return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the CSS sizing classes required to switch to the base size. Like\n   * `this.havingSize(BASESIZE).sizingClasses(this)`.\n   */\n\n\n  baseSizingClasses() {\n    if (this.size !== Options.BASESIZE) {\n      return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n    } else {\n      return [];\n    }\n  }\n  /**\n   * Return the font metrics for this size.\n   */\n\n\n  fontMetrics() {\n    if (!this._fontMetrics) {\n      this._fontMetrics = getGlobalMetrics(this.size);\n    }\n\n    return this._fontMetrics;\n  }\n  /**\n   * Gets the CSS color of the current options object\n   */\n\n\n  getColor() {\n    if (this.phantom) {\n      return \"transparent\";\n    } else {\n      return this.color;\n    }\n  }\n\n}\n\nOptions.BASESIZE = 6;\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\n\nconst ptPerUnit = {\n  // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n  // https://tex.stackexchange.com/a/8263\n  \"pt\": 1,\n  // TeX point\n  \"mm\": 7227 / 2540,\n  // millimeter\n  \"cm\": 7227 / 254,\n  // centimeter\n  \"in\": 72.27,\n  // inch\n  \"bp\": 803 / 800,\n  // big (PostScript) points\n  \"pc\": 12,\n  // pica\n  \"dd\": 1238 / 1157,\n  // didot\n  \"cc\": 14856 / 1157,\n  // cicero (12 didot)\n  \"nd\": 685 / 642,\n  // new didot\n  \"nc\": 1370 / 107,\n  // new cicero (12 new didot)\n  \"sp\": 1 / 65536,\n  // scaled point (TeX's internal smallest unit)\n  // https://tex.stackexchange.com/a/41371\n  \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n\n}; // Dictionary of relative units, for fast validity testing.\n\nconst relativeUnit = {\n  \"ex\": true,\n  \"em\": true,\n  \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nconst validUnit = function validUnit(unit) {\n  if (typeof unit !== \"string\") {\n    unit = unit.unit;\n  }\n\n  return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\n\nconst calculateSize = function calculateSize(sizeValue, options) {\n  let scale;\n\n  if (sizeValue.unit in ptPerUnit) {\n    // Absolute units\n    scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n    / options.fontMetrics().ptPerEm // Convert pt to CSS em\n    / options.sizeMultiplier; // Unscale to make absolute units\n  } else if (sizeValue.unit === \"mu\") {\n    // `mu` units scale with scriptstyle/scriptscriptstyle.\n    scale = options.fontMetrics().cssEmPerMu;\n  } else {\n    // Other relative units always refer to the *textstyle* font\n    // in the current size.\n    let unitOptions;\n\n    if (options.style.isTight()) {\n      // isTight() means current style is script/scriptscript.\n      unitOptions = options.havingStyle(options.style.text());\n    } else {\n      unitOptions = options;\n    } // TODO: In TeX these units are relative to the quad of the current\n    // *text* font, e.g. cmr10. KaTeX instead uses values from the\n    // comparably-sized *Computer Modern symbol* font. At 10pt, these\n    // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n    // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n    // TeX \\showlists shows a kern of 1.13889 * fontsize;\n    // KaTeX shows a kern of 1.171 * fontsize.\n\n\n    if (sizeValue.unit === \"ex\") {\n      scale = unitOptions.fontMetrics().xHeight;\n    } else if (sizeValue.unit === \"em\") {\n      scale = unitOptions.fontMetrics().quad;\n    } else {\n      throw new ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n    }\n\n    if (unitOptions !== options) {\n      scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n    }\n  }\n\n  return Math.min(sizeValue.number * scale, options.maxSize);\n};\n\n/* eslint no-console:0 */\n// The following have to be loaded from Main-Italic font, using class mathit\nconst mathitLetters = [\"\\\\imath\", \"\u0131\", // dotless i\n\"\\\\jmath\", \"\u0237\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"\u00A3\"];\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\n\nconst lookupSymbol = function lookupSymbol(value, // TODO(#963): Use a union type for this.\nfontName, mode) {\n  // Replace the value with its replaced value from symbol.js\n  if (symbols[mode][value] && symbols[mode][value].replace) {\n    value = symbols[mode][value].replace;\n  }\n\n  return {\n    value: value,\n    metrics: getCharacterMetrics(value, fontName, mode)\n  };\n};\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\n\n\nconst makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n  const lookup = lookupSymbol(value, fontName, mode);\n  const metrics = lookup.metrics;\n  value = lookup.value;\n  let symbolNode;\n\n  if (metrics) {\n    let italic = metrics.italic;\n\n    if (mode === \"text\" || options && options.font === \"mathit\") {\n      italic = 0;\n    }\n\n    symbolNode = new SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n  } else {\n    // TODO(emily): Figure out a good way to only print this in development\n    typeof console !== \"undefined\" && console.warn(\"No character metrics \" + `for '${value}' in style '${fontName}' and mode '${mode}'`);\n    symbolNode = new SymbolNode(value, 0, 0, 0, 0, 0, classes);\n  }\n\n  if (options) {\n    symbolNode.maxFontSize = options.sizeMultiplier;\n\n    if (options.style.isTight()) {\n      symbolNode.classes.push(\"mtight\");\n    }\n\n    const color = options.getColor();\n\n    if (color) {\n      symbolNode.style.color = color;\n    }\n  }\n\n  return symbolNode;\n};\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n */\n\n\nconst mathsym = function mathsym(value, mode, options, classes) {\n  if (classes === void 0) {\n    classes = [];\n  }\n\n  // Decide what font to render the symbol in by its entry in the symbols\n  // table.\n  // Have a special case for when the value = \\ because the \\ is used as a\n  // textord in unsupported command errors but cannot be parsed as a regular\n  // text ordinal and is therefore not present as a symbol in the symbols\n  // table for text, as well as a special case for boldsymbol because it\n  // can be used for bold + and -\n  if (options.font === \"boldsymbol\" && lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n    return makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n  } else if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {\n    return makeSymbol(value, \"Main-Regular\", mode, options, classes);\n  } else {\n    return makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n  }\n};\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (maindefault or mathit) to use for default math font,\n * depending on the symbol.\n */\n\n\nconst mathdefault = function mathdefault(value, mode, options, classes) {\n  if (/[0-9]/.test(value.charAt(0)) || // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n  // need to use Main-Italic instead\n  utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the font names (Main-Italic, Math-Italic, and Caligraphic)\n * and corresponding style tags (mathit, mathdefault, or mathcal) to use for font\n * \"mathnormal\", depending on the symbol.  Use this function instead of fontMap for\n * font \"mathnormal\".\n */\n\n\nconst mathnormal = function mathnormal(value, mode, options, classes) {\n  if (utils.contains(mathitLetters, value)) {\n    return {\n      fontName: \"Main-Italic\",\n      fontClass: \"mathit\"\n    };\n  } else if (/[0-9]/.test(value.charAt(0))) {\n    return {\n      fontName: \"Caligraphic-Regular\",\n      fontClass: \"mathcal\"\n    };\n  } else {\n    return {\n      fontName: \"Math-Italic\",\n      fontClass: \"mathdefault\"\n    };\n  }\n};\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\n\n\nconst boldsymbol = function boldsymbol(value, mode, options, classes) {\n  if (lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n    return {\n      fontName: \"Math-BoldItalic\",\n      fontClass: \"boldsymbol\"\n    };\n  } else {\n    // Some glyphs do not exist in Math-BoldItalic so we need to use\n    // Main-Bold instead.\n    return {\n      fontName: \"Main-Bold\",\n      fontClass: \"mathbf\"\n    };\n  }\n};\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\n\n\nconst makeOrd = function makeOrd(group, options, type) {\n  const mode = group.mode;\n  const text = group.text;\n  const classes = [\"mord\"]; // Math mode or Old font (i.e. \\rm)\n\n  const isFont = mode === \"math\" || mode === \"text\" && options.font;\n  const fontOrFamily = isFont ? options.font : options.fontFamily;\n\n  if (text.charCodeAt(0) === 0xD835) {\n    // surrogate pairs get special treatment\n    const _wideCharacterFont = wideCharacterFont(text, mode),\n          wideFontName = _wideCharacterFont[0],\n          wideFontClass = _wideCharacterFont[1];\n\n    return makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n  } else if (fontOrFamily) {\n    let fontName;\n    let fontClasses;\n\n    if (fontOrFamily === \"boldsymbol\" || fontOrFamily === \"mathnormal\") {\n      const fontData = fontOrFamily === \"boldsymbol\" ? boldsymbol(text, mode, options, classes) : mathnormal(text, mode, options, classes);\n      fontName = fontData.fontName;\n      fontClasses = [fontData.fontClass];\n    } else if (utils.contains(mathitLetters, text)) {\n      fontName = \"Main-Italic\";\n      fontClasses = [\"mathit\"];\n    } else if (isFont) {\n      fontName = fontMap[fontOrFamily].fontName;\n      fontClasses = [fontOrFamily];\n    } else {\n      fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n      fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n    }\n\n    if (lookupSymbol(text, fontName, mode).metrics) {\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));\n    } else if (ligatures.hasOwnProperty(text) && fontName.substr(0, 10) === \"Typewriter\") {\n      // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n      const parts = [];\n\n      for (let i = 0; i < text.length; i++) {\n        parts.push(makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));\n      }\n\n      return makeFragment(parts);\n    }\n  } // Makes a symbol in the default font for mathords and textords.\n\n\n  if (type === \"mathord\") {\n    const fontLookup = mathdefault(text, mode, options, classes);\n    return makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n  } else if (type === \"textord\") {\n    const font = symbols[mode][text] && symbols[mode][text].font;\n\n    if (font === \"ams\") {\n      const fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n    } else if (font === \"main\" || !font) {\n      const fontName = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n      return makeSymbol(text, fontName, mode, options, classes.concat(options.fontWeight, options.fontShape));\n    } else {\n      // fonts added by plugins\n      const fontName = retrieveTextFontName(font, options.fontWeight, options.fontShape); // We add font name as a css class\n\n      return makeSymbol(text, fontName, mode, options, classes.concat(fontName, options.fontWeight, options.fontShape));\n    }\n  } else {\n    throw new Error(\"unexpected type: \" + type + \" in makeOrd\");\n  }\n};\n/**\n * Returns true if subsequent symbolNodes have the same classes, skew, maxFont,\n * and styles.\n */\n\n\nconst canCombine = (prev, next) => {\n  if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) {\n    return false;\n  }\n\n  for (const style in prev.style) {\n    if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  for (const style in next.style) {\n    if (next.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Combine consequetive domTree.symbolNodes into a single symbolNode.\n * Note: this function mutates the argument.\n */\n\n\nconst tryCombineChars = chars => {\n  for (let i = 0; i < chars.length - 1; i++) {\n    const prev = chars[i];\n    const next = chars[i + 1];\n\n    if (prev instanceof SymbolNode && next instanceof SymbolNode && canCombine(prev, next)) {\n      prev.text += next.text;\n      prev.height = Math.max(prev.height, next.height);\n      prev.depth = Math.max(prev.depth, next.depth); // Use the last character's italic correction since we use\n      // it to add padding to the right of the span created from\n      // the combined characters.\n\n      prev.italic = next.italic;\n      chars.splice(i + 1, 1);\n      i--;\n    }\n  }\n\n  return chars;\n};\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\n\n\nconst sizeElementFromChildren = function sizeElementFromChildren(elem) {\n  let height = 0;\n  let depth = 0;\n  let maxFontSize = 0;\n\n  for (let i = 0; i < elem.children.length; i++) {\n    const child = elem.children[i];\n\n    if (child.height > height) {\n      height = child.height;\n    }\n\n    if (child.depth > depth) {\n      depth = child.depth;\n    }\n\n    if (child.maxFontSize > maxFontSize) {\n      maxFontSize = child.maxFontSize;\n    }\n  }\n\n  elem.height = height;\n  elem.depth = depth;\n  elem.maxFontSize = maxFontSize;\n};\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\n\n\nconst makeSpan = function makeSpan(classes, children, options, style) {\n  const span = new Span(classes, children, options, style);\n  sizeElementFromChildren(span);\n  return span;\n}; // SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\n\n\nconst makeSvgSpan = (classes, children, options, style) => new Span(classes, children, options, style);\n\nconst makeLineSpan = function makeLineSpan(className, options, thickness) {\n  const line = makeSpan([className], [], options);\n  line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness);\n  line.style.borderBottomWidth = line.height + \"em\";\n  line.maxFontSize = 1.0;\n  return line;\n};\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\n\n\nconst makeAnchor = function makeAnchor(href, classes, children, options) {\n  const anchor = new Anchor(href, classes, children, options);\n  sizeElementFromChildren(anchor);\n  return anchor;\n};\n/**\n * Makes a document fragment with the given list of children.\n */\n\n\nconst makeFragment = function makeFragment(children) {\n  const fragment = new DocumentFragment(children);\n  sizeElementFromChildren(fragment);\n  return fragment;\n};\n/**\n * Wraps group in a span if it's a document fragment, allowing to apply classes\n * and styles\n */\n\n\nconst wrapFragment = function wrapFragment(group, options) {\n  if (group instanceof DocumentFragment) {\n    return makeSpan([], [group], options);\n  }\n\n  return group;\n}; // These are exact object types to catch typos in the names of the optional fields.\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nconst getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n  if (params.positionType === \"individualShift\") {\n    const oldChildren = params.children;\n    const children = [oldChildren[0]]; // Add in kerns to the list of params.children to get each element to be\n    // shifted to the correct specified shift\n\n    const depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n    let currPos = depth;\n\n    for (let i = 1; i < oldChildren.length; i++) {\n      const diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n      const size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n      currPos = currPos + diff;\n      children.push({\n        type: \"kern\",\n        size\n      });\n      children.push(oldChildren[i]);\n    }\n\n    return {\n      children,\n      depth\n    };\n  }\n\n  let depth;\n\n  if (params.positionType === \"top\") {\n    // We always start at the bottom, so calculate the bottom by adding up\n    // all the sizes\n    let bottom = params.positionData;\n\n    for (let i = 0; i < params.children.length; i++) {\n      const child = params.children[i];\n      bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n    }\n\n    depth = bottom;\n  } else if (params.positionType === \"bottom\") {\n    depth = -params.positionData;\n  } else {\n    const firstChild = params.children[0];\n\n    if (firstChild.type !== \"elem\") {\n      throw new Error('First child must have type \"elem\".');\n    }\n\n    if (params.positionType === \"shift\") {\n      depth = -firstChild.elem.depth - params.positionData;\n    } else if (params.positionType === \"firstBaseline\") {\n      depth = -firstChild.elem.depth;\n    } else {\n      throw new Error(`Invalid positionType ${params.positionType}.`);\n    }\n  }\n\n  return {\n    children: params.children,\n    depth\n  };\n};\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\n\n\nconst makeVList = function makeVList(params, options) {\n  const _getVListChildrenAndD = getVListChildrenAndDepth(params),\n        children = _getVListChildrenAndD.children,\n        depth = _getVListChildrenAndD.depth; // Create a strut that is taller than any list item. The strut is added to\n  // each item, where it will determine the item's baseline. Since it has\n  // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n  // top edge and the strut's bottom edge will sit on the item's baseline,\n  // with no additional line-height spacing. This allows the item baseline to\n  // be positioned precisely without worrying about font ascent and\n  // line-height.\n\n\n  let pstrutSize = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"elem\") {\n      const elem = child.elem;\n      pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);\n    }\n  }\n\n  pstrutSize += 2;\n  const pstrut = makeSpan([\"pstrut\"], []);\n  pstrut.style.height = pstrutSize + \"em\"; // Create a new list of actual children at the correct offsets\n\n  const realChildren = [];\n  let minPos = depth;\n  let maxPos = depth;\n  let currPos = depth;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (child.type === \"kern\") {\n      currPos += child.size;\n    } else {\n      const elem = child.elem;\n      const classes = child.wrapperClasses || [];\n      const style = child.wrapperStyle || {};\n      const childWrap = makeSpan(classes, [pstrut, elem], undefined, style);\n      childWrap.style.top = -pstrutSize - currPos - elem.depth + \"em\";\n\n      if (child.marginLeft) {\n        childWrap.style.marginLeft = child.marginLeft;\n      }\n\n      if (child.marginRight) {\n        childWrap.style.marginRight = child.marginRight;\n      }\n\n      realChildren.push(childWrap);\n      currPos += elem.height + elem.depth;\n    }\n\n    minPos = Math.min(minPos, currPos);\n    maxPos = Math.max(maxPos, currPos);\n  } // The vlist contents go in a table-cell with `vertical-align:bottom`.\n  // This cell's bottom edge will determine the containing table's baseline\n  // without overly expanding the containing line-box.\n\n\n  const vlist = makeSpan([\"vlist\"], realChildren);\n  vlist.style.height = maxPos + \"em\"; // A second row is used if necessary to represent the vlist's depth.\n\n  let rows;\n\n  if (minPos < 0) {\n    // We will define depth in an empty span with display: table-cell.\n    // It should render with the height that we define. But Chrome, in\n    // contenteditable mode only, treats that span as if it contains some\n    // text content. And that min-height over-rides our desired height.\n    // So we put another empty span inside the depth strut span.\n    const emptySpan = makeSpan([], []);\n    const depthStrut = makeSpan([\"vlist\"], [emptySpan]);\n    depthStrut.style.height = -minPos + \"em\"; // Safari wants the first row to have inline content; otherwise it\n    // puts the bottom of the *second* row on the baseline.\n\n    const topStrut = makeSpan([\"vlist-s\"], [new SymbolNode(\"\\u200b\")]);\n    rows = [makeSpan([\"vlist-r\"], [vlist, topStrut]), makeSpan([\"vlist-r\"], [depthStrut])];\n  } else {\n    rows = [makeSpan([\"vlist-r\"], [vlist])];\n  }\n\n  const vtable = makeSpan([\"vlist-t\"], rows);\n\n  if (rows.length === 2) {\n    vtable.classes.push(\"vlist-t2\");\n  }\n\n  vtable.height = maxPos;\n  vtable.depth = -minPos;\n  return vtable;\n}; // Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\n\n\nconst makeGlue = (measurement, options) => {\n  // Make an empty span for the space\n  const rule = makeSpan([\"mspace\"], [], options);\n  const size = calculateSize(measurement, options);\n  rule.style.marginRight = `${size}em`;\n  return rule;\n}; // Takes font options, and returns the appropriate fontLookup name\n\n\nconst retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n  let baseFontName = \"\";\n\n  switch (fontFamily) {\n    case \"amsrm\":\n      baseFontName = \"AMS\";\n      break;\n\n    case \"textrm\":\n      baseFontName = \"Main\";\n      break;\n\n    case \"textsf\":\n      baseFontName = \"SansSerif\";\n      break;\n\n    case \"texttt\":\n      baseFontName = \"Typewriter\";\n      break;\n\n    default:\n      baseFontName = fontFamily;\n    // use fonts added by a plugin\n  }\n\n  let fontStylesName;\n\n  if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n    fontStylesName = \"BoldItalic\";\n  } else if (fontWeight === \"textbf\") {\n    fontStylesName = \"Bold\";\n  } else if (fontWeight === \"textit\") {\n    fontStylesName = \"Italic\";\n  } else {\n    fontStylesName = \"Regular\";\n  }\n\n  return `${baseFontName}-${fontStylesName}`;\n};\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\n\n\nconst fontMap = {\n  // styles\n  \"mathbf\": {\n    variant: \"bold\",\n    fontName: \"Main-Bold\"\n  },\n  \"mathrm\": {\n    variant: \"normal\",\n    fontName: \"Main-Regular\"\n  },\n  \"textit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  \"mathit\": {\n    variant: \"italic\",\n    fontName: \"Main-Italic\"\n  },\n  // Default math font, \"mathnormal\" and \"boldsymbol\" are missing because they\n  // require the use of several fonts: Main-Italic and Math-Italic for default\n  // math font, Main-Italic, Math-Italic, Caligraphic for \"mathnormal\", and\n  // Math-BoldItalic and Main-Bold for \"boldsymbol\".  This is handled by a\n  // special case in makeOrd which ends up calling mathdefault, mathnormal,\n  // and boldsymbol.\n  // families\n  \"mathbb\": {\n    variant: \"double-struck\",\n    fontName: \"AMS-Regular\"\n  },\n  \"mathcal\": {\n    variant: \"script\",\n    fontName: \"Caligraphic-Regular\"\n  },\n  \"mathfrak\": {\n    variant: \"fraktur\",\n    fontName: \"Fraktur-Regular\"\n  },\n  \"mathscr\": {\n    variant: \"script\",\n    fontName: \"Script-Regular\"\n  },\n  \"mathsf\": {\n    variant: \"sans-serif\",\n    fontName: \"SansSerif-Regular\"\n  },\n  \"mathtt\": {\n    variant: \"monospace\",\n    fontName: \"Typewriter-Regular\"\n  }\n};\nconst svgData = {\n  //   path, width, height\n  vec: [\"vec\", 0.471, 0.714],\n  // values from the font glyph\n  oiintSize1: [\"oiintSize1\", 0.957, 0.499],\n  // oval to overlay the integrand\n  oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n  oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n  oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nconst staticSvg = function staticSvg(value, options) {\n  // Create a span with inline SVG for the element.\n  const _svgData$value = svgData[value],\n        pathName = _svgData$value[0],\n        width = _svgData$value[1],\n        height = _svgData$value[2];\n  const path = new PathNode(pathName);\n  const svgNode = new SvgNode([path], {\n    \"width\": width + \"em\",\n    \"height\": height + \"em\",\n    // Override CSS rule `.katex svg { width: 100% }`\n    \"style\": \"width:\" + width + \"em\",\n    \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n    \"preserveAspectRatio\": \"xMinYMin\"\n  });\n  const span = makeSvgSpan([\"overlay\"], [svgNode], options);\n  span.height = height;\n  span.style.height = height + \"em\";\n  span.style.width = width + \"em\";\n  return span;\n};\n\nvar buildCommon = {\n  fontMap,\n  makeSymbol,\n  mathsym,\n  makeSpan,\n  makeSvgSpan,\n  makeLineSpan,\n  makeAnchor,\n  makeFragment,\n  wrapFragment,\n  makeVList,\n  makeOrd,\n  makeGlue,\n  staticSvg,\n  svgData,\n  tryCombineChars\n};\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n  const typedNode = checkNodeType(node, type);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of type ${type}, but got ` + (node ? `node of type ${node.type}` : String(node)));\n  } // $FlowFixMe: Unsure why.\n\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkNodeType(node, type) {\n  if (node && node.type === type) {\n    // The definition of ParseNode<TYPE> doesn't communicate to flow that\n    // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n    // happens to be true for all our value types.\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\n\nfunction assertAtomFamily(node, family) {\n  const typedNode = checkAtomFamily(node, family);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of type \"atom\" and family \"${family}\", but got ` + (node ? node.type === \"atom\" ? `atom of family ${node.family}` : `node of type ${node.type}` : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkAtomFamily(node, family) {\n  return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction assertSymbolNodeType(node) {\n  const typedNode = checkSymbolNodeType(node);\n\n  if (!typedNode) {\n    throw new Error(`Expected node of symbol group type, but got ` + (node ? `node of type ${node.type}` : String(node)));\n  }\n\n  return typedNode;\n}\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\n\nfunction checkSymbolNodeType(node) {\n  if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n    // $FlowFixMe\n    return node;\n  }\n\n  return null;\n}\n\n/**\n * Describes spaces between different classes of atoms.\n */\nconst thinspace = {\n  number: 3,\n  unit: \"mu\"\n};\nconst mediumspace = {\n  number: 4,\n  unit: \"mu\"\n};\nconst thickspace = {\n  number: 5,\n  unit: \"mu\"\n}; // Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n// Spacing relationships for display and text styles\nconst spacings = {\n  mord: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mbin: {\n    mord: mediumspace,\n    mop: mediumspace,\n    mopen: mediumspace,\n    minner: mediumspace\n  },\n  mrel: {\n    mord: thickspace,\n    mop: thickspace,\n    mopen: thickspace,\n    minner: thickspace\n  },\n  mopen: {},\n  mclose: {\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    minner: thinspace\n  },\n  mpunct: {\n    mord: thinspace,\n    mop: thinspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mclose: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  },\n  minner: {\n    mord: thinspace,\n    mop: thinspace,\n    mbin: mediumspace,\n    mrel: thickspace,\n    mopen: thinspace,\n    mpunct: thinspace,\n    minner: thinspace\n  }\n}; // Spacing relationships for script and scriptscript styles\n\nconst tightSpacings = {\n  mord: {\n    mop: thinspace\n  },\n  mop: {\n    mord: thinspace,\n    mop: thinspace\n  },\n  mbin: {},\n  mrel: {},\n  mopen: {},\n  mclose: {\n    mop: thinspace\n  },\n  mpunct: {},\n  minner: {\n    mop: thinspace\n  }\n};\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nconst _functions = {};\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _htmlGroupBuilders = {};\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\n\nconst _mathmlGroupBuilders = {};\nfunction defineFunction(_ref) {\n  let type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of functions\n  const data = {\n    type,\n    numArgs: props.numArgs,\n    argTypes: props.argTypes,\n    greediness: props.greediness === undefined ? 1 : props.greediness,\n    allowedInText: !!props.allowedInText,\n    allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n    numOptionalArgs: props.numOptionalArgs || 0,\n    infix: !!props.infix,\n    handler: handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    _functions[names[i]] = data;\n  }\n\n  if (type) {\n    if (htmlBuilder) {\n      _htmlGroupBuilders[type] = htmlBuilder;\n    }\n\n    if (mathmlBuilder) {\n      _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n  }\n}\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\n\nfunction defineFunctionBuilders(_ref2) {\n  let type = _ref2.type,\n      htmlBuilder = _ref2.htmlBuilder,\n      mathmlBuilder = _ref2.mathmlBuilder;\n  defineFunction({\n    type,\n    names: [],\n    props: {\n      numArgs: 0\n    },\n\n    handler() {\n      throw new Error('Should never be called.');\n    },\n\n    htmlBuilder,\n    mathmlBuilder\n  });\n} // Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\n\nconst ordargument = function ordargument(arg) {\n  const node = checkNodeType(arg, \"ordgroup\");\n  return node ? node.body : [arg];\n};\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\nconst makeSpan$1 = buildCommon.makeSpan; // Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\n\nconst binLeftCanceller = [\"leftmost\", \"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"];\nconst binRightCanceller = [\"rightmost\", \"mrel\", \"mclose\", \"mpunct\"];\nconst styleMap = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\nconst DomEnum = {\n  mord: \"mord\",\n  mop: \"mop\",\n  mbin: \"mbin\",\n  mrel: \"mrel\",\n  mopen: \"mopen\",\n  mclose: \"mclose\",\n  mpunct: \"mpunct\",\n  minner: \"minner\"\n};\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nconst buildExpression = function buildExpression(expression, options, isRealGroup, surrounding) {\n  if (surrounding === void 0) {\n    surrounding = [null, null];\n  }\n\n  // Parse expressions into `groups`.\n  const groups = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    const output = buildGroup(expression[i], options);\n\n    if (output instanceof DocumentFragment) {\n      const children = output.children;\n      groups.push(...children);\n    } else {\n      groups.push(output);\n    }\n  } // If `expression` is a partial group, let the parent handle spacings\n  // to avoid processing groups multiple times.\n\n\n  if (!isRealGroup) {\n    return groups;\n  }\n\n  let glueOptions = options;\n\n  if (expression.length === 1) {\n    const node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n\n    if (!node) ; else if (node.type === \"sizing\") {\n      glueOptions = options.havingSize(node.size);\n    } else if (node.type === \"styling\") {\n      glueOptions = options.havingStyle(styleMap[node.style]);\n    }\n  } // Dummy spans for determining spacings between surrounding atoms.\n  // If `expression` has no atoms on the left or right, class \"leftmost\"\n  // or \"rightmost\", respectively, is used to indicate it.\n\n\n  const dummyPrev = makeSpan$1([surrounding[0] || \"leftmost\"], [], options);\n  const dummyNext = makeSpan$1([surrounding[1] || \"rightmost\"], [], options); // TODO: These code assumes that a node's math class is the first element\n  // of its `classes` array. A later cleanup should ensure this, for\n  // instance by changing the signature of `makeSpan`.\n  // Before determining what spaces to insert, perform bin cancellation.\n  // Binary operators change to ordinary symbols in some contexts.\n\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = prev.classes[0];\n    const type = node.classes[0];\n\n    if (prevType === \"mbin\" && utils.contains(binRightCanceller, type)) {\n      prev.classes[0] = \"mord\";\n    } else if (type === \"mbin\" && utils.contains(binLeftCanceller, prevType)) {\n      node.classes[0] = \"mord\";\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  traverseNonSpaceNodes(groups, (node, prev) => {\n    const prevType = getTypeOfDomTree(prev);\n    const type = getTypeOfDomTree(node); // 'mtight' indicates that the node is script or scriptscript style.\n\n    const space = prevType && type ? node.hasClass(\"mtight\") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;\n\n    if (space) {\n      // Insert glue (spacing) after the `prev`.\n      return buildCommon.makeGlue(space, glueOptions);\n    }\n  }, {\n    node: dummyPrev\n  }, dummyNext);\n  return groups;\n}; // Depth-first traverse non-space `nodes`, calling `callback` with the current and\n// previous node as arguments, optionally returning a node to insert after the\n// previous node. `prev` is an object with the previous node and `insertAfter`\n// function to insert after it. `next` is a node that will be added to the right.\n// Used for bin cancellation and inserting spacings.\n\nconst traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {\n  if (next) {\n    // temporarily append the right node, if exists\n    nodes.push(next);\n  }\n\n  let i = 0;\n\n  for (; i < nodes.length; i++) {\n    const node = nodes[i];\n    const partialGroup = checkPartialGroup(node);\n\n    if (partialGroup) {\n      // Recursive DFS\n      // $FlowFixMe: make nodes a $ReadOnlyArray by returning a new array\n      traverseNonSpaceNodes(partialGroup.children, callback, prev);\n      continue;\n    } // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes\n\n\n    if (node.classes[0] === \"mspace\") {\n      continue;\n    }\n\n    const result = callback(node, prev.node);\n\n    if (result) {\n      if (prev.insertAfter) {\n        prev.insertAfter(result);\n      } else {\n        // insert at front\n        nodes.unshift(result);\n        i++;\n      }\n    }\n\n    prev.node = node;\n\n    prev.insertAfter = (index => n => {\n      nodes.splice(index + 1, 0, n);\n      i++;\n    })(i);\n  }\n\n  if (next) {\n    nodes.pop();\n  }\n}; // Check if given node is a partial group, i.e., does not affect spacing around.\n\n\nconst checkPartialGroup = function checkPartialGroup(node) {\n  if (node instanceof DocumentFragment || node instanceof Anchor) {\n    return node;\n  }\n\n  return null;\n}; // Return the outermost node of a domTree.\n\n\nconst getOutermostNode = function getOutermostNode(node, side) {\n  const partialGroup = checkPartialGroup(node);\n\n  if (partialGroup) {\n    const children = partialGroup.children;\n\n    if (children.length) {\n      if (side === \"right\") {\n        return getOutermostNode(children[children.length - 1], \"right\");\n      } else if (side === \"left\") {\n        return getOutermostNode(children[0], \"left\");\n      }\n    }\n  }\n\n  return node;\n}; // Return math atom class (mclass) of a domTree.\n// If `side` is given, it will get the type of the outermost node at given side.\n\n\nconst getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n  if (!node) {\n    return null;\n  }\n\n  if (side) {\n    node = getOutermostNode(node, side);\n  } // This makes a lot of assumptions as to where the type of atom\n  // appears.  We should do a better job of enforcing this.\n\n\n  return DomEnum[node.classes[0]] || null;\n};\nconst makeNullDelimiter = function makeNullDelimiter(options, classes) {\n  const moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n  return makeSpan$1(classes.concat(moreClasses));\n};\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\n\nconst buildGroup = function buildGroup(group, options, baseOptions) {\n  if (!group) {\n    return makeSpan$1();\n  }\n\n  if (_htmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    let groupNode = _htmlGroupBuilders[group.type](group, options); // If the size changed between the parent and the current group, account\n    // for that size difference.\n\n    if (baseOptions && options.size !== baseOptions.size) {\n      groupNode = makeSpan$1(options.sizingClasses(baseOptions), [groupNode], options);\n      const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n      groupNode.height *= multiplier;\n      groupNode.depth *= multiplier;\n    }\n\n    return groupNode;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\n\nfunction buildHTMLUnbreakable(children, options) {\n  // Compute height and depth of this chunk.\n  const body = makeSpan$1([\"base\"], children, options); // Add strut, which ensures that the top of the HTML element falls at\n  // the height of the expression, and the bottom of the HTML element\n  // falls at the depth of the expression.\n  // We used to have separate top and bottom struts, where the bottom strut\n  // would like to use `vertical-align: top`, but in IE 9 this lowers the\n  // baseline of the box to the bottom of this strut (instead of staying in\n  // the normal place) so we use an absolute value for vertical-align instead.\n\n  const strut = makeSpan$1([\"strut\"]);\n  strut.style.height = body.height + body.depth + \"em\";\n  strut.style.verticalAlign = -body.depth + \"em\";\n  body.children.unshift(strut);\n  return body;\n}\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\n\n\nfunction buildHTML(tree, options) {\n  // Strip off outer tag wrapper for processing below.\n  let tag = null;\n\n  if (tree.length === 1 && tree[0].type === \"tag\") {\n    tag = tree[0].tag;\n    tree = tree[0].body;\n  } // Build the expression contained in the tree\n\n\n  const expression = buildExpression(tree, options, true);\n  const children = []; // Create one base node for each chunk between potential line breaks.\n  // The TeXBook [p.173] says \"A formula will be broken only after a\n  // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n  // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n  // binary operation is on the ``outer level'' of the formula (i.e., not\n  // enclosed in {...} and not part of an \\over construction).\"\n\n  let parts = [];\n\n  for (let i = 0; i < expression.length; i++) {\n    parts.push(expression[i]);\n\n    if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n      // Put any post-operator glue on same line as operator.\n      // Watch for \\nobreak along the way, and stop at \\newline.\n      let nobreak = false;\n\n      while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\") && !expression[i + 1].hasClass(\"newline\")) {\n        i++;\n        parts.push(expression[i]);\n\n        if (expression[i].hasClass(\"nobreak\")) {\n          nobreak = true;\n        }\n      } // Don't allow break if \\nobreak among the post-operator glue.\n\n\n      if (!nobreak) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      }\n    } else if (expression[i].hasClass(\"newline\")) {\n      // Write the line except the newline\n      parts.pop();\n\n      if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n        parts = [];\n      } // Put the newline at the top level\n\n\n      children.push(expression[i]);\n    }\n  }\n\n  if (parts.length > 0) {\n    children.push(buildHTMLUnbreakable(parts, options));\n  } // Now, if there was a tag, build it too and append it as a final child.\n\n\n  let tagChild;\n\n  if (tag) {\n    tagChild = buildHTMLUnbreakable(buildExpression(tag, options, true));\n    tagChild.classes = [\"tag\"];\n    children.push(tagChild);\n  }\n\n  const htmlNode = makeSpan$1([\"katex-html\"], children);\n  htmlNode.setAttribute(\"aria-hidden\", \"true\"); // Adjust the strut of the tag to be the maximum height of all children\n  // (the height of the enclosing htmlNode) for proper vertical alignment.\n\n  if (tagChild) {\n    const strut = tagChild.children[0];\n    strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n    strut.style.verticalAlign = -htmlNode.depth + \"em\";\n  }\n\n  return htmlNode;\n}\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\nfunction newDocumentFragment(children) {\n  return new DocumentFragment(children);\n}\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\n\nclass MathNode {\n  constructor(type, children) {\n    this.type = void 0;\n    this.attributes = void 0;\n    this.children = void 0;\n    this.type = type;\n    this.attributes = {};\n    this.children = children || [];\n  }\n  /**\n   * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n   * semantic content, so this is used heavily.\n   */\n\n\n  setAttribute(name, value) {\n    this.attributes[name] = value;\n  }\n  /**\n   * Gets an attribute on a MathML node.\n   */\n\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        node.setAttribute(attr, this.attributes[attr]);\n      }\n    }\n\n    for (let i = 0; i < this.children.length; i++) {\n      node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    let markup = \"<\" + this.type; // Add the attributes\n\n    for (const attr in this.attributes) {\n      if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n        markup += \" \" + attr + \"=\\\"\";\n        markup += utils.escape(this.attributes[attr]);\n        markup += \"\\\"\";\n      }\n    }\n\n    markup += \">\";\n\n    for (let i = 0; i < this.children.length; i++) {\n      markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + this.type + \">\";\n    return markup;\n  }\n  /**\n   * Converts the math node into a string, similar to innerText, but escaped.\n   */\n\n\n  toText() {\n    return this.children.map(child => child.toText()).join(\"\");\n  }\n\n}\n/**\n * This node represents a piece of text.\n */\n\nclass TextNode {\n  constructor(text) {\n    this.text = void 0;\n    this.text = text;\n  }\n  /**\n   * Converts the text node into a DOM text node.\n   */\n\n\n  toNode() {\n    return document.createTextNode(this.text);\n  }\n  /**\n   * Converts the text node into escaped HTML markup\n   * (representing the text itself).\n   */\n\n\n  toMarkup() {\n    return utils.escape(this.toText());\n  }\n  /**\n   * Converts the text node into a string\n   * (representing the text iteself).\n   */\n\n\n  toText() {\n    return this.text;\n  }\n\n}\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nclass SpaceNode {\n  /**\n   * Create a Space node with width given in CSS ems.\n   */\n  constructor(width) {\n    this.width = void 0;\n    this.character = void 0;\n    this.width = width; // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n    // for a table of space-like characters.  We use Unicode\n    // representations instead of &LongNames; as it's not clear how to\n    // make the latter via document.createTextNode.\n\n    if (width >= 0.05555 && width <= 0.05556) {\n      this.character = \"\\u200a\"; // &VeryThinSpace;\n    } else if (width >= 0.1666 && width <= 0.1667) {\n      this.character = \"\\u2009\"; // &ThinSpace;\n    } else if (width >= 0.2222 && width <= 0.2223) {\n      this.character = \"\\u2005\"; // &MediumSpace;\n    } else if (width >= 0.2777 && width <= 0.2778) {\n      this.character = \"\\u2005\\u200a\"; // &ThickSpace;\n    } else if (width >= -0.05556 && width <= -0.05555) {\n      this.character = \"\\u200a\\u2063\"; // &NegativeVeryThinSpace;\n    } else if (width >= -0.1667 && width <= -0.1666) {\n      this.character = \"\\u2009\\u2063\"; // &NegativeThinSpace;\n    } else if (width >= -0.2223 && width <= -0.2222) {\n      this.character = \"\\u205f\\u2063\"; // &NegativeMediumSpace;\n    } else if (width >= -0.2778 && width <= -0.2777) {\n      this.character = \"\\u2005\\u2063\"; // &NegativeThickSpace;\n    } else {\n      this.character = null;\n    }\n  }\n  /**\n   * Converts the math node into a MathML-namespaced DOM element.\n   */\n\n\n  toNode() {\n    if (this.character) {\n      return document.createTextNode(this.character);\n    } else {\n      const node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n      node.setAttribute(\"width\", this.width + \"em\");\n      return node;\n    }\n  }\n  /**\n   * Converts the math node into an HTML markup string.\n   */\n\n\n  toMarkup() {\n    if (this.character) {\n      return `<mtext>${this.character}</mtext>`;\n    } else {\n      return `<mspace width=\"${this.width}em\"/>`;\n    }\n  }\n  /**\n   * Converts the math node into a string, similar to innerText.\n   */\n\n\n  toText() {\n    if (this.character) {\n      return this.character;\n    } else {\n      return \" \";\n    }\n  }\n\n}\n\nvar mathMLTree = {\n  MathNode,\n  TextNode,\n  SpaceNode,\n  newDocumentFragment\n};\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nconst makeText = function makeText(text, mode, options) {\n  if (symbols[mode][text] && symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n    text = symbols[mode][text].replace;\n  }\n\n  return new mathMLTree.TextNode(text);\n};\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\n\nconst makeRow = function makeRow(body) {\n  if (body.length === 1) {\n    return body[0];\n  } else {\n    return new mathMLTree.MathNode(\"mrow\", body);\n  }\n};\n/**\n * Returns the math variant as a string or null if none is required.\n */\n\nconst getVariant = function getVariant(group, options) {\n  // Handle \\text... font specifiers as best we can.\n  // MathML has a limited list of allowable mathvariant specifiers; see\n  // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n  if (options.fontFamily === \"texttt\") {\n    return \"monospace\";\n  } else if (options.fontFamily === \"textsf\") {\n    if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n      return \"sans-serif-bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n      return \"sans-serif-italic\";\n    } else if (options.fontWeight === \"textbf\") {\n      return \"bold-sans-serif\";\n    } else {\n      return \"sans-serif\";\n    }\n  } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n    return \"bold-italic\";\n  } else if (options.fontShape === \"textit\") {\n    return \"italic\";\n  } else if (options.fontWeight === \"textbf\") {\n    return \"bold\";\n  }\n\n  const font = options.font;\n\n  if (!font || font === \"mathnormal\") {\n    return null;\n  }\n\n  const mode = group.mode;\n\n  if (font === \"mathit\") {\n    return \"italic\";\n  } else if (font === \"boldsymbol\") {\n    return \"bold-italic\";\n  } else if (font === \"mathbf\") {\n    return \"bold\";\n  } else if (font === \"mathbb\") {\n    return \"double-struck\";\n  } else if (font === \"mathfrak\") {\n    return \"fraktur\";\n  } else if (font === \"mathscr\" || font === \"mathcal\") {\n    // MathML makes no distinction between script and caligrahpic\n    return \"script\";\n  } else if (font === \"mathsf\") {\n    return \"sans-serif\";\n  } else if (font === \"mathtt\") {\n    return \"monospace\";\n  }\n\n  let text = group.text;\n\n  if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n    return null;\n  }\n\n  if (symbols[mode][text] && symbols[mode][text].replace) {\n    text = symbols[mode][text].replace;\n  }\n\n  const fontName = buildCommon.fontMap[font].fontName;\n\n  if (getCharacterMetrics(text, fontName, mode)) {\n    return buildCommon.fontMap[font].variant;\n  }\n\n  return null;\n};\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\n\nconst buildExpression$1 = function buildExpression(expression, options, isOrdgroup) {\n  if (expression.length === 1) {\n    const group = buildGroup$1(expression[0], options);\n\n    if (isOrdgroup && group instanceof MathNode && group.type === \"mo\") {\n      // When TeX writers want to suppress spacing on an operator,\n      // they often put the operator by itself inside braces.\n      group.setAttribute(\"lspace\", \"0em\");\n      group.setAttribute(\"rspace\", \"0em\");\n    }\n\n    return [group];\n  }\n\n  const groups = [];\n  let lastGroup;\n\n  for (let i = 0; i < expression.length; i++) {\n    const group = buildGroup$1(expression[i], options);\n\n    if (group instanceof MathNode && lastGroup instanceof MathNode) {\n      // Concatenate adjacent <mtext>s\n      if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate adjacent <mn>s\n      } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n        lastGroup.children.push(...group.children);\n        continue; // Concatenate <mn>...</mn> followed by <mi>.</mi>\n      } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n        const child = group.children[0];\n\n        if (child instanceof TextNode && child.text === '.') {\n          lastGroup.children.push(...group.children);\n          continue;\n        }\n      } else if (lastGroup.type === 'mi' && lastGroup.children.length === 1) {\n        const lastChild = lastGroup.children[0];\n\n        if (lastChild instanceof TextNode && lastChild.text === '\\u0338' && (group.type === 'mo' || group.type === 'mi' || group.type === 'mn')) {\n          const child = group.children[0];\n\n          if (child instanceof TextNode && child.text.length > 0) {\n            // Overlay with combining character long solidus\n            child.text = child.text.slice(0, 1) + \"\\u0338\" + child.text.slice(1);\n            groups.pop();\n          }\n        }\n      }\n    }\n\n    groups.push(group);\n    lastGroup = group;\n  }\n\n  return groups;\n};\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\n\nconst buildExpressionRow = function buildExpressionRow(expression, options, isOrdgroup) {\n  return makeRow(buildExpression$1(expression, options, isOrdgroup));\n};\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\n\nconst buildGroup$1 = function buildGroup(group, options) {\n  if (!group) {\n    return new mathMLTree.MathNode(\"mrow\");\n  }\n\n  if (_mathmlGroupBuilders[group.type]) {\n    // Call the groupBuilders function\n    const result = _mathmlGroupBuilders[group.type](group, options);\n    return result;\n  } else {\n    throw new ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n  }\n};\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\n\nfunction buildMathML(tree, texExpression, options, forMathmlOnly) {\n  const expression = buildExpression$1(tree, options); // Wrap up the expression in an mrow so it is presented in the semantics\n  // tag correctly, unless it's a single <mrow> or <mtable>.\n\n  let wrapper;\n\n  if (expression.length === 1 && expression[0] instanceof MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n    wrapper = expression[0];\n  } else {\n    wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n  } // Build a TeX annotation of the source\n\n\n  const annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n  annotation.setAttribute(\"encoding\", \"application/x-tex\");\n  const semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n  const math = new mathMLTree.MathNode(\"math\", [semantics]);\n  math.setAttribute(\"xmlns\", \"http://www.w3.org/1998/Math/MathML\"); // You can't style <math> nodes, so we wrap the node in a span.\n  // NOTE: The span class is not typed to have <math> nodes as children, and\n  // we don't want to make the children type more generic since the children\n  // of span are expected to have more fields in `buildHtml` contexts.\n\n  const wrapperClass = forMathmlOnly ? \"katex\" : \"katex-mathml\"; // $FlowFixMe\n\n  return buildCommon.makeSpan([wrapperClass], [math]);\n}\n\nconst optionsFromSettings = function optionsFromSettings(settings) {\n  return new Options({\n    style: settings.displayMode ? Style$1.DISPLAY : Style$1.TEXT,\n    maxSize: settings.maxSize,\n    minRuleThickness: settings.minRuleThickness\n  });\n};\n\nconst displayWrap = function displayWrap(node, settings) {\n  if (settings.displayMode) {\n    const classes = [\"katex-display\"];\n\n    if (settings.leqno) {\n      classes.push(\"leqno\");\n    }\n\n    if (settings.fleqn) {\n      classes.push(\"fleqn\");\n    }\n\n    node = buildCommon.makeSpan(classes, [node]);\n  }\n\n  return node;\n};\n\nconst buildTree = function buildTree(tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  let katexNode;\n\n  if (settings.output === \"mathml\") {\n    return buildMathML(tree, expression, options, true);\n  } else if (settings.output === \"html\") {\n    const htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  } else {\n    const mathMLNode = buildMathML(tree, expression, options, false);\n    const htmlNode = buildHTML(tree, options);\n    katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n  }\n\n  return displayWrap(katexNode, settings);\n};\nconst buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n  const options = optionsFromSettings(settings);\n  const htmlNode = buildHTML(tree, options);\n  const katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n  return displayWrap(katexNode, settings);\n};\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\nconst stretchyCodePoint = {\n  widehat: \"^\",\n  widecheck: \"\u02C7\",\n  widetilde: \"~\",\n  utilde: \"~\",\n  overleftarrow: \"\\u2190\",\n  underleftarrow: \"\\u2190\",\n  xleftarrow: \"\\u2190\",\n  overrightarrow: \"\\u2192\",\n  underrightarrow: \"\\u2192\",\n  xrightarrow: \"\\u2192\",\n  underbrace: \"\\u23df\",\n  overbrace: \"\\u23de\",\n  overgroup: \"\\u23e0\",\n  undergroup: \"\\u23e1\",\n  overleftrightarrow: \"\\u2194\",\n  underleftrightarrow: \"\\u2194\",\n  xleftrightarrow: \"\\u2194\",\n  Overrightarrow: \"\\u21d2\",\n  xRightarrow: \"\\u21d2\",\n  overleftharpoon: \"\\u21bc\",\n  xleftharpoonup: \"\\u21bc\",\n  overrightharpoon: \"\\u21c0\",\n  xrightharpoonup: \"\\u21c0\",\n  xLeftarrow: \"\\u21d0\",\n  xLeftrightarrow: \"\\u21d4\",\n  xhookleftarrow: \"\\u21a9\",\n  xhookrightarrow: \"\\u21aa\",\n  xmapsto: \"\\u21a6\",\n  xrightharpoondown: \"\\u21c1\",\n  xleftharpoondown: \"\\u21bd\",\n  xrightleftharpoons: \"\\u21cc\",\n  xleftrightharpoons: \"\\u21cb\",\n  xtwoheadleftarrow: \"\\u219e\",\n  xtwoheadrightarrow: \"\\u21a0\",\n  xlongequal: \"=\",\n  xtofrom: \"\\u21c4\",\n  xrightleftarrows: \"\\u21c4\",\n  xrightequilibrium: \"\\u21cc\",\n  // Not a perfect match.\n  xleftequilibrium: \"\\u21cb\" // None better available.\n\n};\n\nconst mathMLnode = function mathMLnode(label) {\n  const node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n  node.setAttribute(\"stretchy\", \"true\");\n  return node;\n}; // Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n//    The SVG typically contains a very long (400 em) arrow.\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\n\nconst katexImagesData = {\n  //   path(s), minWidth, height, align\n  overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n  underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n  xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n  xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n  Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n  xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n  xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n  overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n  xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n  overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n  xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n  xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n  xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n  overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n  underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n  underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n  xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n  xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n  xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n  xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n  xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n  xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n  overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n  overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n  undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n  xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n  xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n  // The next three arrows are from the mhchem package.\n  // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n  // document as \\xrightarrow or \\xrightleftharpoons. Those have\n  // min-length = 1.75em, so we set min-length on these next three to match.\n  xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n  xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n  xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nconst groupLength = function groupLength(arg) {\n  if (arg.type === \"ordgroup\") {\n    return arg.body.length;\n  } else {\n    return 1;\n  }\n};\n\nconst svgSpan = function svgSpan(group, options) {\n  // Create a span with inline SVG for the element.\n  function buildSvgSpan_() {\n    let viewBoxWidth = 400000; // default\n\n    const label = group.label.substr(1);\n\n    if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n      // Each type in the `if` statement corresponds to one of the ParseNode\n      // types below. This narrowing is required to access `grp.base`.\n      const grp = group; // There are four SVG images available for each function.\n      // Choose a taller image when there are more characters.\n\n      const numChars = groupLength(grp.base);\n      let viewBoxHeight;\n      let pathName;\n      let height;\n\n      if (numChars > 5) {\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxHeight = 420;\n          viewBoxWidth = 2364;\n          height = 0.42;\n          pathName = label + \"4\";\n        } else {\n          viewBoxHeight = 312;\n          viewBoxWidth = 2340;\n          height = 0.34;\n          pathName = \"tilde4\";\n        }\n      } else {\n        const imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n\n        if (label === \"widehat\" || label === \"widecheck\") {\n          viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n          viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n          height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n          pathName = label + imgIndex;\n        } else {\n          viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n          viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n          height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n          pathName = \"tilde\" + imgIndex;\n        }\n      }\n\n      const path = new PathNode(pathName);\n      const svgNode = new SvgNode([path], {\n        \"width\": \"100%\",\n        \"height\": height + \"em\",\n        \"viewBox\": `0 0 ${viewBoxWidth} ${viewBoxHeight}`,\n        \"preserveAspectRatio\": \"none\"\n      });\n      return {\n        span: buildCommon.makeSvgSpan([], [svgNode], options),\n        minWidth: 0,\n        height\n      };\n    } else {\n      const spans = [];\n      const data = katexImagesData[label];\n      const paths = data[0],\n            minWidth = data[1],\n            viewBoxHeight = data[2];\n      const height = viewBoxHeight / 1000;\n      const numSvgChildren = paths.length;\n      let widthClasses;\n      let aligns;\n\n      if (numSvgChildren === 1) {\n        // $FlowFixMe: All these cases must be of the 4-tuple type.\n        const align1 = data[3];\n        widthClasses = [\"hide-tail\"];\n        aligns = [align1];\n      } else if (numSvgChildren === 2) {\n        widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n        aligns = [\"xMinYMin\", \"xMaxYMin\"];\n      } else if (numSvgChildren === 3) {\n        widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n        aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n      } else {\n        throw new Error(`Correct katexImagesData or update code here to support\n                    ${numSvgChildren} children.`);\n      }\n\n      for (let i = 0; i < numSvgChildren; i++) {\n        const path = new PathNode(paths[i]);\n        const svgNode = new SvgNode([path], {\n          \"width\": \"400em\",\n          \"height\": height + \"em\",\n          \"viewBox\": `0 0 ${viewBoxWidth} ${viewBoxHeight}`,\n          \"preserveAspectRatio\": aligns[i] + \" slice\"\n        });\n        const span = buildCommon.makeSvgSpan([widthClasses[i]], [svgNode], options);\n\n        if (numSvgChildren === 1) {\n          return {\n            span,\n            minWidth,\n            height\n          };\n        } else {\n          span.style.height = height + \"em\";\n          spans.push(span);\n        }\n      }\n\n      return {\n        span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n        minWidth,\n        height\n      };\n    }\n  } // buildSvgSpan_()\n\n\n  const _buildSvgSpan_ = buildSvgSpan_(),\n        span = _buildSvgSpan_.span,\n        minWidth = _buildSvgSpan_.minWidth,\n        height = _buildSvgSpan_.height; // Note that we are returning span.depth = 0.\n  // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n  span.height = height;\n  span.style.height = height + \"em\";\n\n  if (minWidth > 0) {\n    span.style.minWidth = minWidth + \"em\";\n  }\n\n  return span;\n};\n\nconst encloseSpan = function encloseSpan(inner, label, pad, options) {\n  // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n  let img;\n  const totalHeight = inner.height + inner.depth + 2 * pad;\n\n  if (/fbox|color/.test(label)) {\n    img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n    if (label === \"fbox\") {\n      const color = options.color && options.getColor();\n\n      if (color) {\n        img.style.borderColor = color;\n      }\n    }\n  } else {\n    // \\cancel, \\bcancel, or \\xcancel\n    // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n    // its stroke-width will not vary with span area.\n    const lines = [];\n\n    if (/^[bx]cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"0\",\n        \"x2\": \"100%\",\n        \"y2\": \"100%\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    if (/^x?cancel$/.test(label)) {\n      lines.push(new LineNode({\n        \"x1\": \"0\",\n        \"y1\": \"100%\",\n        \"x2\": \"100%\",\n        \"y2\": \"0\",\n        \"stroke-width\": \"0.046em\"\n      }));\n    }\n\n    const svgNode = new SvgNode(lines, {\n      \"width\": \"100%\",\n      \"height\": totalHeight + \"em\"\n    });\n    img = buildCommon.makeSvgSpan([], [svgNode], options);\n  }\n\n  img.height = totalHeight;\n  img.style.height = totalHeight + \"em\";\n  return img;\n};\n\nvar stretchy = {\n  encloseSpan,\n  mathMLnode,\n  svgSpan\n};\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\nconst htmlBuilder = (grp, options) => {\n  // Accents are handled in the TeXbook pg. 443, rule 12.\n  let base;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n  let supSubGroup;\n\n  if (supSub) {\n    // If our base is a character box, and we have superscripts and\n    // subscripts, the supsub will defer to us. In particular, we want\n    // to attach the superscripts and subscripts to the inner body (so\n    // that the position of the superscripts and subscripts won't be\n    // affected by the height of the accent). We accomplish this by\n    // sticking the base of the accent into the base of the supsub, and\n    // rendering that, while keeping track of where the accent is.\n    // The real accent group is the base of the supsub group\n    group = assertNodeType(supSub.base, \"accent\"); // The character box is the base of the accent group\n\n    base = group.base; // Stick the character box into the base of the supsub group\n\n    supSub.base = base; // Rerender the supsub group with its new base, and store that\n    // result.\n\n    supSubGroup = assertSpan(buildGroup(supSub, options)); // reset original base\n\n    supSub.base = group;\n  } else {\n    group = assertNodeType(grp, \"accent\");\n    base = group.base;\n  } // Build the base group\n\n\n  const body = buildGroup(base, options.havingCrampedStyle()); // Does the accent need to shift for the skew of a character?\n\n  const mustShift = group.isShifty && utils.isCharacterBox(base); // Calculate the skew of the accent. This is based on the line \"If the\n  // nucleus is not a single character, let s = 0; otherwise set s to the\n  // kern amount for the nucleus followed by the \\skewchar of its font.\"\n  // Note that our skew metrics are just the kern between each character\n  // and the skewchar.\n\n  let skew = 0;\n\n  if (mustShift) {\n    // If the base is a character box, then we want the skew of the\n    // innermost character. To do that, we find the innermost character:\n    const baseChar = utils.getBaseElem(base); // Then, we render its group to get the symbol inside it\n\n    const baseGroup = buildGroup(baseChar, options.havingCrampedStyle()); // Finally, we pull the skew off of the symbol.\n\n    skew = assertSymbolDomNode(baseGroup).skew; // Note that we now throw away baseGroup, because the layers we\n    // removed with getBaseElem might contain things like \\color which\n    // we can't get rid of.\n    // TODO(emily): Find a better way to get the skew\n  } // calculate the amount of space between the body and the accent\n\n\n  let clearance = Math.min(body.height, options.fontMetrics().xHeight); // Build the accent\n\n  let accentBody;\n\n  if (!group.isStretchy) {\n    let accent;\n    let width;\n\n    if (group.label === \"\\\\vec\") {\n      // Before version 0.9, \\vec used the combining font glyph U+20D7.\n      // But browsers, especially Safari, are not consistent in how they\n      // render combining characters when not preceded by a character.\n      // So now we use an SVG.\n      // If Safari reforms, we should consider reverting to the glyph.\n      accent = buildCommon.staticSvg(\"vec\", options);\n      width = buildCommon.svgData.vec[1];\n    } else {\n      accent = buildCommon.makeOrd({\n        mode: group.mode,\n        text: group.label\n      }, options, \"textord\");\n      accent = assertSymbolDomNode(accent); // Remove the italic correction of the accent, because it only serves to\n      // shift the accent over to a place we don't want.\n\n      accent.italic = 0;\n      width = accent.width;\n    }\n\n    accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]); // \"Full\" accents expand the width of the resulting symbol to be\n    // at least the width of the accent, and overlap directly onto the\n    // character without any vertical offset.\n\n    const accentFull = group.label === \"\\\\textcircled\";\n\n    if (accentFull) {\n      accentBody.classes.push('accent-full');\n      clearance = body.height;\n    } // Shift the accent over by the skew.\n\n\n    let left = skew; // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n    // so that the accent doesn't contribute to the bounding box.\n    // We need to shift the character by its width (effectively half\n    // its width) to compensate.\n\n    if (!accentFull) {\n      left -= width / 2;\n    }\n\n    accentBody.style.left = left + \"em\"; // \\textcircled uses the \\bigcirc glyph, so it needs some\n    // vertical adjustment to match LaTeX.\n\n    if (group.label === \"\\\\textcircled\") {\n      accentBody.style.top = \".2em\";\n    }\n\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: -clearance\n      }, {\n        type: \"elem\",\n        elem: accentBody\n      }]\n    }, options);\n  } else {\n    accentBody = stretchy.svgSpan(group, options);\n    accentBody = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"],\n        wrapperStyle: skew > 0 ? {\n          width: `calc(100% - ${2 * skew}em)`,\n          marginLeft: `${2 * skew}em`\n        } : undefined\n      }]\n    }, options);\n  }\n\n  const accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n  if (supSubGroup) {\n    // Here, we replace the \"base\" child of the supsub with our newly\n    // generated accent.\n    supSubGroup.children[0] = accentWrap; // Since we don't rerun the height calculation after replacing the\n    // accent, we manually recalculate height.\n\n    supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height); // Accents should always be ords, even when their innards are not.\n\n    supSubGroup.classes[0] = \"mord\";\n    return supSubGroup;\n  } else {\n    return accentWrap;\n  }\n};\n\nconst mathmlBuilder = (group, options) => {\n  const accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [makeText(group.label, group.mode)]);\n  const node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.base, options), accentNode]);\n  node.setAttribute(\"accent\", \"true\");\n  return node;\n};\n\nconst NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(accent => `\\\\${accent}`).join(\"|\")); // Accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const base = args[0];\n    const isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n    const isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: isStretchy,\n      isShifty: isShifty,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n}); // Text-mode accents\n\ndefineFunction({\n  type: \"accent\",\n  names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    allowedInMath: false\n  },\n  handler: (context, args) => {\n    const base = args[0];\n    return {\n      type: \"accent\",\n      mode: context.parser.mode,\n      label: context.funcName,\n      isStretchy: false,\n      isShifty: true,\n      base: base\n    };\n  },\n  htmlBuilder,\n  mathmlBuilder\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"accentUnder\",\n  names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const base = args[0];\n    return {\n      type: \"accentUnder\",\n      mode: parser.mode,\n      label: funcName,\n      base: base\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // Treat under accents much like underlines.\n    const innerGroup = buildGroup(group.base, options);\n    const accentBody = stretchy.svgSpan(group, options);\n    const kern = group.label === \"\\\\utilde\" ? 0.12 : 0; // Generate the vlist, with the appropriate kerns\n\n    const vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: accentBody.height + kern,\n      children: [{\n        type: \"elem\",\n        elem: accentBody,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: kern\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const accentNode = stretchy.mathMLnode(group.label);\n    const node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.base, options), accentNode]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n});\n\n// Helper function\nconst paddedNode = group => {\n  const node = new mathMLTree.MathNode(\"mpadded\", group ? [group] : []);\n  node.setAttribute(\"width\", \"+0.6em\");\n  node.setAttribute(\"lspace\", \"0.3em\");\n  return node;\n}; // Stretchy arrows with an optional argument\n\n\ndefineFunction({\n  type: \"xArrow\",\n  names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\", // The next 3 functions are here to support the mhchem extension.\n  // Direct use of these functions is discouraged and may break someday.\n  \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"xArrow\",\n      mode: parser.mode,\n      label: funcName,\n      body: args[0],\n      below: optArgs[0]\n    };\n  },\n\n  // Flow is unable to correctly infer the type of `group`, even though it's\n  // unamibiguously determined from the passed-in `type` above.\n  htmlBuilder(group, options) {\n    const style = options.style; // Build the argument groups in the appropriate style.\n    // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n    // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n    let newOptions = options.havingStyle(style.sup());\n    const upperGroup = buildCommon.wrapFragment(buildGroup(group.body, newOptions, options), options);\n    upperGroup.classes.push(\"x-arrow-pad\");\n    let lowerGroup;\n\n    if (group.below) {\n      // Build the lower group\n      newOptions = options.havingStyle(style.sub());\n      lowerGroup = buildCommon.wrapFragment(buildGroup(group.below, newOptions, options), options);\n      lowerGroup.classes.push(\"x-arrow-pad\");\n    }\n\n    const arrowBody = stretchy.svgSpan(group, options); // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n    // The point we want on the math axis is at 0.5 * arrowBody.height.\n\n    const arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height; // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n\n    let upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n\n    if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n      upperShift -= upperGroup.depth; // shift up if depth encroaches\n    } // Generate the vlist\n\n\n    let vlist;\n\n    if (lowerGroup) {\n      const lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }, {\n          type: \"elem\",\n          elem: lowerGroup,\n          shift: lowerShift\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: upperGroup,\n          shift: upperShift\n        }, {\n          type: \"elem\",\n          elem: arrowBody,\n          shift: arrowShift\n        }]\n      }, options);\n    } // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const arrowNode = stretchy.mathMLnode(group.label);\n    let node;\n\n    if (group.body) {\n      const upperNode = paddedNode(buildGroup$1(group.body, options));\n\n      if (group.below) {\n        const lowerNode = paddedNode(buildGroup$1(group.below, options));\n        node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n      } else {\n        node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n      }\n    } else if (group.below) {\n      const lowerNode = paddedNode(buildGroup$1(group.below, options));\n      node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n    } else {\n      // This should never happen.\n      // Parser.js throws an error if there is no argument.\n      node = paddedNode();\n      node = new mathMLTree.MathNode(\"mover\", [arrowNode, node]);\n    }\n\n    return node;\n  }\n\n});\n\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\n\ndefineFunction({\n  type: \"textord\",\n  names: [\"\\\\@char\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const arg = assertNodeType(args[0], \"ordgroup\");\n    const group = arg.body;\n    let number = \"\";\n\n    for (let i = 0; i < group.length; i++) {\n      const node = assertNodeType(group[i], \"textord\");\n      number += node.text;\n    }\n\n    const code = parseInt(number);\n\n    if (isNaN(code)) {\n      throw new ParseError(`\\\\@char has non-numeric argument ${number}`);\n    }\n\n    return {\n      type: \"textord\",\n      mode: parser.mode,\n      text: String.fromCharCode(code)\n    };\n  }\n\n});\n\nconst htmlBuilder$1 = (group, options) => {\n  const elements = buildExpression(group.body, options.withColor(group.color), false); // \\color isn't supposed to affect the type of the elements it contains.\n  // To accomplish this, we wrap the results in a fragment, so the inner\n  // elements will be able to directly interact with their neighbors. For\n  // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n\n  return buildCommon.makeFragment(elements);\n};\n\nconst mathmlBuilder$1 = (group, options) => {\n  const inner = buildExpression$1(group.body, options.withColor(group.color));\n  const node = new mathMLTree.MathNode(\"mstyle\", inner);\n  node.setAttribute(\"mathcolor\", group.color);\n  return node;\n};\n\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\textcolor\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"original\"]\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body: ordargument(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\ndefineFunction({\n  type: \"color\",\n  names: [\"\\\\color\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\"]\n  },\n\n  handler(_ref2, args) {\n    let parser = _ref2.parser,\n        breakOnTokenText = _ref2.breakOnTokenText;\n    const color = assertNodeType(args[0], \"color-token\").color; // Set macro \\current@color in current namespace to store the current\n    // color, mimicking the behavior of color.sty.\n    // This is currently used just to correctly color a \\right\n    // that follows a \\color command.\n\n    parser.gullet.macros.set(\"\\\\current@color\", color); // Parse out the implicit body that should be colored.\n\n    const body = parser.parseExpression(true, breakOnTokenText);\n    return {\n      type: \"color\",\n      mode: parser.mode,\n      color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$1,\n  mathmlBuilder: mathmlBuilder$1\n});\n\n// Row breaks within tabular environments, and line breaks at top level\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n  type: \"cr\",\n  names: [\"\\\\cr\", \"\\\\newline\"],\n  props: {\n    numArgs: 0,\n    numOptionalArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const size = optArgs[0];\n    const newRow = funcName === \"\\\\cr\";\n    let newLine = false;\n\n    if (!newRow) {\n      if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n        newLine = false;\n      } else {\n        newLine = true;\n      }\n    }\n\n    return {\n      type: \"cr\",\n      mode: parser.mode,\n      newLine,\n      newRow,\n      size: size && assertNodeType(size, \"size\").value\n    };\n  },\n\n  // The following builders are called only at the top level,\n  // not within tabular/array environments.\n  htmlBuilder(group, options) {\n    if (group.newRow) {\n      throw new ParseError(\"\\\\cr valid only within a tabular/array environment\");\n    }\n\n    const span = buildCommon.makeSpan([\"mspace\"], [], options);\n\n    if (group.newLine) {\n      span.classes.push(\"newline\");\n\n      if (group.size) {\n        span.style.marginTop = calculateSize(group.size, options) + \"em\";\n      }\n    }\n\n    return span;\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mspace\");\n\n    if (group.newLine) {\n      node.setAttribute(\"linebreak\", \"newline\");\n\n      if (group.size) {\n        node.setAttribute(\"height\", calculateSize(group.size, options) + \"em\");\n      }\n    }\n\n    return node;\n  }\n\n});\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nconst getMetrics = function getMetrics(symbol, font, mode) {\n  const replace = symbols.math[symbol] && symbols.math[symbol].replace;\n  const metrics = getCharacterMetrics(replace || symbol, font, mode);\n\n  if (!metrics) {\n    throw new Error(`Unsupported symbol ${symbol} and font size ${font}.`);\n  }\n\n  return metrics;\n};\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\n\n\nconst styleWrap = function styleWrap(delim, toStyle, options, classes) {\n  const newOptions = options.havingBaseStyle(toStyle);\n  const span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n  const delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n  span.height *= delimSizeMultiplier;\n  span.depth *= delimSizeMultiplier;\n  span.maxFontSize = newOptions.sizeMultiplier;\n  return span;\n};\n\nconst centerSpan = function centerSpan(span, options, style) {\n  const newOptions = options.havingBaseStyle(style);\n  const shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n  span.classes.push(\"delimcenter\");\n  span.style.top = shift + \"em\";\n  span.height -= shift;\n  span.depth += shift;\n};\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\n\n\nconst makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n  const text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n  const span = styleWrap(text, style, options, classes);\n\n  if (center) {\n    centerSpan(span, options, style);\n  }\n\n  return span;\n};\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\n\n\nconst mathrmSize = function mathrmSize(value, size, mode, options) {\n  return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\n\n\nconst makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n  const inner = mathrmSize(delim, size, mode, options);\n  const span = styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), Style$1.TEXT, options, classes);\n\n  if (center) {\n    centerSpan(span, options, Style$1.TEXT);\n  }\n\n  return span;\n};\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\n\n\nconst makeInner = function makeInner(symbol, font, mode) {\n  let sizeClass; // Apply the correct CSS class to choose the right font.\n\n  if (font === \"Size1-Regular\") {\n    sizeClass = \"delim-size1\";\n  } else\n    /* if (font === \"Size4-Regular\") */\n    {\n      sizeClass = \"delim-size4\";\n    }\n\n  const inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]); // Since this will be passed into `makeVList` in the end, wrap the element\n  // in the appropriate tag that VList uses.\n\n  return {\n    type: \"elem\",\n    elem: inner\n  };\n}; // Helper for makeStackedDelim\n\n\nconst lap = {\n  type: \"kern\",\n  size: -0.005\n};\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\n\nconst makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n  // There are four parts, the top, an optional middle, a repeated part, and a\n  // bottom.\n  let top;\n  let middle;\n  let repeat;\n  let bottom;\n  top = repeat = bottom = delim;\n  middle = null; // Also keep track of what font the delimiters are in\n\n  let font = \"Size1-Regular\"; // We set the parts and font based on the symbol. Note that we use\n  // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n  // repeats of the arrows\n\n  if (delim === \"\\\\uparrow\") {\n    repeat = bottom = \"\\u23d0\";\n  } else if (delim === \"\\\\Uparrow\") {\n    repeat = bottom = \"\\u2016\";\n  } else if (delim === \"\\\\downarrow\") {\n    top = repeat = \"\\u23d0\";\n  } else if (delim === \"\\\\Downarrow\") {\n    top = repeat = \"\\u2016\";\n  } else if (delim === \"\\\\updownarrow\") {\n    top = \"\\\\uparrow\";\n    repeat = \"\\u23d0\";\n    bottom = \"\\\\downarrow\";\n  } else if (delim === \"\\\\Updownarrow\") {\n    top = \"\\\\Uparrow\";\n    repeat = \"\\u2016\";\n    bottom = \"\\\\Downarrow\";\n  } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n    top = \"\\u23a1\";\n    repeat = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n    top = \"\\u23a4\";\n    repeat = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lfloor\" || delim === \"\\u230a\") {\n    repeat = top = \"\\u23a2\";\n    bottom = \"\\u23a3\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n    top = \"\\u23a1\";\n    repeat = bottom = \"\\u23a2\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rfloor\" || delim === \"\\u230b\") {\n    repeat = top = \"\\u23a5\";\n    bottom = \"\\u23a6\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n    top = \"\\u23a4\";\n    repeat = bottom = \"\\u23a5\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"(\" || delim === \"\\\\lparen\") {\n    top = \"\\u239b\";\n    repeat = \"\\u239c\";\n    bottom = \"\\u239d\";\n    font = \"Size4-Regular\";\n  } else if (delim === \")\" || delim === \"\\\\rparen\") {\n    top = \"\\u239e\";\n    repeat = \"\\u239f\";\n    bottom = \"\\u23a0\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n    top = \"\\u23a7\";\n    middle = \"\\u23a8\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n    top = \"\\u23ab\";\n    middle = \"\\u23ac\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lgroup\" || delim === \"\\u27ee\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rgroup\" || delim === \"\\u27ef\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23b0\") {\n    top = \"\\u23a7\";\n    bottom = \"\\u23ad\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23b1\") {\n    top = \"\\u23ab\";\n    bottom = \"\\u23a9\";\n    repeat = \"\\u23aa\";\n    font = \"Size4-Regular\";\n  } // Get the metrics of the four sections\n\n\n  const topMetrics = getMetrics(top, font, mode);\n  const topHeightTotal = topMetrics.height + topMetrics.depth;\n  const repeatMetrics = getMetrics(repeat, font, mode);\n  const repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n  const bottomMetrics = getMetrics(bottom, font, mode);\n  const bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n  let middleHeightTotal = 0;\n  let middleFactor = 1;\n\n  if (middle !== null) {\n    const middleMetrics = getMetrics(middle, font, mode);\n    middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n    middleFactor = 2; // repeat symmetrically above and below middle\n  } // Calcuate the minimal height that the delimiter can have.\n  // It is at least the size of the top, bottom, and optional middle combined.\n\n\n  const minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal; // Compute the number of copies of the repeat symbol we will need\n\n  const repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))); // Compute the total height of the delimiter including all the symbols\n\n  const realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal; // The center of the delimiter is placed at the center of the axis. Note\n  // that in this context, \"center\" means that the delimiter should be\n  // centered around the axis in the current style, while normally it is\n  // centered around the axis in textstyle.\n\n  let axisHeight = options.fontMetrics().axisHeight;\n\n  if (center) {\n    axisHeight *= options.sizeMultiplier;\n  } // Calculate the depth\n\n\n  const depth = realHeightTotal / 2 - axisHeight; // This function differs from the TeX procedure in one way.\n  // We shift each repeat element downwards by 0.005em, to prevent a gap\n  // due to browser floating point rounding error.\n  // Then, at the last element-to element joint, we add one extra repeat\n  // element to cover the gap created by the shifts.\n  // Find the shift needed to align the upper end of the extra element at a point\n  // 0.005em above the lower end of the top element.\n\n  const shiftOfExtraElement = (repeatCount + 1) * 0.005 - repeatHeightTotal; // Now, we start building the pieces that will go into the vlist\n  // Keep a list of the inner pieces\n\n  const inners = []; // Add the bottom symbol\n\n  inners.push(makeInner(bottom, font, mode));\n\n  if (middle === null) {\n    // Add that many symbols\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(lap); // overlap\n\n      inners.push(makeInner(repeat, font, mode));\n    }\n  } else {\n    // When there is a middle bit, we need the middle part and two repeated\n    // sections\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(lap);\n      inners.push(makeInner(repeat, font, mode));\n    } // Insert one extra repeat element.\n\n\n    inners.push({\n      type: \"kern\",\n      size: shiftOfExtraElement\n    });\n    inners.push(makeInner(repeat, font, mode));\n    inners.push(lap); // Now insert the middle of the brace.\n\n    inners.push(makeInner(middle, font, mode));\n\n    for (let i = 0; i < repeatCount; i++) {\n      inners.push(lap);\n      inners.push(makeInner(repeat, font, mode));\n    }\n  } // To cover the gap create by the overlaps, insert one more repeat element,\n  // at a position that juts 0.005 above the bottom of the top element.\n\n\n  inners.push({\n    type: \"kern\",\n    size: shiftOfExtraElement\n  });\n  inners.push(makeInner(repeat, font, mode));\n  inners.push(lap); // Add the top symbol\n\n  inners.push(makeInner(top, font, mode)); // Finally, build the vlist\n\n  const newOptions = options.havingBaseStyle(Style$1.TEXT);\n  const inner = buildCommon.makeVList({\n    positionType: \"bottom\",\n    positionData: depth,\n    children: inners\n  }, newOptions);\n  return styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), Style$1.TEXT, options, classes);\n}; // All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\n\n\nconst vbPad = 80; // padding above the surd, measured inside the viewBox.\n\nconst emPad = 0.08; // padding, in ems, measured in the document.\n\nconst sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, extraViniculum, options) {\n  const path = sqrtPath(sqrtName, extraViniculum, viewBoxHeight);\n  const pathNode = new PathNode(sqrtName, path);\n  const svg = new SvgNode([pathNode], {\n    // Note: 1000:1 ratio of viewBox to document em width.\n    \"width\": \"400em\",\n    \"height\": height + \"em\",\n    \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n    \"preserveAspectRatio\": \"xMinYMin slice\"\n  });\n  return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n/**\n * Make a sqrt image of the given height,\n */\n\n\nconst makeSqrtImage = function makeSqrtImage(height, options) {\n  // Define a newOptions that removes the effect of size changes such as \\Huge.\n  // We don't pick different a height surd for \\Huge. For it, we scale up.\n  const newOptions = options.havingBaseSizing(); // Pick the desired surd glyph from a sequence of surds.\n\n  const delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n  let sizeMultiplier = newOptions.sizeMultiplier; // default\n  // The standard sqrt SVGs each have a 0.04em thick viniculum.\n  // If Settings.minRuleThickness is larger than that, we add extraViniculum.\n\n  const extraViniculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness); // Create a span containing an SVG image of a sqrt symbol.\n\n  let span;\n  let spanHeight = 0;\n  let texHeight = 0;\n  let viewBoxHeight = 0;\n  let advanceWidth; // We create viewBoxes with 80 units of \"padding\" above each surd.\n  // Then browser rounding error on the parent span height will not\n  // encroach on the ink of the viniculum. But that padding is not\n  // included in the TeX-like `height` used for calculation of\n  // vertical alignment. So texHeight = span.height < span.style.height.\n\n  if (delim.type === \"small\") {\n    // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n    // 1000 unit normal glyph height.\n    viewBoxHeight = 1000 + 1000 * extraViniculum + vbPad;\n\n    if (height < 1.0) {\n      sizeMultiplier = 1.0; // mimic a \\textfont radical\n    } else if (height < 1.4) {\n      sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n    }\n\n    spanHeight = (1.0 + extraViniculum + emPad) / sizeMultiplier;\n    texHeight = (1.00 + extraViniculum) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.853em\";\n    advanceWidth = 0.833 / sizeMultiplier; // from the font.\n  } else if (delim.type === \"large\") {\n    // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n    viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n    texHeight = (sizeToMaxHeight[delim.size] + extraViniculum) / sizeMultiplier;\n    spanHeight = (sizeToMaxHeight[delim.size] + extraViniculum + emPad) / sizeMultiplier;\n    span = sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"1.02em\";\n    advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n  } else {\n    // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n    // We'll use a single SVG to accomplish the same thing.\n    spanHeight = height + extraViniculum + emPad;\n    texHeight = height + extraViniculum;\n    viewBoxHeight = Math.floor(1000 * height + extraViniculum) + vbPad;\n    span = sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, extraViniculum, options);\n    span.style.minWidth = \"0.742em\";\n    advanceWidth = 1.056;\n  }\n\n  span.height = texHeight;\n  span.style.height = spanHeight + \"em\";\n  return {\n    span,\n    advanceWidth,\n    // Calculate the actual line width.\n    // This actually should depend on the chosen font -- e.g. \\boldmath\n    // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n    // have thicker rules.\n    ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraViniculum) * sizeMultiplier\n  };\n}; // There are three kinds of delimiters, delimiters that stack when they become\n// too large\n\n\nconst stackLargeDelimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"]; // delimiters that always stack\n\nconst stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\"]; // and delimiters that never stack\n\nconst stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"]; // Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\n\nconst sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\n\nconst makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n  // < and > turn into \\langle and \\rangle in delimiters\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Sized delimiters are never centered.\n\n\n  if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n    return makeLargeDelim(delim, size, false, options, mode, classes);\n  } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n    return makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n  } else {\n    throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n  }\n};\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n\n// Delimiters that never stack try small delimiters and large delimiters only\nconst stackNeverDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}]; // Delimiters that always stack try the small delimiters first, then stack\n\nconst stackAlwaysDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"stack\"\n}]; // Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\n\nconst stackLargeDelimiterSequence = [{\n  type: \"small\",\n  style: Style$1.SCRIPTSCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.SCRIPT\n}, {\n  type: \"small\",\n  style: Style$1.TEXT\n}, {\n  type: \"large\",\n  size: 1\n}, {\n  type: \"large\",\n  size: 2\n}, {\n  type: \"large\",\n  size: 3\n}, {\n  type: \"large\",\n  size: 4\n}, {\n  type: \"stack\"\n}];\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\n\nconst delimTypeToFont = function delimTypeToFont(type) {\n  if (type.type === \"small\") {\n    return \"Main-Regular\";\n  } else if (type.type === \"large\") {\n    return \"Size\" + type.size + \"-Regular\";\n  } else if (type.type === \"stack\") {\n    return \"Size4-Regular\";\n  } else {\n    throw new Error(`Add support for delim type '${type.type}' here.`);\n  }\n};\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\n\n\nconst traverseSequence = function traverseSequence(delim, height, sequence, options) {\n  // Here, we choose the index we should start at in the sequences. In smaller\n  // sizes (which correspond to larger numbers in style.size) we start earlier\n  // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n  // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n  const start = Math.min(2, 3 - options.style.size);\n\n  for (let i = start; i < sequence.length; i++) {\n    if (sequence[i].type === \"stack\") {\n      // This is always the last delimiter, so we just break the loop now.\n      break;\n    }\n\n    const metrics = getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n    let heightDepth = metrics.height + metrics.depth; // Small delimiters are scaled down versions of the same font, so we\n    // account for the style change size.\n\n    if (sequence[i].type === \"small\") {\n      const newOptions = options.havingBaseStyle(sequence[i].style);\n      heightDepth *= newOptions.sizeMultiplier;\n    } // Check if the delimiter at this size works for the given height.\n\n\n    if (heightDepth > height) {\n      return sequence[i];\n    }\n  } // If we reached the end of the sequence, return the last sequence element.\n\n\n  return sequence[sequence.length - 1];\n};\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\n\n\nconst makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n  if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27e8\") {\n    delim = \"\\\\langle\";\n  } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27e9\") {\n    delim = \"\\\\rangle\";\n  } // Decide what sequence to use\n\n\n  let sequence;\n\n  if (utils.contains(stackNeverDelimiters, delim)) {\n    sequence = stackNeverDelimiterSequence;\n  } else if (utils.contains(stackLargeDelimiters, delim)) {\n    sequence = stackLargeDelimiterSequence;\n  } else {\n    sequence = stackAlwaysDelimiterSequence;\n  } // Look through the sequence\n\n\n  const delimType = traverseSequence(delim, height, sequence, options); // Get the delimiter from font glyphs.\n  // Depending on the sequence element we decided on, call the\n  // appropriate function.\n\n  if (delimType.type === \"small\") {\n    return makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n  } else if (delimType.type === \"large\") {\n    return makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n  } else\n    /* if (delimType.type === \"stack\") */\n    {\n      return makeStackedDelim(delim, height, center, options, mode, classes);\n    }\n};\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\n\n\nconst makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n  // We always center \\left/\\right delimiters, so the axis is always shifted\n  const axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier; // Taken from TeX source, tex.web, function make_left_right\n\n  const delimiterFactor = 901;\n  const delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n  const maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n  const totalHeight = Math.max( // In real TeX, calculations are done using integral values which are\n  // 65536 per pt, or 655360 per em. So, the division here truncates in\n  // TeX but doesn't here, producing different results. If we wanted to\n  // exactly match TeX's calculation, we could do\n  //   Math.floor(655360 * maxDistFromAxis / 500) *\n  //    delimiterFactor / 655360\n  // (To see the difference, compare\n  //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n  // in TeX and KaTeX)\n  maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend); // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n  // height\n\n  return makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\nvar delimiter = {\n  sqrtImage: makeSqrtImage,\n  sizedDelim: makeSizedDelim,\n  customSizedDelim: makeCustomSizedDelim,\n  leftRightDelim: makeLeftRightDelim\n};\n\n// Extra data needed for the delimiter handler down below\nconst delimiterSizes = {\n  \"\\\\bigl\": {\n    mclass: \"mopen\",\n    size: 1\n  },\n  \"\\\\Bigl\": {\n    mclass: \"mopen\",\n    size: 2\n  },\n  \"\\\\biggl\": {\n    mclass: \"mopen\",\n    size: 3\n  },\n  \"\\\\Biggl\": {\n    mclass: \"mopen\",\n    size: 4\n  },\n  \"\\\\bigr\": {\n    mclass: \"mclose\",\n    size: 1\n  },\n  \"\\\\Bigr\": {\n    mclass: \"mclose\",\n    size: 2\n  },\n  \"\\\\biggr\": {\n    mclass: \"mclose\",\n    size: 3\n  },\n  \"\\\\Biggr\": {\n    mclass: \"mclose\",\n    size: 4\n  },\n  \"\\\\bigm\": {\n    mclass: \"mrel\",\n    size: 1\n  },\n  \"\\\\Bigm\": {\n    mclass: \"mrel\",\n    size: 2\n  },\n  \"\\\\biggm\": {\n    mclass: \"mrel\",\n    size: 3\n  },\n  \"\\\\Biggm\": {\n    mclass: \"mrel\",\n    size: 4\n  },\n  \"\\\\big\": {\n    mclass: \"mord\",\n    size: 1\n  },\n  \"\\\\Big\": {\n    mclass: \"mord\",\n    size: 2\n  },\n  \"\\\\bigg\": {\n    mclass: \"mord\",\n    size: 3\n  },\n  \"\\\\Bigg\": {\n    mclass: \"mord\",\n    size: 4\n  }\n};\nconst delimiters = [\"(\", \"\\\\lparen\", \")\", \"\\\\rparen\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230a\", \"\\u230b\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27e8\", \"\\\\rangle\", \"\\u27e9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27ee\", \"\\u27ef\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23b0\", \"\\u23b1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n  const symDelim = checkSymbolNodeType(delim);\n\n  if (symDelim && utils.contains(delimiters, symDelim.text)) {\n    return symDelim;\n  } else {\n    throw new ParseError(\"Invalid delimiter: '\" + (symDelim ? symDelim.text : JSON.stringify(delim)) + \"' after '\" + context.funcName + \"'\", delim);\n  }\n}\n\ndefineFunction({\n  type: \"delimsizing\",\n  names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    return {\n      type: \"delimsizing\",\n      mode: context.parser.mode,\n      size: delimiterSizes[context.funcName].size,\n      mclass: delimiterSizes[context.funcName].mclass,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    if (group.delim === \".\") {\n      // Empty delimiters still count as elements, even though they don't\n      // show anything.\n      return buildCommon.makeSpan([group.mclass]);\n    } // Use delimiter.sizedDelim to generate the delimiter.\n\n\n    return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n  },\n  mathmlBuilder: group => {\n    const children = [];\n\n    if (group.delim !== \".\") {\n      children.push(makeText(group.delim, group.mode));\n    }\n\n    const node = new mathMLTree.MathNode(\"mo\", children);\n\n    if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      // Only some of the delimsizing functions act as fences, and they\n      // return \"mopen\" or \"mclose\" mclass.\n      node.setAttribute(\"fence\", \"true\");\n    } else {\n      // Explicitly disable fencing if it's not a fence, to override the\n      // defaults.\n      node.setAttribute(\"fence\", \"false\");\n    }\n\n    return node;\n  }\n});\n\nfunction assertParsed(group) {\n  if (!group.body) {\n    throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n  }\n}\n\ndefineFunction({\n  type: \"leftright-right\",\n  names: [\"\\\\right\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    // \\left case below triggers parsing of \\right in\n    //   `const right = parser.parseFunction();`\n    // uses this return value.\n    const color = context.parser.gullet.macros.get(\"\\\\current@color\");\n\n    if (color && typeof color !== \"string\") {\n      throw new ParseError(\"\\\\current@color set to non-string in \\\\right\");\n    }\n\n    return {\n      type: \"leftright-right\",\n      mode: context.parser.mode,\n      delim: checkDelimiter(args[0], context).text,\n      color // undefined if not set via \\color\n\n    };\n  }\n});\ndefineFunction({\n  type: \"leftright\",\n  names: [\"\\\\left\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n    const parser = context.parser; // Parse out the implicit body\n\n    ++parser.leftrightDepth; // parseExpression stops before '\\\\right'\n\n    const body = parser.parseExpression(false);\n    --parser.leftrightDepth; // Check the next token\n\n    parser.expect(\"\\\\right\", false);\n    const right = assertNodeType(parser.parseFunction(), \"leftright-right\");\n    return {\n      type: \"leftright\",\n      mode: parser.mode,\n      body,\n      left: delim.text,\n      right: right.delim,\n      rightColor: right.color\n    };\n  },\n  htmlBuilder: (group, options) => {\n    assertParsed(group); // Build the inner expression\n\n    const inner = buildExpression(group.body, options, true, [\"mopen\", \"mclose\"]);\n    let innerHeight = 0;\n    let innerDepth = 0;\n    let hadMiddle = false; // Calculate its height and depth\n\n    for (let i = 0; i < inner.length; i++) {\n      // Property `isMiddle` not defined on `span`. See comment in\n      // \"middle\"'s htmlBuilder.\n      // $FlowFixMe\n      if (inner[i].isMiddle) {\n        hadMiddle = true;\n      } else {\n        innerHeight = Math.max(inner[i].height, innerHeight);\n        innerDepth = Math.max(inner[i].depth, innerDepth);\n      }\n    } // The size of delimiters is the same, regardless of what style we are\n    // in. Thus, to correctly calculate the size of delimiter we need around\n    // a group, we scale down the inner size based on the size.\n\n\n    innerHeight *= options.sizeMultiplier;\n    innerDepth *= options.sizeMultiplier;\n    let leftDelim;\n\n    if (group.left === \".\") {\n      // Empty delimiters in \\left and \\right make null delimiter spaces.\n      leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n      // Otherwise, use leftRightDelim to generate the correct sized\n      // delimiter.\n      leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n    } // Add it to the beginning of the expression\n\n\n    inner.unshift(leftDelim); // Handle middle delimiters\n\n    if (hadMiddle) {\n      for (let i = 1; i < inner.length; i++) {\n        const middleDelim = inner[i]; // Property `isMiddle` not defined on `span`. See comment in\n        // \"middle\"'s htmlBuilder.\n        // $FlowFixMe\n\n        const isMiddle = middleDelim.isMiddle;\n\n        if (isMiddle) {\n          // Apply the options that were active when \\middle was called\n          inner[i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n        }\n      }\n    }\n\n    let rightDelim; // Same for the right delimiter, but using color specified by \\color\n\n    if (group.right === \".\") {\n      rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n      const colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;\n      rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [\"mclose\"]);\n    } // Add it to the end of the expression.\n\n\n    inner.push(rightDelim);\n    return buildCommon.makeSpan([\"minner\"], inner, options);\n  },\n  mathmlBuilder: (group, options) => {\n    assertParsed(group);\n    const inner = buildExpression$1(group.body, options);\n\n    if (group.left !== \".\") {\n      const leftNode = new mathMLTree.MathNode(\"mo\", [makeText(group.left, group.mode)]);\n      leftNode.setAttribute(\"fence\", \"true\");\n      inner.unshift(leftNode);\n    }\n\n    if (group.right !== \".\") {\n      const rightNode = new mathMLTree.MathNode(\"mo\", [makeText(group.right, group.mode)]);\n      rightNode.setAttribute(\"fence\", \"true\");\n\n      if (group.rightColor) {\n        rightNode.setAttribute(\"mathcolor\", group.rightColor);\n      }\n\n      inner.push(rightNode);\n    }\n\n    return makeRow(inner);\n  }\n});\ndefineFunction({\n  type: \"middle\",\n  names: [\"\\\\middle\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (context, args) => {\n    const delim = checkDelimiter(args[0], context);\n\n    if (!context.parser.leftrightDepth) {\n      throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);\n    }\n\n    return {\n      type: \"middle\",\n      mode: context.parser.mode,\n      delim: delim.text\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let middleDelim;\n\n    if (group.delim === \".\") {\n      middleDelim = makeNullDelimiter(options, []);\n    } else {\n      middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n      const isMiddle = {\n        delim: group.delim,\n        options\n      }; // Property `isMiddle` not defined on `span`. It is only used in\n      // this file above.\n      // TODO: Fix this violation of the `span` type and possibly rename\n      // things since `isMiddle` sounds like a boolean, but is a struct.\n      // $FlowFixMe\n\n      middleDelim.isMiddle = isMiddle;\n    }\n\n    return middleDelim;\n  },\n  mathmlBuilder: (group, options) => {\n    // A Firefox \\middle will strech a character vertically only if it\n    // is in the fence part of the operator dictionary at:\n    // https://www.w3.org/TR/MathML3/appendixc.html.\n    // So we need to avoid U+2223 and use plain \"|\" instead.\n    const textNode = group.delim === \"\\\\vert\" || group.delim === \"|\" ? makeText(\"|\", \"text\") : makeText(group.delim, group.mode);\n    const middleNode = new mathMLTree.MathNode(\"mo\", [textNode]);\n    middleNode.setAttribute(\"fence\", \"true\"); // MathML gives 5/18em spacing to each <mo> element.\n    // \\middle should get delimiter spacing instead.\n\n    middleNode.setAttribute(\"lspace\", \"0.05em\");\n    middleNode.setAttribute(\"rspace\", \"0.05em\");\n    return middleNode;\n  }\n});\n\nconst htmlBuilder$2 = (group, options) => {\n  // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n  // Some groups can return document fragments.  Handle those by wrapping\n  // them in a span.\n  const inner = buildCommon.wrapFragment(buildGroup(group.body, options), options);\n  const label = group.label.substr(1);\n  const scale = options.sizeMultiplier;\n  let img;\n  let imgShift = 0; // In the LaTeX cancel package, line geometry is slightly different\n  // depending on whether the subject is wider than it is tall, or vice versa.\n  // We don't know the width of a group, so as a proxy, we test if\n  // the subject is a single character. This captures most of the\n  // subjects that should get the \"tall\" treatment.\n\n  const isSingleChar = utils.isCharacterBox(group.body);\n\n  if (label === \"sout\") {\n    img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n    img.height = options.fontMetrics().defaultRuleThickness / scale;\n    imgShift = -0.5 * options.fontMetrics().xHeight;\n  } else {\n    // Add horizontal padding\n    if (/cancel/.test(label)) {\n      if (!isSingleChar) {\n        inner.classes.push(\"cancel-pad\");\n      }\n    } else {\n      inner.classes.push(\"boxpad\");\n    } // Add vertical padding\n\n\n    let vertPad = 0;\n    let ruleThickness = 0; // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n\n    if (/box/.test(label)) {\n      ruleThickness = Math.max(options.fontMetrics().fboxrule, // default\n      options.minRuleThickness // User override.\n      );\n      vertPad = options.fontMetrics().fboxsep + (label === \"colorbox\" ? 0 : ruleThickness);\n    } else {\n      vertPad = isSingleChar ? 0.2 : 0;\n    }\n\n    img = stretchy.encloseSpan(inner, label, vertPad, options);\n\n    if (/fbox|boxed|fcolorbox/.test(label)) {\n      img.style.borderStyle = \"solid\";\n      img.style.borderWidth = `${ruleThickness}em`;\n    }\n\n    imgShift = inner.depth + vertPad;\n\n    if (group.backgroundColor) {\n      img.style.backgroundColor = group.backgroundColor;\n\n      if (group.borderColor) {\n        img.style.borderColor = group.borderColor;\n      }\n    }\n  }\n\n  let vlist;\n\n  if (group.backgroundColor) {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Put the color background behind inner;\n      {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift\n      }, {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }]\n    }, options);\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [// Write the \\cancel stroke on top of inner.\n      {\n        type: \"elem\",\n        elem: inner,\n        shift: 0\n      }, {\n        type: \"elem\",\n        elem: img,\n        shift: imgShift,\n        wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n      }]\n    }, options);\n  }\n\n  if (/cancel/.test(label)) {\n    // The cancel package documentation says that cancel lines add their height\n    // to the expression, but tests show that isn't how it actually works.\n    vlist.height = inner.height;\n    vlist.depth = inner.depth;\n  }\n\n  if (/cancel/.test(label) && !isSingleChar) {\n    // cancel does not create horiz space for its line extension.\n    return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n  } else {\n    return buildCommon.makeSpan([\"mord\"], [vlist], options);\n  }\n};\n\nconst mathmlBuilder$2 = (group, options) => {\n  let fboxsep = 0;\n  const node = new mathMLTree.MathNode(group.label.indexOf(\"colorbox\") > -1 ? \"mpadded\" : \"menclose\", [buildGroup$1(group.body, options)]);\n\n  switch (group.label) {\n    case \"\\\\cancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike\");\n      break;\n\n    case \"\\\\bcancel\":\n      node.setAttribute(\"notation\", \"downdiagonalstrike\");\n      break;\n\n    case \"\\\\sout\":\n      node.setAttribute(\"notation\", \"horizontalstrike\");\n      break;\n\n    case \"\\\\fbox\":\n      node.setAttribute(\"notation\", \"box\");\n      break;\n\n    case \"\\\\fcolorbox\":\n    case \"\\\\colorbox\":\n      // <menclose> doesn't have a good notation option. So use <mpadded>\n      // instead. Set some attributes that come included with <menclose>.\n      fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm;\n      node.setAttribute(\"width\", `+${2 * fboxsep}pt`);\n      node.setAttribute(\"height\", `+${2 * fboxsep}pt`);\n      node.setAttribute(\"lspace\", `${fboxsep}pt`); //\n\n      node.setAttribute(\"voffset\", `${fboxsep}pt`);\n\n      if (group.label === \"\\\\fcolorbox\") {\n        const thk = Math.max(options.fontMetrics().fboxrule, // default\n        options.minRuleThickness // user override\n        );\n        node.setAttribute(\"style\", \"border: \" + thk + \"em solid \" + String(group.borderColor));\n      }\n\n      break;\n\n    case \"\\\\xcancel\":\n      node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n      break;\n  }\n\n  if (group.backgroundColor) {\n    node.setAttribute(\"mathbackground\", group.backgroundColor);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\colorbox\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"text\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const color = assertNodeType(args[0], \"color-token\").color;\n    const body = args[1];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor: color,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fcolorbox\"],\n  props: {\n    numArgs: 3,\n    allowedInText: true,\n    greediness: 3,\n    argTypes: [\"color\", \"color\", \"text\"]\n  },\n\n  handler(_ref2, args, optArgs) {\n    let parser = _ref2.parser,\n        funcName = _ref2.funcName;\n    const borderColor = assertNodeType(args[0], \"color-token\").color;\n    const backgroundColor = assertNodeType(args[1], \"color-token\").color;\n    const body = args[2];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      backgroundColor,\n      borderColor,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\fbox\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser;\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: \"\\\\fbox\",\n      body: args[0]\n    };\n  }\n\n});\ndefineFunction({\n  type: \"enclose\",\n  names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref4, args, optArgs) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    const body = args[0];\n    return {\n      type: \"enclose\",\n      mode: parser.mode,\n      label: funcName,\n      body\n    };\n  },\n\n  htmlBuilder: htmlBuilder$2,\n  mathmlBuilder: mathmlBuilder$2\n});\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nconst _environments = {};\nfunction defineEnvironment(_ref) {\n  let type = _ref.type,\n      names = _ref.names,\n      props = _ref.props,\n      handler = _ref.handler,\n      htmlBuilder = _ref.htmlBuilder,\n      mathmlBuilder = _ref.mathmlBuilder;\n  // Set default values of environments.\n  const data = {\n    type,\n    numArgs: props.numArgs || 0,\n    greediness: 1,\n    allowedInText: false,\n    numOptionalArgs: 0,\n    handler\n  };\n\n  for (let i = 0; i < names.length; ++i) {\n    // TODO: The value type of _environments should be a type union of all\n    // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n    // an existential type.\n    // $FlowFixMe\n    _environments[names[i]] = data;\n  }\n\n  if (htmlBuilder) {\n    _htmlGroupBuilders[type] = htmlBuilder;\n  }\n\n  if (mathmlBuilder) {\n    _mathmlGroupBuilders[type] = mathmlBuilder;\n  }\n}\n\nfunction getHLines(parser) {\n  // Return an array. The array length = number of hlines.\n  // Each element in the array tells if the line is dashed.\n  const hlineInfo = [];\n  parser.consumeSpaces();\n  let nxt = parser.fetch().text;\n\n  while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n    parser.consume();\n    hlineInfo.push(nxt === \"\\\\hdashline\");\n    parser.consumeSpaces();\n    nxt = parser.fetch().text;\n  }\n\n  return hlineInfo;\n}\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\n\n\nfunction parseArray(parser, _ref, style) {\n  let hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n      addJot = _ref.addJot,\n      cols = _ref.cols,\n      arraystretch = _ref.arraystretch,\n      colSeparationType = _ref.colSeparationType;\n  // Parse body of array with \\\\ temporarily mapped to \\cr\n  parser.gullet.beginGroup();\n  parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\"); // Get current arraystretch if it's not set by the environment\n\n  if (!arraystretch) {\n    const stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n\n    if (stretch == null) {\n      // Default \\arraystretch from lttab.dtx\n      arraystretch = 1;\n    } else {\n      arraystretch = parseFloat(stretch);\n\n      if (!arraystretch || arraystretch < 0) {\n        throw new ParseError(`Invalid \\\\arraystretch: ${stretch}`);\n      }\n    }\n  } // Start group for first cell\n\n\n  parser.gullet.beginGroup();\n  let row = [];\n  const body = [row];\n  const rowGaps = [];\n  const hLinesBeforeRow = []; // Test for \\hline at the top of the array.\n\n  hLinesBeforeRow.push(getHLines(parser));\n\n  while (true) {\n    // eslint-disable-line no-constant-condition\n    // Parse each cell in its own group (namespace)\n    let cell = parser.parseExpression(false, \"\\\\cr\");\n    parser.gullet.endGroup();\n    parser.gullet.beginGroup();\n    cell = {\n      type: \"ordgroup\",\n      mode: parser.mode,\n      body: cell\n    };\n\n    if (style) {\n      cell = {\n        type: \"styling\",\n        mode: parser.mode,\n        style,\n        body: [cell]\n      };\n    }\n\n    row.push(cell);\n    const next = parser.fetch().text;\n\n    if (next === \"&\") {\n      parser.consume();\n    } else if (next === \"\\\\end\") {\n      // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n      // the last line is empty.\n      // NOTE: Currently, `cell` is the last item added into `row`.\n      if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n        body.pop();\n      }\n\n      if (hLinesBeforeRow.length < body.length + 1) {\n        hLinesBeforeRow.push([]);\n      }\n\n      break;\n    } else if (next === \"\\\\cr\") {\n      const cr = assertNodeType(parser.parseFunction(), \"cr\");\n      rowGaps.push(cr.size); // check for \\hline(s) following the row separator\n\n      hLinesBeforeRow.push(getHLines(parser));\n      row = [];\n      body.push(row);\n    } else {\n      throw new ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n    }\n  } // End cell group\n\n\n  parser.gullet.endGroup(); // End array group defining \\\\\n\n  parser.gullet.endGroup();\n  return {\n    type: \"array\",\n    mode: parser.mode,\n    addJot,\n    arraystretch,\n    body,\n    cols,\n    rowGaps,\n    hskipBeforeAndAfter,\n    hLinesBeforeRow,\n    colSeparationType\n  };\n} // Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\n\n\nfunction dCellStyle(envName) {\n  if (envName.substr(0, 1) === \"d\") {\n    return \"display\";\n  } else {\n    return \"text\";\n  }\n}\n\nconst htmlBuilder$3 = function htmlBuilder(group, options) {\n  let r;\n  let c;\n  const nr = group.body.length;\n  const hLinesBeforeRow = group.hLinesBeforeRow;\n  let nc = 0;\n  let body = new Array(nr);\n  const hlines = [];\n  const ruleThickness = Math.max( // From LaTeX \\showthe\\arrayrulewidth. Equals 0.04 em.\n  options.fontMetrics().arrayRuleWidth, options.minRuleThickness // User override.\n  ); // Horizontal spacing\n\n  const pt = 1 / options.fontMetrics().ptPerEm;\n  let arraycolsep = 5 * pt; // default value, i.e. \\arraycolsep in article.cls\n\n  if (group.colSeparationType && group.colSeparationType === \"small\") {\n    // We're in a {smallmatrix}. Default column space is \\thickspace,\n    // i.e. 5/18em = 0.2778em, per amsmath.dtx for {smallmatrix}.\n    // But that needs adjustment because LaTeX applies \\scriptstyle to the\n    // entire array, including the colspace, but this function applies\n    // \\scriptstyle only inside each element.\n    const localMultiplier = options.havingStyle(Style$1.SCRIPT).sizeMultiplier;\n    arraycolsep = 0.2778 * (localMultiplier / options.sizeMultiplier);\n  } // Vertical spacing\n\n\n  const baselineskip = 12 * pt; // see size10.clo\n  // Default \\jot from ltmath.dtx\n  // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n\n  const jot = 3 * pt;\n  const arrayskip = group.arraystretch * baselineskip;\n  const arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n\n  const arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n  let totalHeight = 0; // Set a position for \\hline(s) at the top of the array, if any.\n\n  function setHLinePos(hlinesInGap) {\n    for (let i = 0; i < hlinesInGap.length; ++i) {\n      if (i > 0) {\n        totalHeight += 0.25;\n      }\n\n      hlines.push({\n        pos: totalHeight,\n        isDashed: hlinesInGap[i]\n      });\n    }\n  }\n\n  setHLinePos(hLinesBeforeRow[0]);\n\n  for (r = 0; r < group.body.length; ++r) {\n    const inrow = group.body[r];\n    let height = arstrutHeight; // \\@array adds an \\@arstrut\n\n    let depth = arstrutDepth; // to each tow (via the template)\n\n    if (nc < inrow.length) {\n      nc = inrow.length;\n    }\n\n    const outrow = new Array(inrow.length);\n\n    for (c = 0; c < inrow.length; ++c) {\n      const elt = buildGroup(inrow[c], options);\n\n      if (depth < elt.depth) {\n        depth = elt.depth;\n      }\n\n      if (height < elt.height) {\n        height = elt.height;\n      }\n\n      outrow[c] = elt;\n    }\n\n    const rowGap = group.rowGaps[r];\n    let gap = 0;\n\n    if (rowGap) {\n      gap = calculateSize(rowGap, options);\n\n      if (gap > 0) {\n        // \\@argarraycr\n        gap += arstrutDepth;\n\n        if (depth < gap) {\n          depth = gap; // \\@xargarraycr\n        }\n\n        gap = 0;\n      }\n    } // In AMS multiline environments such as aligned and gathered, rows\n    // correspond to lines that have additional \\jot added to the\n    // \\baselineskip via \\openup.\n\n\n    if (group.addJot) {\n      depth += jot;\n    }\n\n    outrow.height = height;\n    outrow.depth = depth;\n    totalHeight += height;\n    outrow.pos = totalHeight;\n    totalHeight += depth + gap; // \\@yargarraycr\n\n    body[r] = outrow; // Set a position for \\hline(s), if any.\n\n    setHLinePos(hLinesBeforeRow[r + 1]);\n  }\n\n  const offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n  const colDescriptions = group.cols || [];\n  const cols = [];\n  let colSep;\n  let colDescrNum;\n\n  for (c = 0, colDescrNum = 0; // Continue while either there are more columns or more column\n  // descriptions, so trailing separators don't get lost.\n  c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n    let colDescr = colDescriptions[colDescrNum] || {};\n    let firstSeparator = true;\n\n    while (colDescr.type === \"separator\") {\n      // If there is more than one separator in a row, add a space\n      // between them.\n      if (!firstSeparator) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n        cols.push(colSep);\n      }\n\n      if (colDescr.separator === \"|\" || colDescr.separator === \":\") {\n        const lineType = colDescr.separator === \"|\" ? \"solid\" : \"dashed\";\n        const separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n        separator.style.height = totalHeight + \"em\";\n        separator.style.borderRightWidth = `${ruleThickness}em`;\n        separator.style.borderRightStyle = lineType;\n        separator.style.margin = `0 -${ruleThickness / 2}em`;\n        separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n        cols.push(separator);\n      } else {\n        throw new ParseError(\"Invalid separator type: \" + colDescr.separator);\n      }\n\n      colDescrNum++;\n      colDescr = colDescriptions[colDescrNum] || {};\n      firstSeparator = false;\n    }\n\n    if (c >= nc) {\n      continue;\n    }\n\n    let sepwidth;\n\n    if (c > 0 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n\n    let col = [];\n\n    for (r = 0; r < nr; ++r) {\n      const row = body[r];\n      const elem = row[c];\n\n      if (!elem) {\n        continue;\n      }\n\n      const shift = row.pos - offset;\n      elem.depth = row.depth;\n      elem.height = row.height;\n      col.push({\n        type: \"elem\",\n        elem: elem,\n        shift: shift\n      });\n    }\n\n    col = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: col\n    }, options);\n    col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n    cols.push(col);\n\n    if (c < nc - 1 || group.hskipBeforeAndAfter) {\n      sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n\n      if (sepwidth !== 0) {\n        colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n        colSep.style.width = sepwidth + \"em\";\n        cols.push(colSep);\n      }\n    }\n  }\n\n  body = buildCommon.makeSpan([\"mtable\"], cols); // Add \\hline(s), if any.\n\n  if (hlines.length > 0) {\n    const line = buildCommon.makeLineSpan(\"hline\", options, ruleThickness);\n    const dashes = buildCommon.makeLineSpan(\"hdashline\", options, ruleThickness);\n    const vListElems = [{\n      type: \"elem\",\n      elem: body,\n      shift: 0\n    }];\n\n    while (hlines.length > 0) {\n      const hline = hlines.pop();\n      const lineShift = hline.pos - offset;\n\n      if (hline.isDashed) {\n        vListElems.push({\n          type: \"elem\",\n          elem: dashes,\n          shift: lineShift\n        });\n      } else {\n        vListElems.push({\n          type: \"elem\",\n          elem: line,\n          shift: lineShift\n        });\n      }\n    }\n\n    body = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: vListElems\n    }, options);\n  }\n\n  return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nconst alignMap = {\n  c: \"center \",\n  l: \"left \",\n  r: \"right \"\n};\n\nconst mathmlBuilder$3 = function mathmlBuilder(group, options) {\n  let table = new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n    return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n      return new mathMLTree.MathNode(\"mtd\", [buildGroup$1(cell, options)]);\n    }));\n  })); // Set column alignment, row spacing, column spacing, and\n  // array lines by setting attributes on the table element.\n  // Set the row spacing. In MathML, we specify a gap distance.\n  // We do not use rowGap[] because MathML automatically increases\n  // cell height with the height/depth of the element content.\n  // LaTeX \\arraystretch multiplies the row baseline-to-baseline distance.\n  // We simulate this by adding (arraystretch - 1)em to the gap. This\n  // does a reasonable job of adjusting arrays containing 1 em tall content.\n  // The 0.16 and 0.09 values are found emprically. They produce an array\n  // similar to LaTeX and in which content does not interfere with \\hines.\n\n  const gap = group.arraystretch === 0.5 ? 0.1 // {smallmatrix}, {subarray}\n  : 0.16 + group.arraystretch - 1 + (group.addJot ? 0.09 : 0);\n  table.setAttribute(\"rowspacing\", gap + \"em\"); // MathML table lines go only between cells.\n  // To place a line on an edge we'll use <menclose>, if necessary.\n\n  let menclose = \"\";\n  let align = \"\";\n\n  if (group.cols) {\n    // Find column alignment, column spacing, and  vertical lines.\n    const cols = group.cols;\n    let columnLines = \"\";\n    let prevTypeWasAlign = false;\n    let iStart = 0;\n    let iEnd = cols.length;\n\n    if (cols[0].type === \"separator\") {\n      menclose += \"top \";\n      iStart = 1;\n    }\n\n    if (cols[cols.length - 1].type === \"separator\") {\n      menclose += \"bottom \";\n      iEnd -= 1;\n    }\n\n    for (let i = iStart; i < iEnd; i++) {\n      if (cols[i].type === \"align\") {\n        align += alignMap[cols[i].align];\n\n        if (prevTypeWasAlign) {\n          columnLines += \"none \";\n        }\n\n        prevTypeWasAlign = true;\n      } else if (cols[i].type === \"separator\") {\n        // MathML accepts only single lines between cells.\n        // So we read only the first of consecutive separators.\n        if (prevTypeWasAlign) {\n          columnLines += cols[i].separator === \"|\" ? \"solid \" : \"dashed \";\n          prevTypeWasAlign = false;\n        }\n      }\n    }\n\n    table.setAttribute(\"columnalign\", align.trim());\n\n    if (/[sd]/.test(columnLines)) {\n      table.setAttribute(\"columnlines\", columnLines.trim());\n    }\n  } // Set column spacing.\n\n\n  if (group.colSeparationType === \"align\") {\n    const cols = group.cols || [];\n    let spacing = \"\";\n\n    for (let i = 1; i < cols.length; i++) {\n      spacing += i % 2 ? \"0em \" : \"1em \";\n    }\n\n    table.setAttribute(\"columnspacing\", spacing.trim());\n  } else if (group.colSeparationType === \"alignat\") {\n    table.setAttribute(\"columnspacing\", \"0em\");\n  } else if (group.colSeparationType === \"small\") {\n    table.setAttribute(\"columnspacing\", \"0.2778em\");\n  } else {\n    table.setAttribute(\"columnspacing\", \"1em\");\n  } // Address \\hline and \\hdashline\n\n\n  let rowLines = \"\";\n  const hlines = group.hLinesBeforeRow;\n  menclose += hlines[0].length > 0 ? \"left \" : \"\";\n  menclose += hlines[hlines.length - 1].length > 0 ? \"right \" : \"\";\n\n  for (let i = 1; i < hlines.length - 1; i++) {\n    rowLines += hlines[i].length === 0 ? \"none \" // MathML accepts only a single line between rows. Read one element.\n    : hlines[i][0] ? \"dashed \" : \"solid \";\n  }\n\n  if (/[sd]/.test(rowLines)) {\n    table.setAttribute(\"rowlines\", rowLines.trim());\n  }\n\n  if (menclose !== \"\") {\n    table = new mathMLTree.MathNode(\"menclose\", [table]);\n    table.setAttribute(\"notation\", menclose.trim());\n  }\n\n  if (group.arraystretch && group.arraystretch < 1) {\n    // A small array. Wrap in scriptstyle so row gap is not too large.\n    table = new mathMLTree.MathNode(\"mstyle\", [table]);\n    table.setAttribute(\"scriptlevel\", \"1\");\n  }\n\n  return table;\n}; // Convenience function for aligned and alignedat environments.\n\n\nconst alignedHandler = function alignedHandler(context, args) {\n  const cols = [];\n  const res = parseArray(context.parser, {\n    cols,\n    addJot: true\n  }, \"display\"); // Determining number of columns.\n  // 1. If the first argument is given, we use it as a number of columns,\n  //    and makes sure that each row doesn't exceed that number.\n  // 2. Otherwise, just count number of columns = maximum number\n  //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n  //\n  // At the same time, prepend empty group {} at beginning of every second\n  // cell in each row (starting with second cell) so that operators become\n  // binary.  This behavior is implemented in amsmath's \\start@aligned.\n\n  let numMaths;\n  let numCols = 0;\n  const emptyGroup = {\n    type: \"ordgroup\",\n    mode: context.mode,\n    body: []\n  };\n  const ordgroup = checkNodeType(args[0], \"ordgroup\");\n\n  if (ordgroup) {\n    let arg0 = \"\";\n\n    for (let i = 0; i < ordgroup.body.length; i++) {\n      const textord = assertNodeType(ordgroup.body[i], \"textord\");\n      arg0 += textord.text;\n    }\n\n    numMaths = Number(arg0);\n    numCols = numMaths * 2;\n  }\n\n  const isAligned = !numCols;\n  res.body.forEach(function (row) {\n    for (let i = 1; i < row.length; i += 2) {\n      // Modify ordgroup node within styling node\n      const styling = assertNodeType(row[i], \"styling\");\n      const ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n      ordgroup.body.unshift(emptyGroup);\n    }\n\n    if (!isAligned) {\n      // Case 1\n      const curMaths = row.length / 2;\n\n      if (numMaths < curMaths) {\n        throw new ParseError(\"Too many math in a row: \" + `expected ${numMaths}, but got ${curMaths}`, row[0]);\n      }\n    } else if (numCols < row.length) {\n      // Case 2\n      numCols = row.length;\n    }\n  }); // Adjusting alignment.\n  // In aligned mode, we add one \\qquad between columns;\n  // otherwise we add nothing.\n\n  for (let i = 0; i < numCols; ++i) {\n    let align = \"r\";\n    let pregap = 0;\n\n    if (i % 2 === 1) {\n      align = \"l\";\n    } else if (i > 0 && isAligned) {\n      // \"aligned\" mode.\n      pregap = 1; // add one \\quad\n    }\n\n    cols[i] = {\n      type: \"align\",\n      align: align,\n      pregap: pregap,\n      postgap: 0\n    };\n  }\n\n  res.colSeparationType = isAligned ? \"align\" : \"alignat\";\n  return res;\n}; // Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\n\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"array\", \"darray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Since no types are specified above, the two possibilities are\n    // - The argument is wrapped in {} or [], in which case Parser's\n    //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n    // - The argument is a bare symbol node.\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function (nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text;\n\n      if (\"lcr\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      } else if (ca === \"|\") {\n        return {\n          type: \"separator\",\n          separator: \"|\"\n        };\n      } else if (ca === \":\") {\n        return {\n          type: \"separator\",\n          separator: \":\"\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n    const res = {\n      cols,\n      hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n\n    };\n    return parseArray(context.parser, res, dCellStyle(context.envName));\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const delimiters = {\n      \"matrix\": null,\n      \"pmatrix\": [\"(\", \")\"],\n      \"bmatrix\": [\"[\", \"]\"],\n      \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n      \"vmatrix\": [\"|\", \"|\"],\n      \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n    }[context.envName]; // \\hskip -\\arraycolsep in amsmath\n\n    const payload = {\n      hskipBeforeAndAfter: false\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return delimiters ? {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: delimiters[0],\n      right: delimiters[1],\n      rightColor: undefined // \\right uninfluenced by \\color in array\n\n    } : res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"smallmatrix\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const payload = {\n      arraystretch: 0.5\n    };\n    const res = parseArray(context.parser, payload, \"script\");\n    res.colSeparationType = \"small\";\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n});\ndefineEnvironment({\n  type: \"array\",\n  names: [\"subarray\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(context, args) {\n    // Parsing of {subarray} is similar to {array}\n    const symNode = checkSymbolNodeType(args[0]);\n    const colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n    const cols = colalign.map(function (nde) {\n      const node = assertSymbolNodeType(nde);\n      const ca = node.text; // {subarray} only recognizes \"l\" & \"c\"\n\n      if (\"lc\".indexOf(ca) !== -1) {\n        return {\n          type: \"align\",\n          align: ca\n        };\n      }\n\n      throw new ParseError(\"Unknown column alignment: \" + ca, nde);\n    });\n\n    if (cols.length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    let res = {\n      cols,\n      hskipBeforeAndAfter: false,\n      arraystretch: 0.5\n    };\n    res = parseArray(context.parser, res, \"script\");\n\n    if (res.body[0].length > 1) {\n      throw new ParseError(\"{subarray} can contain only one column\");\n    }\n\n    return res;\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} \u2026 \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"cases\", \"dcases\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const payload = {\n      arraystretch: 1.2,\n      cols: [{\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        // TODO(kevinb) get the current style.\n        // For now we use the metrics for TEXT style which is what we were\n        // doing before.  Before attempting to get the current style we\n        // should look at TeX's behavior especially for \\over and matrices.\n        postgap: 1.0\n        /* 1em quad */\n\n      }, {\n        type: \"align\",\n        align: \"l\",\n        pregap: 0,\n        postgap: 0\n      }]\n    };\n    const res = parseArray(context.parser, payload, dCellStyle(context.envName));\n    return {\n      type: \"leftright\",\n      mode: context.mode,\n      body: [res],\n      left: \"\\\\{\",\n      right: \".\",\n      rightColor: undefined\n    };\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"aligned\"],\n  props: {\n    numArgs: 0\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"gathered\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(context) {\n    const res = {\n      cols: [{\n        type: \"align\",\n        align: \"c\"\n      }],\n      addJot: true\n    };\n    return parseArray(context.parser, res, \"display\");\n  },\n\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\n\ndefineEnvironment({\n  type: \"array\",\n  names: [\"alignedat\"],\n  // One for numbered and for unnumbered;\n  // but, KaTeX doesn't supports math numbering yet,\n  // they make no difference for now.\n  props: {\n    numArgs: 1\n  },\n  handler: alignedHandler,\n  htmlBuilder: htmlBuilder$3,\n  mathmlBuilder: mathmlBuilder$3\n}); // Catch \\hline outside array environment\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\hline\", \"\\\\hdashline\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: true\n  },\n\n  handler(context, args) {\n    throw new ParseError(`${context.funcName} valid only within array environment`);\n  }\n\n});\n\nconst environments = _environments;\n\n// defineEnvironment definitions.\n// $FlowFixMe, \"environment\" handler returns an environment ParseNode\n\ndefineFunction({\n  type: \"environment\",\n  names: [\"\\\\begin\", \"\\\\end\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"]\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const nameGroup = args[0];\n\n    if (nameGroup.type !== \"ordgroup\") {\n      throw new ParseError(\"Invalid environment name\", nameGroup);\n    }\n\n    let envName = \"\";\n\n    for (let i = 0; i < nameGroup.body.length; ++i) {\n      envName += assertNodeType(nameGroup.body[i], \"textord\").text;\n    }\n\n    if (funcName === \"\\\\begin\") {\n      // begin...end is similar to left...right\n      if (!environments.hasOwnProperty(envName)) {\n        throw new ParseError(\"No such environment: \" + envName, nameGroup);\n      } // Build the environment object. Arguments and other information will\n      // be made available to the begin and end methods using properties.\n\n\n      const env = environments[envName];\n\n      const _parser$parseArgument = parser.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n            args = _parser$parseArgument.args,\n            optArgs = _parser$parseArgument.optArgs;\n\n      const context = {\n        mode: parser.mode,\n        envName,\n        parser\n      };\n      const result = env.handler(context, args, optArgs);\n      parser.expect(\"\\\\end\", false);\n      const endNameToken = parser.nextToken;\n      const end = assertNodeType(parser.parseFunction(), \"environment\");\n\n      if (end.name !== envName) {\n        throw new ParseError(`Mismatch: \\\\begin{${envName}} matched by \\\\end{${end.name}}`, endNameToken);\n      }\n\n      return result;\n    }\n\n    return {\n      type: \"environment\",\n      mode: parser.mode,\n      name: envName,\n      nameGroup\n    };\n  }\n\n});\n\nconst makeSpan$2 = buildCommon.makeSpan;\n\nfunction htmlBuilder$4(group, options) {\n  const elements = buildExpression(group.body, options, true);\n  return makeSpan$2([group.mclass], elements, options);\n}\n\nfunction mathmlBuilder$4(group, options) {\n  let node;\n  const inner = buildExpression$1(group.body, options);\n\n  if (group.mclass === \"minner\") {\n    return mathMLTree.newDocumentFragment(inner);\n  } else if (group.mclass === \"mord\") {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mi\";\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", inner);\n    }\n  } else {\n    if (group.isCharacterBox) {\n      node = inner[0];\n      node.type = \"mo\";\n    } else {\n      node = new mathMLTree.MathNode(\"mo\", inner);\n    } // Set spacing based on what is the most likely adjacent atom type.\n    // See TeXbook p170.\n\n\n    if (group.mclass === \"mbin\") {\n      node.attributes.lspace = \"0.22em\"; // medium space\n\n      node.attributes.rspace = \"0.22em\";\n    } else if (group.mclass === \"mpunct\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0.17em\"; // thinspace\n    } else if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n      node.attributes.lspace = \"0em\";\n      node.attributes.rspace = \"0em\";\n    } // MathML <mo> default space is 5/18 em, so <mrel> needs no action.\n    // Ref: https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo\n\n  }\n\n  return node;\n} // Math class commands except \\mathop\n\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: \"m\" + funcName.substr(5),\n      // TODO(kevinb): don't prefix with 'm'\n      body: ordargument(body),\n      isCharacterBox: utils.isCharacterBox(body)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\nconst binrelClass = arg => {\n  // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n  // (by rendering separately and with {}s before and after, and measuring\n  // the change in spacing).  We'll do roughly the same by detecting the\n  // atom type directly.\n  const atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n\n  if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n    return \"m\" + atom.family;\n  } else {\n    return \"mord\";\n  }\n}; // \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\@binrel\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref2, args) {\n    let parser = _ref2.parser;\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(args[0]),\n      body: [args[1]],\n      isCharacterBox: utils.isCharacterBox(args[1])\n    };\n  }\n\n}); // Build a relation or stacked op by placing one symbol on top of another\n\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n  props: {\n    numArgs: 2\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    const baseArg = args[1];\n    const shiftedArg = args[0];\n    let mclass;\n\n    if (funcName !== \"\\\\stackrel\") {\n      // LaTeX applies \\binrel spacing to \\overset and \\underset.\n      mclass = binrelClass(baseArg);\n    } else {\n      mclass = \"mrel\"; // for \\stackrel\n    }\n\n    const baseOp = {\n      type: \"op\",\n      mode: baseArg.mode,\n      limits: true,\n      alwaysHandleSupSub: true,\n      parentIsSupSub: false,\n      symbol: false,\n      suppressBaseShift: funcName !== \"\\\\stackrel\",\n      body: ordargument(baseArg)\n    };\n    const supsub = {\n      type: \"supsub\",\n      mode: shiftedArg.mode,\n      base: baseOp,\n      sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n      sub: funcName === \"\\\\underset\" ? shiftedArg : null\n    };\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass,\n      body: [supsub],\n      isCharacterBox: utils.isCharacterBox(supsub)\n    };\n  },\n\n  htmlBuilder: htmlBuilder$4,\n  mathmlBuilder: mathmlBuilder$4\n});\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\nconst htmlBuilder$5 = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildGroup(group.body, newOptions);\n};\n\nconst mathmlBuilder$5 = (group, options) => {\n  const font = group.font;\n  const newOptions = options.withFont(font);\n  return buildGroup$1(group.body, newOptions);\n};\n\nconst fontAliases = {\n  \"\\\\Bbb\": \"\\\\mathbb\",\n  \"\\\\bold\": \"\\\\mathbf\",\n  \"\\\\frak\": \"\\\\mathfrak\",\n  \"\\\\bm\": \"\\\\boldsymbol\"\n};\ndefineFunction({\n  type: \"font\",\n  names: [// styles, except \\boldsymbol defined below\n  \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\", \"\\\\mathnormal\", // families\n  \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\", // aliases, except \\bm defined below\n  \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    let func = funcName;\n\n    if (func in fontAliases) {\n      func = fontAliases[func];\n    }\n\n    return {\n      type: \"font\",\n      mode: parser.mode,\n      font: func.slice(1),\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\ndefineFunction({\n  type: \"mclass\",\n  names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n  props: {\n    numArgs: 1,\n    greediness: 2\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0];\n    const isCharacterBox = utils.isCharacterBox(body); // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n    // argument's bin|rel|ord status\n\n    return {\n      type: \"mclass\",\n      mode: parser.mode,\n      mclass: binrelClass(body),\n      body: [{\n        type: \"font\",\n        mode: parser.mode,\n        font: \"boldsymbol\",\n        body\n      }],\n      isCharacterBox: isCharacterBox\n    };\n  }\n}); // Old font changing functions\n\ndefineFunction({\n  type: \"font\",\n  names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName,\n        breakOnTokenText = _ref3.breakOnTokenText;\n    const mode = parser.mode;\n    const body = parser.parseExpression(true, breakOnTokenText);\n    const style = `math${funcName.slice(1)}`;\n    return {\n      type: \"font\",\n      mode: mode,\n      font: style,\n      body: {\n        type: \"ordgroup\",\n        mode: parser.mode,\n        body\n      }\n    };\n  },\n  htmlBuilder: htmlBuilder$5,\n  mathmlBuilder: mathmlBuilder$5\n});\n\nconst adjustStyle = (size, originalStyle) => {\n  // Figure out what style this fraction should be in based on the\n  // function used\n  let style = originalStyle;\n\n  if (size === \"display\") {\n    // Get display style as a default.\n    // If incoming style is sub/sup, use style.text() to get correct size.\n    style = style.id >= Style$1.SCRIPT.id ? style.text() : Style$1.DISPLAY;\n  } else if (size === \"text\" && style.size === Style$1.DISPLAY.size) {\n    // We're in a \\tfrac but incoming style is displaystyle, so:\n    style = Style$1.TEXT;\n  } else if (size === \"script\") {\n    style = Style$1.SCRIPT;\n  } else if (size === \"scriptscript\") {\n    style = Style$1.SCRIPTSCRIPT;\n  }\n\n  return style;\n};\n\nconst htmlBuilder$6 = (group, options) => {\n  // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n  const style = adjustStyle(group.size, options.style);\n  const nstyle = style.fracNum();\n  const dstyle = style.fracDen();\n  let newOptions;\n  newOptions = options.havingStyle(nstyle);\n  const numerm = buildGroup(group.numer, newOptions, options);\n\n  if (group.continued) {\n    // \\cfrac inserts a \\strut into the numerator.\n    // Get \\strut dimensions from TeXbook page 353.\n    const hStrut = 8.5 / options.fontMetrics().ptPerEm;\n    const dStrut = 3.5 / options.fontMetrics().ptPerEm;\n    numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n    numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n  }\n\n  newOptions = options.havingStyle(dstyle);\n  const denomm = buildGroup(group.denom, newOptions, options);\n  let rule;\n  let ruleWidth;\n  let ruleSpacing;\n\n  if (group.hasBarLine) {\n    if (group.barSize) {\n      ruleWidth = calculateSize(group.barSize, options);\n      rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n    } else {\n      rule = buildCommon.makeLineSpan(\"frac-line\", options);\n    }\n\n    ruleWidth = rule.height;\n    ruleSpacing = rule.height;\n  } else {\n    rule = null;\n    ruleWidth = 0;\n    ruleSpacing = options.fontMetrics().defaultRuleThickness;\n  } // Rule 15b\n\n\n  let numShift;\n  let clearance;\n  let denomShift;\n\n  if (style.size === Style$1.DISPLAY.size || group.size === \"display\") {\n    numShift = options.fontMetrics().num1;\n\n    if (ruleWidth > 0) {\n      clearance = 3 * ruleSpacing;\n    } else {\n      clearance = 7 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom1;\n  } else {\n    if (ruleWidth > 0) {\n      numShift = options.fontMetrics().num2;\n      clearance = ruleSpacing;\n    } else {\n      numShift = options.fontMetrics().num3;\n      clearance = 3 * ruleSpacing;\n    }\n\n    denomShift = options.fontMetrics().denom2;\n  }\n\n  let frac;\n\n  if (!rule) {\n    // Rule 15c\n    const candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n\n    if (candidateClearance < clearance) {\n      numShift += 0.5 * (clearance - candidateClearance);\n      denomShift += 0.5 * (clearance - candidateClearance);\n    }\n\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } else {\n    // Rule 15d\n    const axisHeight = options.fontMetrics().axisHeight;\n\n    if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n      numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n    }\n\n    if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n      denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n    }\n\n    const midShift = -(axisHeight - 0.5 * ruleWidth);\n    frac = buildCommon.makeVList({\n      positionType: \"individualShift\",\n      children: [{\n        type: \"elem\",\n        elem: denomm,\n        shift: denomShift\n      }, {\n        type: \"elem\",\n        elem: rule,\n        shift: midShift\n      }, {\n        type: \"elem\",\n        elem: numerm,\n        shift: -numShift\n      }]\n    }, options);\n  } // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n  // account for the possible size change here.\n\n\n  newOptions = options.havingStyle(style);\n  frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n  frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier; // Rule 15e\n\n  let delimSize;\n\n  if (style.size === Style$1.DISPLAY.size) {\n    delimSize = options.fontMetrics().delim1;\n  } else {\n    delimSize = options.fontMetrics().delim2;\n  }\n\n  let leftDelim;\n  let rightDelim;\n\n  if (group.leftDelim == null) {\n    leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n  } else {\n    leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n  }\n\n  if (group.continued) {\n    rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n  } else if (group.rightDelim == null) {\n    rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n  } else {\n    rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n  }\n\n  return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nconst mathmlBuilder$6 = (group, options) => {\n  let node = new mathMLTree.MathNode(\"mfrac\", [buildGroup$1(group.numer, options), buildGroup$1(group.denom, options)]);\n\n  if (!group.hasBarLine) {\n    node.setAttribute(\"linethickness\", \"0px\");\n  } else if (group.barSize) {\n    const ruleWidth = calculateSize(group.barSize, options);\n    node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n  }\n\n  const style = adjustStyle(group.size, options.style);\n\n  if (style.size !== options.style.size) {\n    node = new mathMLTree.MathNode(\"mstyle\", [node]);\n    const isDisplay = style.size === Style$1.DISPLAY.size ? \"true\" : \"false\";\n    node.setAttribute(\"displaystyle\", isDisplay);\n    node.setAttribute(\"scriptlevel\", \"0\");\n  }\n\n  if (group.leftDelim != null || group.rightDelim != null) {\n    const withDelims = [];\n\n    if (group.leftDelim != null) {\n      const leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim.replace(\"\\\\\", \"\"))]);\n      leftOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(leftOp);\n    }\n\n    withDelims.push(node);\n\n    if (group.rightDelim != null) {\n      const rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim.replace(\"\\\\\", \"\"))]);\n      rightOp.setAttribute(\"fence\", \"true\");\n      withDelims.push(rightOp);\n    }\n\n    return makeRow(withDelims);\n  }\n\n  return node;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can\u2019t be entered directly\n  \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n  props: {\n    numArgs: 2,\n    greediness: 2\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const numer = args[0];\n    const denom = args[1];\n    let hasBarLine;\n    let leftDelim = null;\n    let rightDelim = null;\n    let size = \"auto\";\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\frac\":\n      case \"\\\\tfrac\":\n        hasBarLine = true;\n        break;\n\n      case \"\\\\\\\\atopfrac\":\n        hasBarLine = false;\n        break;\n\n      case \"\\\\dbinom\":\n      case \"\\\\binom\":\n      case \"\\\\tbinom\":\n        hasBarLine = false;\n        leftDelim = \"(\";\n        rightDelim = \")\";\n        break;\n\n      case \"\\\\\\\\bracefrac\":\n        hasBarLine = false;\n        leftDelim = \"\\\\{\";\n        rightDelim = \"\\\\}\";\n        break;\n\n      case \"\\\\\\\\brackfrac\":\n        hasBarLine = false;\n        leftDelim = \"[\";\n        rightDelim = \"]\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized genfrac command\");\n    }\n\n    switch (funcName) {\n      case \"\\\\cfrac\":\n      case \"\\\\dfrac\":\n      case \"\\\\dbinom\":\n        size = \"display\";\n        break;\n\n      case \"\\\\tfrac\":\n      case \"\\\\tbinom\":\n        size = \"text\";\n        break;\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      continued: funcName === \"\\\\cfrac\",\n      numer,\n      denom,\n      hasBarLine,\n      leftDelim,\n      rightDelim,\n      size,\n      barSize: null\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n  props: {\n    numArgs: 0,\n    infix: true\n  },\n\n  handler(_ref2) {\n    let parser = _ref2.parser,\n        funcName = _ref2.funcName,\n        token = _ref2.token;\n    let replaceWith;\n\n    switch (funcName) {\n      case \"\\\\over\":\n        replaceWith = \"\\\\frac\";\n        break;\n\n      case \"\\\\choose\":\n        replaceWith = \"\\\\binom\";\n        break;\n\n      case \"\\\\atop\":\n        replaceWith = \"\\\\\\\\atopfrac\";\n        break;\n\n      case \"\\\\brace\":\n        replaceWith = \"\\\\\\\\bracefrac\";\n        break;\n\n      case \"\\\\brack\":\n        replaceWith = \"\\\\\\\\brackfrac\";\n        break;\n\n      default:\n        throw new Error(\"Unrecognized infix genfrac command\");\n    }\n\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith,\n      token\n    };\n  }\n\n});\nconst stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nconst delimFromValue = function delimFromValue(delimString) {\n  let delim = null;\n\n  if (delimString.length > 0) {\n    delim = delimString;\n    delim = delim === \".\" ? null : delim;\n  }\n\n  return delim;\n};\n\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\genfrac\"],\n  props: {\n    numArgs: 6,\n    greediness: 6,\n    argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n  },\n\n  handler(_ref3, args) {\n    let parser = _ref3.parser;\n    const numer = args[4];\n    const denom = args[5]; // Look into the parse nodes to get the desired delimiters.\n\n    let leftNode = checkNodeType(args[0], \"atom\");\n\n    if (leftNode) {\n      leftNode = assertAtomFamily(args[0], \"open\");\n    }\n\n    const leftDelim = leftNode ? delimFromValue(leftNode.text) : null;\n    let rightNode = checkNodeType(args[1], \"atom\");\n\n    if (rightNode) {\n      rightNode = assertAtomFamily(args[1], \"close\");\n    }\n\n    const rightDelim = rightNode ? delimFromValue(rightNode.text) : null;\n    const barNode = assertNodeType(args[2], \"size\");\n    let hasBarLine;\n    let barSize = null;\n\n    if (barNode.isBlank) {\n      // \\genfrac acts differently than \\above.\n      // \\genfrac treats an empty size group as a signal to use a\n      // standard bar size. \\above would see size = 0 and omit the bar.\n      hasBarLine = true;\n    } else {\n      barSize = barNode.value;\n      hasBarLine = barSize.number > 0;\n    } // Find out if we want displaystyle, textstyle, etc.\n\n\n    let size = \"auto\";\n    let styl = checkNodeType(args[3], \"ordgroup\");\n\n    if (styl) {\n      if (styl.body.length > 0) {\n        const textOrd = assertNodeType(styl.body[0], \"textord\");\n        size = stylArray[Number(textOrd.text)];\n      }\n    } else {\n      styl = assertNodeType(args[3], \"textord\");\n      size = stylArray[Number(styl.text)];\n    }\n\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim,\n      rightDelim,\n      size\n    };\n  },\n\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n}); // \\above is an infix fraction that also defines a fraction bar size.\n\ndefineFunction({\n  type: \"infix\",\n  names: [\"\\\\above\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    infix: true\n  },\n\n  handler(_ref4, args) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName,\n        token = _ref4.token;\n    return {\n      type: \"infix\",\n      mode: parser.mode,\n      replaceWith: \"\\\\\\\\abovefrac\",\n      size: assertNodeType(args[0], \"size\").value,\n      token\n    };\n  }\n\n});\ndefineFunction({\n  type: \"genfrac\",\n  names: [\"\\\\\\\\abovefrac\"],\n  props: {\n    numArgs: 3,\n    argTypes: [\"math\", \"size\", \"math\"]\n  },\n  handler: (_ref5, args) => {\n    let parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    const numer = args[0];\n    const barSize = assert(assertNodeType(args[1], \"infix\").size);\n    const denom = args[2];\n    const hasBarLine = barSize.number > 0;\n    return {\n      type: \"genfrac\",\n      mode: parser.mode,\n      numer,\n      denom,\n      continued: false,\n      hasBarLine,\n      barSize,\n      leftDelim: null,\n      rightDelim: null,\n      size: \"auto\"\n    };\n  },\n  htmlBuilder: htmlBuilder$6,\n  mathmlBuilder: mathmlBuilder$6\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\nconst htmlBuilder$7 = (grp, options) => {\n  const style = options.style; // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n\n  let supSubGroup;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // Ref: LaTeX source2e: }}}}\\limits}\n    // i.e. LaTeX treats the brace similar to an op and passes it\n    // with \\limits, so we need to assign supsub style.\n    supSubGroup = supSub.sup ? buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n    group = assertNodeType(supSub.base, \"horizBrace\");\n  } else {\n    group = assertNodeType(grp, \"horizBrace\");\n  } // Build the base group\n\n\n  const body = buildGroup(group.base, options.havingBaseStyle(Style$1.DISPLAY)); // Create the stretchy element\n\n  const braceBody = stretchy.svgSpan(group, options); // Generate the vlist, with the appropriate kerns        \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n  // This first vlist contains the content and the brace:   equation\n\n  let vlist;\n\n  if (group.isOver) {\n    vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: body\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: braceBody\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n  } else {\n    vlist = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: body.depth + 0.1 + braceBody.height,\n      children: [{\n        type: \"elem\",\n        elem: braceBody\n      }, {\n        type: \"kern\",\n        size: 0.1\n      }, {\n        type: \"elem\",\n        elem: body\n      }]\n    }, options); // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n\n    vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n  }\n\n  if (supSubGroup) {\n    // To write the supsub, wrap the first vlist in another vlist:\n    // They can't all go in the same vlist, because the note might be\n    // wider than the equation. We want the equation to control the\n    // brace width.\n    //      note          long note           long note\n    //   \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513   or    \u250F\u2501\u2501\u2501\u2513     not    \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n    //    equation           eqn                 eqn\n    const vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n    if (group.isOver) {\n      vlist = buildCommon.makeVList({\n        positionType: \"firstBaseline\",\n        children: [{\n          type: \"elem\",\n          elem: vSpan\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: supSubGroup\n        }]\n      }, options);\n    } else {\n      vlist = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n        children: [{\n          type: \"elem\",\n          elem: supSubGroup\n        }, {\n          type: \"kern\",\n          size: 0.2\n        }, {\n          type: \"elem\",\n          elem: vSpan\n        }]\n      }, options);\n    }\n  }\n\n  return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nconst mathmlBuilder$7 = (group, options) => {\n  const accentNode = stretchy.mathMLnode(group.label);\n  return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildGroup$1(group.base, options), accentNode]);\n}; // Horizontal stretchy braces\n\n\ndefineFunction({\n  type: \"horizBrace\",\n  names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    return {\n      type: \"horizBrace\",\n      mode: parser.mode,\n      label: funcName,\n      isOver: /^\\\\over/.test(funcName),\n      base: args[0]\n    };\n  },\n\n  htmlBuilder: htmlBuilder$7,\n  mathmlBuilder: mathmlBuilder$7\n});\n\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\href\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"url\", \"original\"],\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    const body = args[1];\n    const href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\href\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\href\");\n    }\n\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options, false);\n    return buildCommon.makeAnchor(group.href, [], elements, options);\n  },\n  mathmlBuilder: (group, options) => {\n    let math = buildExpressionRow(group.body, options);\n\n    if (!(math instanceof MathNode)) {\n      math = new MathNode(\"mrow\", [math]);\n    }\n\n    math.setAttribute(\"href\", group.href);\n    return math;\n  }\n});\ndefineFunction({\n  type: \"href\",\n  names: [\"\\\\url\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"url\"],\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const href = assertNodeType(args[0], \"url\").url;\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\url\",\n      url: href\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\url\");\n    }\n\n    const chars = [];\n\n    for (let i = 0; i < href.length; i++) {\n      let c = href[i];\n\n      if (c === \"~\") {\n        c = \"\\\\textasciitilde\";\n      }\n\n      chars.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: c\n      });\n    }\n\n    const body = {\n      type: \"text\",\n      mode: parser.mode,\n      font: \"\\\\texttt\",\n      body: chars\n    };\n    return {\n      type: \"href\",\n      mode: parser.mode,\n      href,\n      body: ordargument(body)\n    };\n  }\n});\n\ndefineFunction({\n  type: \"htmlmathml\",\n  names: [\"\\\\html@mathml\"],\n  props: {\n    numArgs: 2,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    return {\n      type: \"htmlmathml\",\n      mode: parser.mode,\n      html: ordargument(args[0]),\n      mathml: ordargument(args[1])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.html, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    return buildExpressionRow(group.mathml, options);\n  }\n});\n\nconst sizeData = function sizeData(str) {\n  if (/^[-+]? *(\\d+(\\.\\d*)?|\\.\\d+)$/.test(str)) {\n    // str is a number with no unit specified.\n    // default unit is bp, per graphix package.\n    return {\n      number: +str,\n      unit: \"bp\"\n    };\n  } else {\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(str);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + str + \"' in \\\\includegraphics\");\n    }\n\n    const data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"' in \\\\includegraphics.\");\n    }\n\n    return data;\n  }\n};\n\ndefineFunction({\n  type: \"includegraphics\",\n  names: [\"\\\\includegraphics\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    argTypes: [\"raw\", \"url\"],\n    allowedInText: false\n  },\n  handler: (_ref, args, optArgs) => {\n    let parser = _ref.parser;\n    let width = {\n      number: 0,\n      unit: \"em\"\n    };\n    let height = {\n      number: 0.9,\n      unit: \"em\"\n    }; // sorta character sized.\n\n    let totalheight = {\n      number: 0,\n      unit: \"em\"\n    };\n    let alt = \"\";\n\n    if (optArgs[0]) {\n      const attributeStr = assertNodeType(optArgs[0], \"raw\").string; // Parser.js does not parse key/value pairs. We get a string.\n\n      const attributes = attributeStr.split(\",\");\n\n      for (let i = 0; i < attributes.length; i++) {\n        const keyVal = attributes[i].split(\"=\");\n\n        if (keyVal.length === 2) {\n          const str = keyVal[1].trim();\n\n          switch (keyVal[0].trim()) {\n            case \"alt\":\n              alt = str;\n              break;\n\n            case \"width\":\n              width = sizeData(str);\n              break;\n\n            case \"height\":\n              height = sizeData(str);\n              break;\n\n            case \"totalheight\":\n              totalheight = sizeData(str);\n              break;\n\n            default:\n              throw new ParseError(\"Invalid key: '\" + keyVal[0] + \"' in \\\\includegraphics.\");\n          }\n        }\n      }\n    }\n\n    const src = assertNodeType(args[0], \"url\").url;\n\n    if (alt === \"\") {\n      // No alt given. Use the file name. Strip away the path.\n      alt = src;\n      alt = alt.replace(/^.*[\\\\/]/, '');\n      alt = alt.substring(0, alt.lastIndexOf('.'));\n    }\n\n    if (!parser.settings.isTrusted({\n      command: \"\\\\includegraphics\",\n      url: src\n    })) {\n      return parser.formatUnsupportedCmd(\"\\\\includegraphics\");\n    }\n\n    return {\n      type: \"includegraphics\",\n      mode: parser.mode,\n      alt: alt,\n      width: width,\n      height: height,\n      totalheight: totalheight,\n      src: src\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const height = calculateSize(group.height, options);\n    let depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = Number(depth.toFixed(2));\n    }\n\n    let width = 0;\n\n    if (group.width.number > 0) {\n      width = calculateSize(group.width, options);\n    }\n\n    const style = {\n      height: height + depth + \"em\"\n    };\n\n    if (width > 0) {\n      style.width = width + \"em\";\n    }\n\n    if (depth > 0) {\n      style.verticalAlign = -depth + \"em\";\n    }\n\n    const node = new Img(group.src, group.alt, style);\n    node.height = height;\n    node.depth = depth;\n    return node;\n  },\n  mathmlBuilder: (group, options) => {\n    const node = new mathMLTree.MathNode(\"mglyph\", []);\n    node.setAttribute(\"alt\", group.alt);\n    const height = calculateSize(group.height, options);\n    let depth = 0;\n\n    if (group.totalheight.number > 0) {\n      depth = calculateSize(group.totalheight, options) - height;\n      depth = depth.toFixed(2);\n      node.setAttribute(\"valign\", \"-\" + depth + \"em\");\n    }\n\n    node.setAttribute(\"height\", height + depth + \"em\");\n\n    if (group.width.number > 0) {\n      const width = calculateSize(group.width, options);\n      node.setAttribute(\"width\", width + \"em\");\n    }\n\n    node.setAttribute(\"src\", group.src);\n    return node;\n  }\n});\n\n// Horizontal spacing commands\n\ndefineFunction({\n  type: \"kern\",\n  names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"size\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const size = assertNodeType(args[0], \"size\");\n\n    if (parser.settings.strict) {\n      const mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n\n      const muUnit = size.value.unit === 'mu';\n\n      if (mathFunction) {\n        if (!muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} supports only mu units, ` + `not ${size.value.unit} units`);\n        }\n\n        if (parser.mode !== \"math\") {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} works only in math mode`);\n        }\n      } else {\n        // !mathFunction\n        if (muUnit) {\n          parser.settings.reportNonstrict(\"mathVsTextUnits\", `LaTeX's ${funcName} doesn't support mu units`);\n        }\n      }\n    }\n\n    return {\n      type: \"kern\",\n      mode: parser.mode,\n      dimension: size.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeGlue(group.dimension, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const dimension = calculateSize(group.dimension, options);\n    return new mathMLTree.SpaceNode(dimension);\n  }\n\n});\n\n// Horizontal overlap functions\ndefineFunction({\n  type: \"lap\",\n  names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"lap\",\n      mode: parser.mode,\n      alignment: funcName.slice(5),\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    let inner;\n\n    if (group.alignment === \"clap\") {\n      // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n      inner = buildCommon.makeSpan([], [buildGroup(group.body, options)]); // wrap, since CSS will center a .clap > .inner > span\n\n      inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n    } else {\n      inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options)]);\n    }\n\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    let node = buildCommon.makeSpan([group.alignment], [inner, fix], options); // At this point, we have correctly set horizontal alignment of the\n    // two items involved in the lap.\n    // Next, use a strut to set the height of the HTML bounding box.\n    // Otherwise, a tall argument may be misplaced.\n\n    const strut = buildCommon.makeSpan([\"strut\"]);\n    strut.style.height = node.height + node.depth + \"em\";\n    strut.style.verticalAlign = -node.depth + \"em\";\n    node.children.unshift(strut); // Next, prevent vertical misplacement when next to something tall.\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // Get the horizontal spacing correct relative to adjacent items.\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    // mathllap, mathrlap, mathclap\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.alignment !== \"rlap\") {\n      const offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n      node.setAttribute(\"lspace\", offset + \"width\");\n    }\n\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\(\", \"$\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(_ref, args) {\n    let funcName = _ref.funcName,\n        parser = _ref.parser;\n    const outerMode = parser.mode;\n    parser.switchMode(\"math\");\n    const close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n    const body = parser.parseExpression(false, close);\n    parser.expect(close);\n    parser.switchMode(outerMode);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      style: \"text\",\n      body\n    };\n  }\n\n}); // Check for extra closing math delimiters\n\ndefineFunction({\n  type: \"text\",\n  // Doesn't matter what this is.\n  names: [\"\\\\)\", \"\\\\]\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true,\n    allowedInMath: false\n  },\n\n  handler(context, args) {\n    throw new ParseError(`Mismatched ${context.funcName}`);\n  }\n\n});\n\nconst chooseMathStyle = (group, options) => {\n  switch (options.style.size) {\n    case Style$1.DISPLAY.size:\n      return group.display;\n\n    case Style$1.TEXT.size:\n      return group.text;\n\n    case Style$1.SCRIPT.size:\n      return group.script;\n\n    case Style$1.SCRIPTSCRIPT.size:\n      return group.scriptscript;\n\n    default:\n      return group.text;\n  }\n};\n\ndefineFunction({\n  type: \"mathchoice\",\n  names: [\"\\\\mathchoice\"],\n  props: {\n    numArgs: 4\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    return {\n      type: \"mathchoice\",\n      mode: parser.mode,\n      display: ordargument(args[0]),\n      text: ordargument(args[1]),\n      script: ordargument(args[2]),\n      scriptscript: ordargument(args[3])\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    const elements = buildExpression(body, options, false);\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const body = chooseMathStyle(group, options);\n    return buildExpressionRow(body, options);\n  }\n});\n\n// For an operator with limits, assemble the base, sup, and sub into a span.\nconst assembleSupSub = (base, supGroup, subGroup, options, style, slant, baseShift) => {\n  // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n  // in a new span so it is an inline, and works.\n  base = buildCommon.makeSpan([], [base]);\n  let sub;\n  let sup; // We manually have to handle the superscripts and subscripts. This,\n  // aside from the kern calculations, is copied from supsub.\n\n  if (supGroup) {\n    const elem = buildGroup(supGroup, options.havingStyle(style.sup()), options);\n    sup = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n    };\n  }\n\n  if (subGroup) {\n    const elem = buildGroup(subGroup, options.havingStyle(style.sub()), options);\n    sub = {\n      elem,\n      kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - elem.height)\n    };\n  } // Build the final group as a vlist of the possible subscript, base,\n  // and possible superscript.\n\n\n  let finalGroup;\n\n  if (sup && sub) {\n    const bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else if (sub) {\n    const top = base.height - baseShift; // Shift the limits by the slant of the symbol. Note\n    // that we are supposed to shift the limits by 1/2 of the slant,\n    // but since we are centering the limits adding a full slant of\n    // margin will shift by 1/2 that.\n\n    finalGroup = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: top,\n      children: [{\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }, {\n        type: \"elem\",\n        elem: sub.elem,\n        marginLeft: -slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: sub.kern\n      }, {\n        type: \"elem\",\n        elem: base\n      }]\n    }, options);\n  } else if (sup) {\n    const bottom = base.depth + baseShift;\n    finalGroup = buildCommon.makeVList({\n      positionType: \"bottom\",\n      positionData: bottom,\n      children: [{\n        type: \"elem\",\n        elem: base\n      }, {\n        type: \"kern\",\n        size: sup.kern\n      }, {\n        type: \"elem\",\n        elem: sup.elem,\n        marginLeft: slant + \"em\"\n      }, {\n        type: \"kern\",\n        size: options.fontMetrics().bigOpSpacing5\n      }]\n    }, options);\n  } else {\n    // This case probably shouldn't occur (this would mean the\n    // supsub was sending us a group with no superscript or\n    // subscript) but be safe.\n    return base;\n  }\n\n  return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n};\n\n// Limits, symbols\n// Most operators have a large successor symbol, but these don't.\nconst noSuccessor = [\"\\\\smallint\"]; // NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\n\nconst htmlBuilder$8 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  let supGroup;\n  let subGroup;\n  let hasLimits = false;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, \"op\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"op\");\n  }\n\n  const style = options.style;\n  let large = false;\n\n  if (style.size === Style$1.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n    // Most symbol operators get larger in displaystyle (rule 13)\n    large = true;\n  }\n\n  let base;\n\n  if (group.symbol) {\n    // If this is a symbol, create the symbol.\n    const fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n    let stash = \"\";\n\n    if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n      // No font glyphs yet, so use a glyph w/o the oval.\n      // TODO: When font glyphs are available, delete this code.\n      stash = group.name.substr(1); // $FlowFixMe\n\n      group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n    }\n\n    base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n    if (stash.length > 0) {\n      // We're in \\oiint or \\oiiint. Overlay the oval.\n      // TODO: When font glyphs are available, delete this code.\n      const italic = base.italic;\n      const oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n      base = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: [{\n          type: \"elem\",\n          elem: base,\n          shift: 0\n        }, {\n          type: \"elem\",\n          elem: oval,\n          shift: large ? 0.08 : 0\n        }]\n      }, options); // $FlowFixMe\n\n      group.name = \"\\\\\" + stash;\n      base.classes.unshift(\"mop\"); // $FlowFixMe\n\n      base.italic = italic;\n    }\n  } else if (group.body) {\n    // If this is a list, compose that list.\n    const inner = buildExpression(group.body, options, true);\n\n    if (inner.length === 1 && inner[0] instanceof SymbolNode) {\n      base = inner[0];\n      base.classes[0] = \"mop\"; // replace old mclass\n    } else {\n      base = buildCommon.makeSpan([\"mop\"], buildCommon.tryCombineChars(inner), options);\n    }\n  } else {\n    // Otherwise, this is a text operator. Build the text from the\n    // operator's name.\n    // TODO(emily): Add a space in the middle of some of these\n    // operators, like \\limsup\n    const output = [];\n\n    for (let i = 1; i < group.name.length; i++) {\n      output.push(buildCommon.mathsym(group.name[i], group.mode, options));\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], output, options);\n  } // If content of op is a single symbol, shift it vertically.\n\n\n  let baseShift = 0;\n  let slant = 0;\n\n  if ((base instanceof SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n    // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n    // shift the symbol so its center lies on the axis (rule 13). It\n    // appears that our fonts have the centers of the symbols already\n    // almost on the axis, so these numbers are very small. Note we\n    // don't actually apply this here, but instead it is used either in\n    // the vlist creation or separately when there are no limits.\n    baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight; // The slant of the symbol is just its italic correction.\n    // $FlowFixMe\n\n    slant = base.italic;\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift);\n  } else {\n    if (baseShift) {\n      base.style.position = \"relative\";\n      base.style.top = baseShift + \"em\";\n    }\n\n    return base;\n  }\n};\n\nconst mathmlBuilder$8 = (group, options) => {\n  let node;\n\n  if (group.symbol) {\n    // This is a symbol. Just add the symbol.\n    node = new MathNode(\"mo\", [makeText(group.name, group.mode)]);\n\n    if (utils.contains(noSuccessor, group.name)) {\n      node.setAttribute(\"largeop\", \"false\");\n    }\n  } else if (group.body) {\n    // This is an operator with children. Add them.\n    node = new MathNode(\"mo\", buildExpression$1(group.body, options));\n  } else {\n    // This is a text operator. Add all of the characters from the\n    // operator's name.\n    node = new MathNode(\"mi\", [new TextNode(group.name.slice(1))]); // Append an <mo>&ApplyFunction;</mo>.\n    // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n\n    const operator = new MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n    if (group.parentIsSupSub) {\n      node = new MathNode(\"mo\", [node, operator]);\n    } else {\n      node = newDocumentFragment([node, operator]);\n    }\n  }\n\n  return node;\n};\n\nconst singleCharBigOps = {\n  \"\\u220F\": \"\\\\prod\",\n  \"\\u2210\": \"\\\\coprod\",\n  \"\\u2211\": \"\\\\sum\",\n  \"\\u22c0\": \"\\\\bigwedge\",\n  \"\\u22c1\": \"\\\\bigvee\",\n  \"\\u22c2\": \"\\\\bigcap\",\n  \"\\u22c3\": \"\\\\bigcup\",\n  \"\\u2a00\": \"\\\\bigodot\",\n  \"\\u2a01\": \"\\\\bigoplus\",\n  \"\\u2a02\": \"\\\\bigotimes\",\n  \"\\u2a04\": \"\\\\biguplus\",\n  \"\\u2a06\": \"\\\\bigsqcup\"\n};\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22c0\", \"\\u22c1\", \"\\u22c2\", \"\\u22c3\", \"\\u2a00\", \"\\u2a01\", \"\\u2a02\", \"\\u2a04\", \"\\u2a06\"],\n  props: {\n    numArgs: 0\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharBigOps[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\mathop\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0];\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nconst singleCharIntegrals = {\n  \"\\u222b\": \"\\\\int\",\n  \"\\u222c\": \"\\\\iint\",\n  \"\\u222d\": \"\\\\iiint\",\n  \"\\u222e\": \"\\\\oint\",\n  \"\\u222f\": \"\\\\oiint\",\n  \"\\u2230\": \"\\\\oiiint\"\n}; // No limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref3) {\n    let parser = _ref3.parser,\n        funcName = _ref3.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // Limits, not symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref4) {\n    let parser = _ref4.parser,\n        funcName = _ref4.funcName;\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: true,\n      parentIsSupSub: false,\n      symbol: false,\n      name: funcName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n}); // No limits, symbols\n\ndefineFunction({\n  type: \"op\",\n  names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222b\", \"\\u222c\", \"\\u222d\", \"\\u222e\", \"\\u222f\", \"\\u2230\"],\n  props: {\n    numArgs: 0\n  },\n\n  handler(_ref5) {\n    let parser = _ref5.parser,\n        funcName = _ref5.funcName;\n    let fName = funcName;\n\n    if (fName.length === 1) {\n      fName = singleCharIntegrals[fName];\n    }\n\n    return {\n      type: \"op\",\n      mode: parser.mode,\n      limits: false,\n      parentIsSupSub: false,\n      symbol: true,\n      name: fName\n    };\n  },\n\n  htmlBuilder: htmlBuilder$8,\n  mathmlBuilder: mathmlBuilder$8\n});\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only\n// \"operatorname\", but also  \"supsub\" since \\operatorname* can\nconst htmlBuilder$9 = (grp, options) => {\n  // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n  let supGroup;\n  let subGroup;\n  let hasLimits = false;\n  let group;\n  const supSub = checkNodeType(grp, \"supsub\");\n\n  if (supSub) {\n    // If we have limits, supsub will pass us its group to handle. Pull\n    // out the superscript and subscript and set the group to the op in\n    // its base.\n    supGroup = supSub.sup;\n    subGroup = supSub.sub;\n    group = assertNodeType(supSub.base, \"operatorname\");\n    hasLimits = true;\n  } else {\n    group = assertNodeType(grp, \"operatorname\");\n  }\n\n  let base;\n\n  if (group.body.length > 0) {\n    const body = group.body.map(child => {\n      // $FlowFixMe: Check if the node has a string `text` property.\n      const childText = child.text;\n\n      if (typeof childText === \"string\") {\n        return {\n          type: \"textord\",\n          mode: child.mode,\n          text: childText\n        };\n      } else {\n        return child;\n      }\n    }); // Consolidate function names into symbol characters.\n\n    const expression = buildExpression(body, options.withFont(\"mathrm\"), true);\n\n    for (let i = 0; i < expression.length; i++) {\n      const child = expression[i];\n\n      if (child instanceof SymbolNode) {\n        // Per amsopn package,\n        // change minus to hyphen and \\ast to asterisk\n        child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n      }\n    }\n\n    base = buildCommon.makeSpan([\"mop\"], expression, options);\n  } else {\n    base = buildCommon.makeSpan([\"mop\"], [], options);\n  }\n\n  if (hasLimits) {\n    return assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0);\n  } else {\n    return base;\n  }\n};\n\nconst mathmlBuilder$9 = (group, options) => {\n  // The steps taken here are similar to the html version.\n  let expression = buildExpression$1(group.body, options.withFont(\"mathrm\")); // Is expression a string or has it something like a fraction?\n\n  let isAllString = true; // default\n\n  for (let i = 0; i < expression.length; i++) {\n    const node = expression[i];\n\n    if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) {\n      switch (node.type) {\n        case \"mi\":\n        case \"mn\":\n        case \"ms\":\n        case \"mspace\":\n        case \"mtext\":\n          break;\n        // Do nothing yet.\n\n        case \"mo\":\n          {\n            const child = node.children[0];\n\n            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n              child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n            } else {\n              isAllString = false;\n            }\n\n            break;\n          }\n\n        default:\n          isAllString = false;\n      }\n    } else {\n      isAllString = false;\n    }\n  }\n\n  if (isAllString) {\n    // Write a single TextNode instead of multiple nested tags.\n    const word = expression.map(node => node.toText()).join(\"\");\n    expression = [new mathMLTree.TextNode(word)];\n  }\n\n  const identifier = new mathMLTree.MathNode(\"mi\", expression);\n  identifier.setAttribute(\"mathvariant\", \"normal\"); // \\u2061 is the same as &ApplyFunction;\n  // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n\n  const operator = new mathMLTree.MathNode(\"mo\", [makeText(\"\\u2061\", \"text\")]);\n\n  if (group.parentIsSupSub) {\n    return new mathMLTree.MathNode(\"mo\", [identifier, operator]);\n  } else {\n    return mathMLTree.newDocumentFragment([identifier, operator]);\n  }\n}; // \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\n\n\ndefineFunction({\n  type: \"operatorname\",\n  names: [\"\\\\operatorname\", \"\\\\operatorname*\"],\n  props: {\n    numArgs: 1\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"operatorname\",\n      mode: parser.mode,\n      body: ordargument(body),\n      alwaysHandleSupSub: funcName === \"\\\\operatorname*\",\n      limits: false,\n      parentIsSupSub: false\n    };\n  },\n  htmlBuilder: htmlBuilder$9,\n  mathmlBuilder: mathmlBuilder$9\n});\n\ndefineFunctionBuilders({\n  type: \"ordgroup\",\n\n  htmlBuilder(group, options) {\n    if (group.semisimple) {\n      return buildCommon.makeFragment(buildExpression(group.body, options, false));\n    }\n\n    return buildCommon.makeSpan([\"mord\"], buildExpression(group.body, options, true), options);\n  },\n\n  mathmlBuilder(group, options) {\n    return buildExpressionRow(group.body, options, true);\n  }\n\n});\n\ndefineFunction({\n  type: \"overline\",\n  names: [\"\\\\overline\"],\n  props: {\n    numArgs: 1\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const body = args[0];\n    return {\n      type: \"overline\",\n      mode: parser.mode,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Overlines are handled in the TeXbook pg 443, Rule 9.\n    // Build the inner group in the cramped style.\n    const innerGroup = buildGroup(group.body, options.havingCrampedStyle()); // Create the line above the body\n\n    const line = buildCommon.makeLineSpan(\"overline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    const vlist = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: innerGroup\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: defaultRuleThickness\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"mover\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accent\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"phantom\",\n  names: [\"\\\\phantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let parser = _ref.parser;\n    const body = args[0];\n    return {\n      type: \"phantom\",\n      mode: parser.mode,\n      body: ordargument(body)\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const elements = buildExpression(group.body, options.withPhantom(), false); // \\phantom isn't supposed to affect the elements it contains.\n    // See \"color\" for more details.\n\n    return buildCommon.makeFragment(elements);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(group.body, options);\n    return new mathMLTree.MathNode(\"mphantom\", inner);\n  }\n});\ndefineFunction({\n  type: \"hphantom\",\n  names: [\"\\\\hphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref2, args) => {\n    let parser = _ref2.parser;\n    const body = args[0];\n    return {\n      type: \"hphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    let node = buildCommon.makeSpan([], [buildGroup(group.body, options.withPhantom())]);\n    node.height = 0;\n    node.depth = 0;\n\n    if (node.children) {\n      for (let i = 0; i < node.children.length; i++) {\n        node.children[i].height = 0;\n        node.children[i].depth = 0;\n      }\n    } // See smash for comment re: use of makeVList\n\n\n    node = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\smash as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [node], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"height\", \"0px\");\n    node.setAttribute(\"depth\", \"0px\");\n    return node;\n  }\n});\ndefineFunction({\n  type: \"vphantom\",\n  names: [\"\\\\vphantom\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref3, args) => {\n    let parser = _ref3.parser;\n    const body = args[0];\n    return {\n      type: \"vphantom\",\n      mode: parser.mode,\n      body\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const inner = buildCommon.makeSpan([\"inner\"], [buildGroup(group.body, options.withPhantom())]);\n    const fix = buildCommon.makeSpan([\"fix\"], []);\n    return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const inner = buildExpression$1(ordargument(group.body), options);\n    const phantom = new mathMLTree.MathNode(\"mphantom\", inner);\n    const node = new mathMLTree.MathNode(\"mpadded\", [phantom]);\n    node.setAttribute(\"width\", \"0px\");\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"raisebox\",\n  names: [\"\\\\raisebox\"],\n  props: {\n    numArgs: 2,\n    argTypes: [\"size\", \"hbox\"],\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    const amount = assertNodeType(args[0], \"size\").value;\n    const body = args[1];\n    return {\n      type: \"raisebox\",\n      mode: parser.mode,\n      dy: amount,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const body = buildGroup(group.body, options);\n    const dy = calculateSize(group.dy, options);\n    return buildCommon.makeVList({\n      positionType: \"shift\",\n      positionData: -dy,\n      children: [{\n        type: \"elem\",\n        elem: body\n      }]\n    }, options);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n    const dy = group.dy.number + group.dy.unit;\n    node.setAttribute(\"voffset\", dy);\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"rule\",\n  names: [\"\\\\rule\"],\n  props: {\n    numArgs: 2,\n    numOptionalArgs: 1,\n    argTypes: [\"size\", \"size\", \"size\"]\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser;\n    const shift = optArgs[0];\n    const width = assertNodeType(args[0], \"size\");\n    const height = assertNodeType(args[1], \"size\");\n    return {\n      type: \"rule\",\n      mode: parser.mode,\n      shift: shift && assertNodeType(shift, \"size\").value,\n      width: width.value,\n      height: height.value\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Make an empty span for the rule\n    const rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options); // Calculate the shift, width, and height of the rule, and account for units\n\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0; // Style the rule to the right size\n\n    rule.style.borderRightWidth = width + \"em\";\n    rule.style.borderTopWidth = height + \"em\";\n    rule.style.bottom = shift + \"em\"; // Record the height and width\n\n    rule.width = width;\n    rule.height = height + shift;\n    rule.depth = -shift; // Font size is the number large enough that the browser will\n    // reserve at least `absHeight` space above the baseline.\n    // The 1.125 factor was empirically determined\n\n    rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n    return rule;\n  },\n\n  mathmlBuilder(group, options) {\n    const width = calculateSize(group.width, options);\n    const height = calculateSize(group.height, options);\n    const shift = group.shift ? calculateSize(group.shift, options) : 0;\n    const color = options.color && options.getColor() || \"black\";\n    const rule = new mathMLTree.MathNode(\"mspace\");\n    rule.setAttribute(\"mathbackground\", color);\n    rule.setAttribute(\"width\", width + \"em\");\n    rule.setAttribute(\"height\", height + \"em\");\n    const wrapper = new mathMLTree.MathNode(\"mpadded\", [rule]);\n\n    if (shift >= 0) {\n      wrapper.setAttribute(\"height\", \"+\" + shift + \"em\");\n    } else {\n      wrapper.setAttribute(\"height\", shift + \"em\");\n      wrapper.setAttribute(\"depth\", \"+\" + -shift + \"em\");\n    }\n\n    wrapper.setAttribute(\"voffset\", shift + \"em\");\n    return wrapper;\n  }\n\n});\n\nfunction sizingGroup(value, options, baseOptions) {\n  const inner = buildExpression(value, options, false);\n  const multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier; // Add size-resetting classes to the inner list and set maxFontSize\n  // manually. Handle nested size changes.\n\n  for (let i = 0; i < inner.length; i++) {\n    const pos = inner[i].classes.indexOf(\"sizing\");\n\n    if (pos < 0) {\n      Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n    } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n      // This is a nested size change: e.g., inner[i] is the \"b\" in\n      // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n      // but not the new size.\n      inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n    }\n\n    inner[i].height *= multiplier;\n    inner[i].depth *= multiplier;\n  }\n\n  return buildCommon.makeFragment(inner);\n}\nconst sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\nconst htmlBuilder$a = (group, options) => {\n  // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n  // these functions inside of math expressions, so we do some special\n  // handling.\n  const newOptions = options.havingSize(group.size);\n  return sizingGroup(group.body, newOptions, options);\n};\ndefineFunction({\n  type: \"sizing\",\n  names: sizeFuncs,\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n  handler: (_ref, args) => {\n    let breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    const body = parser.parseExpression(false, breakOnTokenText);\n    return {\n      type: \"sizing\",\n      mode: parser.mode,\n      // Figure out what size to use based on the list of functions above\n      size: sizeFuncs.indexOf(funcName) + 1,\n      body\n    };\n  },\n  htmlBuilder: htmlBuilder$a,\n  mathmlBuilder: (group, options) => {\n    const newOptions = options.havingSize(group.size);\n    const inner = buildExpression$1(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner); // TODO(emily): This doesn't produce the correct size for nested size\n    // changes, because we don't keep state of what style we're currently\n    // in, so we can't reset the size to normal before changing it.  Now\n    // that we're passing an options parameter we should be able to fix\n    // this.\n\n    node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n    return node;\n  }\n});\n\n// smash, with optional [tb], as in AMS\ndefineFunction({\n  type: \"smash\",\n  names: [\"\\\\smash\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1,\n    allowedInText: true\n  },\n  handler: (_ref, args, optArgs) => {\n    let parser = _ref.parser;\n    let smashHeight = false;\n    let smashDepth = false;\n    const tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n\n    if (tbArg) {\n      // Optional [tb] argument is engaged.\n      // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n      //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n      let letter = \"\";\n\n      for (let i = 0; i < tbArg.body.length; ++i) {\n        const node = tbArg.body[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n        letter = node.text;\n\n        if (letter === \"t\") {\n          smashHeight = true;\n        } else if (letter === \"b\") {\n          smashDepth = true;\n        } else {\n          smashHeight = false;\n          smashDepth = false;\n          break;\n        }\n      }\n    } else {\n      smashHeight = true;\n      smashDepth = true;\n    }\n\n    const body = args[0];\n    return {\n      type: \"smash\",\n      mode: parser.mode,\n      body,\n      smashHeight,\n      smashDepth\n    };\n  },\n  htmlBuilder: (group, options) => {\n    const node = buildCommon.makeSpan([], [buildGroup(group.body, options)]);\n\n    if (!group.smashHeight && !group.smashDepth) {\n      return node;\n    }\n\n    if (group.smashHeight) {\n      node.height = 0; // In order to influence makeVList, we have to reset the children.\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].height = 0;\n        }\n      }\n    }\n\n    if (group.smashDepth) {\n      node.depth = 0;\n\n      if (node.children) {\n        for (let i = 0; i < node.children.length; i++) {\n          node.children[i].depth = 0;\n        }\n      }\n    } // At this point, we've reset the TeX-like height and depth values.\n    // But the span still has an HTML line height.\n    // makeVList applies \"display: table-cell\", which prevents the browser\n    // from acting on that line height. So we'll call makeVList now.\n\n\n    const smashedNode = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: node\n      }]\n    }, options); // For spacing, TeX treats \\hphantom as a math group (same spacing as ord).\n\n    return buildCommon.makeSpan([\"mord\"], [smashedNode], options);\n  },\n  mathmlBuilder: (group, options) => {\n    const node = new mathMLTree.MathNode(\"mpadded\", [buildGroup$1(group.body, options)]);\n\n    if (group.smashHeight) {\n      node.setAttribute(\"height\", \"0px\");\n    }\n\n    if (group.smashDepth) {\n      node.setAttribute(\"depth\", \"0px\");\n    }\n\n    return node;\n  }\n});\n\ndefineFunction({\n  type: \"sqrt\",\n  names: [\"\\\\sqrt\"],\n  props: {\n    numArgs: 1,\n    numOptionalArgs: 1\n  },\n\n  handler(_ref, args, optArgs) {\n    let parser = _ref.parser;\n    const index = optArgs[0];\n    const body = args[0];\n    return {\n      type: \"sqrt\",\n      mode: parser.mode,\n      body,\n      index\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Square roots are handled in the TeXbook pg. 443, Rule 11.\n    // First, we do the same steps as in overline to build the inner group\n    // and line\n    let inner = buildGroup(group.body, options.havingCrampedStyle());\n\n    if (inner.height === 0) {\n      // Render a small surd.\n      inner.height = options.fontMetrics().xHeight;\n    } // Some groups can return document fragments.  Handle those by wrapping\n    // them in a span.\n\n\n    inner = buildCommon.wrapFragment(inner, options); // Calculate the minimum size for the \\surd delimiter\n\n    const metrics = options.fontMetrics();\n    const theta = metrics.defaultRuleThickness;\n    let phi = theta;\n\n    if (options.style.id < Style$1.TEXT.id) {\n      phi = options.fontMetrics().xHeight;\n    } // Calculate the clearance between the body and line\n\n\n    let lineClearance = theta + phi / 4;\n    const minDelimiterHeight = inner.height + inner.depth + lineClearance + theta; // Create a sqrt SVG of the required minimum size\n\n    const _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n          img = _delimiter$sqrtImage.span,\n          ruleWidth = _delimiter$sqrtImage.ruleWidth,\n          advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n    const delimDepth = img.height - ruleWidth; // Adjust the clearance based on the delimiter size\n\n    if (delimDepth > inner.height + inner.depth + lineClearance) {\n      lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n    } // Shift the sqrt image\n\n\n    const imgShift = img.height - inner.height - lineClearance - ruleWidth;\n    inner.style.paddingLeft = advanceWidth + \"em\"; // Overlay the image and the argument.\n\n    const body = buildCommon.makeVList({\n      positionType: \"firstBaseline\",\n      children: [{\n        type: \"elem\",\n        elem: inner,\n        wrapperClasses: [\"svg-align\"]\n      }, {\n        type: \"kern\",\n        size: -(inner.height + imgShift)\n      }, {\n        type: \"elem\",\n        elem: img\n      }, {\n        type: \"kern\",\n        size: ruleWidth\n      }]\n    }, options);\n\n    if (!group.index) {\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n    } else {\n      // Handle the optional root index\n      // The index is always in scriptscript style\n      const newOptions = options.havingStyle(Style$1.SCRIPTSCRIPT);\n      const rootm = buildGroup(group.index, newOptions, options); // The amount the index is shifted by. This is taken from the TeX\n      // source, in the definition of `\\r@@t`.\n\n      const toShift = 0.6 * (body.height - body.depth); // Build a VList with the superscript shifted up correctly\n\n      const rootVList = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -toShift,\n        children: [{\n          type: \"elem\",\n          elem: rootm\n        }]\n      }, options); // Add a class surrounding it so we can add on the appropriate\n      // kerning\n\n      const rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n      return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    const body = group.body,\n          index = group.index;\n    return index ? new mathMLTree.MathNode(\"mroot\", [buildGroup$1(body, options), buildGroup$1(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildGroup$1(body, options)]);\n  }\n\n});\n\nconst styleMap$1 = {\n  \"display\": Style$1.DISPLAY,\n  \"text\": Style$1.TEXT,\n  \"script\": Style$1.SCRIPT,\n  \"scriptscript\": Style$1.SCRIPTSCRIPT\n};\ndefineFunction({\n  type: \"styling\",\n  names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let breakOnTokenText = _ref.breakOnTokenText,\n        funcName = _ref.funcName,\n        parser = _ref.parser;\n    // parse out the implicit body\n    const body = parser.parseExpression(true, breakOnTokenText); // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n    // here and in buildHTML and de-dupe the enumeration of all the styles).\n    // $FlowFixMe: The names above exactly match the styles.\n\n    const style = funcName.slice(1, funcName.length - 5);\n    return {\n      type: \"styling\",\n      mode: parser.mode,\n      // Figure out what style to use by pulling out the style from\n      // the function name\n      style,\n      body\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n    const newStyle = styleMap$1[group.style];\n    const newOptions = options.havingStyle(newStyle).withFont('');\n    return sizingGroup(group.body, newOptions, options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Figure out what style we're changing to.\n    const newStyle = styleMap$1[group.style];\n    const newOptions = options.havingStyle(newStyle);\n    const inner = buildExpression$1(group.body, newOptions);\n    const node = new mathMLTree.MathNode(\"mstyle\", inner);\n    const styleAttributes = {\n      \"display\": [\"0\", \"true\"],\n      \"text\": [\"0\", \"false\"],\n      \"script\": [\"1\", \"false\"],\n      \"scriptscript\": [\"2\", \"false\"]\n    };\n    const attr = styleAttributes[group.style];\n    node.setAttribute(\"scriptlevel\", attr[0]);\n    node.setAttribute(\"displaystyle\", attr[1]);\n    return node;\n  }\n\n});\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nconst htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n  const base = group.base;\n\n  if (!base) {\n    return null;\n  } else if (base.type === \"op\") {\n    // Operators handle supsubs differently when they have limits\n    // (e.g. `\\displaystyle\\sum_2^3`)\n    const delegate = base.limits && (options.style.size === Style$1.DISPLAY.size || base.alwaysHandleSupSub);\n    return delegate ? htmlBuilder$8 : null;\n  } else if (base.type === \"operatorname\") {\n    const delegate = base.alwaysHandleSupSub && (options.style.size === Style$1.DISPLAY.size || base.limits);\n    return delegate ? htmlBuilder$9 : null;\n  } else if (base.type === \"accent\") {\n    return utils.isCharacterBox(base.base) ? htmlBuilder : null;\n  } else if (base.type === \"horizBrace\") {\n    const isSup = !group.sub;\n    return isSup === base.isOver ? htmlBuilder$7 : null;\n  } else {\n    return null;\n  }\n}; // Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\n\n\ndefineFunctionBuilders({\n  type: \"supsub\",\n\n  htmlBuilder(group, options) {\n    // Superscript and subscripts are handled in the TeXbook on page\n    // 445-446, rules 18(a-f).\n    // Here is where we defer to the inner group if it should handle\n    // superscripts and subscripts itself.\n    const builderDelegate = htmlBuilderDelegate(group, options);\n\n    if (builderDelegate) {\n      return builderDelegate(group, options);\n    }\n\n    const valueBase = group.base,\n          valueSup = group.sup,\n          valueSub = group.sub;\n    const base = buildGroup(valueBase, options);\n    let supm;\n    let subm;\n    const metrics = options.fontMetrics(); // Rule 18a\n\n    let supShift = 0;\n    let subShift = 0;\n    const isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n\n    if (valueSup) {\n      const newOptions = options.havingStyle(options.style.sup());\n      supm = buildGroup(valueSup, newOptions, options);\n\n      if (!isCharacterBox) {\n        supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    }\n\n    if (valueSub) {\n      const newOptions = options.havingStyle(options.style.sub());\n      subm = buildGroup(valueSub, newOptions, options);\n\n      if (!isCharacterBox) {\n        subShift = base.depth + newOptions.fontMetrics().subDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n      }\n    } // Rule 18c\n\n\n    let minSupShift;\n\n    if (options.style === Style$1.DISPLAY) {\n      minSupShift = metrics.sup1;\n    } else if (options.style.cramped) {\n      minSupShift = metrics.sup3;\n    } else {\n      minSupShift = metrics.sup2;\n    } // scriptspace is a font-size-independent size, so scale it\n    // appropriately for use as the marginRight.\n\n\n    const multiplier = options.sizeMultiplier;\n    const marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n    let marginLeft = null;\n\n    if (subm) {\n      // Subscripts shouldn't be shifted by the base's italic correction.\n      // Account for that by shifting the subscript back the appropriate\n      // amount. Note we only do this when the base is a single symbol.\n      const isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n\n      if (base instanceof SymbolNode || isOiint) {\n        // $FlowFixMe\n        marginLeft = -base.italic + \"em\";\n      }\n    }\n\n    let supsub;\n\n    if (supm && subm) {\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      subShift = Math.max(subShift, metrics.sub2);\n      const ruleWidth = metrics.defaultRuleThickness; // Rule 18e\n\n      const maxWidth = 4 * ruleWidth;\n\n      if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n        subShift = maxWidth - (supShift - supm.depth) + subm.height;\n        const psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n\n        if (psi > 0) {\n          supShift += psi;\n          subShift -= psi;\n        }\n      }\n\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        shift: subShift,\n        marginRight,\n        marginLeft\n      }, {\n        type: \"elem\",\n        elem: supm,\n        shift: -supShift,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"individualShift\",\n        children: vlistElem\n      }, options);\n    } else if (subm) {\n      // Rule 18b\n      subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n      const vlistElem = [{\n        type: \"elem\",\n        elem: subm,\n        marginLeft,\n        marginRight\n      }];\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: subShift,\n        children: vlistElem\n      }, options);\n    } else if (supm) {\n      // Rule 18c, d\n      supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n      supsub = buildCommon.makeVList({\n        positionType: \"shift\",\n        positionData: -supShift,\n        children: [{\n          type: \"elem\",\n          elem: supm,\n          marginRight\n        }]\n      }, options);\n    } else {\n      throw new Error(\"supsub must have either sup or sub.\");\n    } // Wrap the supsub vlist in a span.msupsub to reset text-align.\n\n\n    const mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n    return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n  },\n\n  mathmlBuilder(group, options) {\n    // Is the inner group a relevant horizonal brace?\n    let isBrace = false;\n    let isOver;\n    let isSup;\n    const horizBrace = checkNodeType(group.base, \"horizBrace\");\n\n    if (horizBrace) {\n      isSup = !!group.sup;\n\n      if (isSup === horizBrace.isOver) {\n        isBrace = true;\n        isOver = horizBrace.isOver;\n      }\n    }\n\n    if (group.base && (group.base.type === \"op\" || group.base.type === \"operatorname\")) {\n      group.base.parentIsSupSub = true;\n    }\n\n    const children = [buildGroup$1(group.base, options)];\n\n    if (group.sub) {\n      children.push(buildGroup$1(group.sub, options));\n    }\n\n    if (group.sup) {\n      children.push(buildGroup$1(group.sup, options));\n    }\n\n    let nodeType;\n\n    if (isBrace) {\n      nodeType = isOver ? \"mover\" : \"munder\";\n    } else if (!group.sub) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"mover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"mover\";\n      } else {\n        nodeType = \"msup\";\n      }\n    } else if (!group.sup) {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && (options.style === Style$1.DISPLAY || base.alwaysHandleSupSub)) {\n        nodeType = \"munder\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (base.limits || options.style === Style$1.DISPLAY)) {\n        nodeType = \"munder\";\n      } else {\n        nodeType = \"msub\";\n      }\n    } else {\n      const base = group.base;\n\n      if (base && base.type === \"op\" && base.limits && options.style === Style$1.DISPLAY) {\n        nodeType = \"munderover\";\n      } else if (base && base.type === \"operatorname\" && base.alwaysHandleSupSub && (options.style === Style$1.DISPLAY || base.limits)) {\n        nodeType = \"munderover\";\n      } else {\n        nodeType = \"msubsup\";\n      }\n    }\n\n    const node = new mathMLTree.MathNode(nodeType, children);\n    return node;\n  }\n\n});\n\ndefineFunctionBuilders({\n  type: \"atom\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mo\", [makeText(group.text, group.mode)]);\n\n    if (group.family === \"bin\") {\n      const variant = getVariant(group, options);\n\n      if (variant === \"bold-italic\") {\n        node.setAttribute(\"mathvariant\", variant);\n      }\n    } else if (group.family === \"punct\") {\n      node.setAttribute(\"separator\", \"true\");\n    } else if (group.family === \"open\" || group.family === \"close\") {\n      // Delims built here should not stretch vertically.\n      // See delimsizing.js for stretchy delims.\n      node.setAttribute(\"stretchy\", \"false\");\n    }\n\n    return node;\n  }\n\n});\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\nconst defaultVariant = {\n  \"mi\": \"italic\",\n  \"mn\": \"normal\",\n  \"mtext\": \"normal\"\n};\ndefineFunctionBuilders({\n  type: \"mathord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"mathord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const node = new mathMLTree.MathNode(\"mi\", [makeText(group.text, group.mode, options)]);\n    const variant = getVariant(group, options) || \"italic\";\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\ndefineFunctionBuilders({\n  type: \"textord\",\n\n  htmlBuilder(group, options) {\n    return buildCommon.makeOrd(group, options, \"textord\");\n  },\n\n  mathmlBuilder(group, options) {\n    const text = makeText(group.text, group.mode, options);\n    const variant = getVariant(group, options) || \"normal\";\n    let node;\n\n    if (group.mode === 'text') {\n      node = new mathMLTree.MathNode(\"mtext\", [text]);\n    } else if (/[0-9]/.test(group.text)) {\n      // TODO(kevinb) merge adjacent <mn> nodes\n      // do it as a post processing step\n      node = new mathMLTree.MathNode(\"mn\", [text]);\n    } else if (group.text === \"\\\\prime\") {\n      node = new mathMLTree.MathNode(\"mo\", [text]);\n    } else {\n      node = new mathMLTree.MathNode(\"mi\", [text]);\n    }\n\n    if (variant !== defaultVariant[node.type]) {\n      node.setAttribute(\"mathvariant\", variant);\n    }\n\n    return node;\n  }\n\n});\n\nconst cssSpace = {\n  \"\\\\nobreak\": \"nobreak\",\n  \"\\\\allowbreak\": \"allowbreak\"\n}; // A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\n\nconst regularSpace = {\n  \" \": {},\n  \"\\\\ \": {},\n  \"~\": {\n    className: \"nobreak\"\n  },\n  \"\\\\space\": {},\n  \"\\\\nobreakspace\": {\n    className: \"nobreak\"\n  }\n}; // ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\n\ndefineFunctionBuilders({\n  type: \"spacing\",\n\n  htmlBuilder(group, options) {\n    if (regularSpace.hasOwnProperty(group.text)) {\n      const className = regularSpace[group.text].className || \"\"; // Spaces are generated by adding an actual space. Each of these\n      // things has an entry in the symbols table, so these will be turned\n      // into appropriate outputs.\n\n      if (group.mode === \"text\") {\n        const ord = buildCommon.makeOrd(group, options, \"textord\");\n        ord.classes.push(className);\n        return ord;\n      } else {\n        return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n      }\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // Spaces based on just a CSS class.\n      return buildCommon.makeSpan([\"mspace\", cssSpace[group.text]], [], options);\n    } else {\n      throw new ParseError(`Unknown type of space \"${group.text}\"`);\n    }\n  },\n\n  mathmlBuilder(group, options) {\n    let node;\n\n    if (regularSpace.hasOwnProperty(group.text)) {\n      node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);\n    } else if (cssSpace.hasOwnProperty(group.text)) {\n      // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n      return new mathMLTree.MathNode(\"mspace\");\n    } else {\n      throw new ParseError(`Unknown type of space \"${group.text}\"`);\n    }\n\n    return node;\n  }\n\n});\n\nconst pad = () => {\n  const padNode = new mathMLTree.MathNode(\"mtd\", []);\n  padNode.setAttribute(\"width\", \"50%\");\n  return padNode;\n};\n\ndefineFunctionBuilders({\n  type: \"tag\",\n\n  mathmlBuilder(group, options) {\n    const table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mtr\", [pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)]), pad(), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)])])]);\n    table.setAttribute(\"width\", \"100%\");\n    return table; // TODO: Left-aligned tags.\n    // Currently, the group and options passed here do not contain\n    // enough info to set tag alignment. `leqno` is in Settings but it is\n    // not passed to Options. On the HTML side, leqno is\n    // set by a CSS class applied in buildTree.js. That would have worked\n    // in MathML if browsers supported <mlabeledtr>. Since they don't, we\n    // need to rewrite the way this function is called.\n  }\n\n});\n\nconst textFontFamilies = {\n  \"\\\\text\": undefined,\n  \"\\\\textrm\": \"textrm\",\n  \"\\\\textsf\": \"textsf\",\n  \"\\\\texttt\": \"texttt\",\n  \"\\\\textnormal\": \"textrm\"\n};\nconst textFontWeights = {\n  \"\\\\textbf\": \"textbf\",\n  \"\\\\textmd\": \"textmd\"\n};\nconst textFontShapes = {\n  \"\\\\textit\": \"textit\",\n  \"\\\\textup\": \"textup\"\n};\n\nconst optionsWithFont = (group, options) => {\n  const font = group.font; // Checks if the argument is a font family or a font style.\n\n  if (!font) {\n    return options;\n  } else if (textFontFamilies[font]) {\n    return options.withTextFontFamily(textFontFamilies[font]);\n  } else if (textFontWeights[font]) {\n    return options.withTextFontWeight(textFontWeights[font]);\n  } else {\n    return options.withTextFontShape(textFontShapes[font]);\n  }\n};\n\ndefineFunction({\n  type: \"text\",\n  names: [// Font families\n  \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\", // Font weights\n  \"\\\\textbf\", \"\\\\textmd\", // Font Shapes\n  \"\\\\textit\", \"\\\\textup\"],\n  props: {\n    numArgs: 1,\n    argTypes: [\"text\"],\n    greediness: 2,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser,\n        funcName = _ref.funcName;\n    const body = args[0];\n    return {\n      type: \"text\",\n      mode: parser.mode,\n      body: ordargument(body),\n      font: funcName\n    };\n  },\n\n  htmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    const inner = buildExpression(group.body, newOptions, true);\n    return buildCommon.makeSpan([\"mord\", \"text\"], buildCommon.tryCombineChars(inner), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const newOptions = optionsWithFont(group, options);\n    return buildExpressionRow(group.body, newOptions);\n  }\n\n});\n\ndefineFunction({\n  type: \"underline\",\n  names: [\"\\\\underline\"],\n  props: {\n    numArgs: 1,\n    allowedInText: true\n  },\n\n  handler(_ref, args) {\n    let parser = _ref.parser;\n    return {\n      type: \"underline\",\n      mode: parser.mode,\n      body: args[0]\n    };\n  },\n\n  htmlBuilder(group, options) {\n    // Underlines are handled in the TeXbook pg 443, Rule 10.\n    // Build the inner group.\n    const innerGroup = buildGroup(group.body, options); // Create the line to go below the body\n\n    const line = buildCommon.makeLineSpan(\"underline-line\", options); // Generate the vlist, with the appropriate kerns\n\n    const defaultRuleThickness = options.fontMetrics().defaultRuleThickness;\n    const vlist = buildCommon.makeVList({\n      positionType: \"top\",\n      positionData: innerGroup.height,\n      children: [{\n        type: \"kern\",\n        size: defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: line\n      }, {\n        type: \"kern\",\n        size: 3 * defaultRuleThickness\n      }, {\n        type: \"elem\",\n        elem: innerGroup\n      }]\n    }, options);\n    return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n  },\n\n  mathmlBuilder(group, options) {\n    const operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);\n    operator.setAttribute(\"stretchy\", \"true\");\n    const node = new mathMLTree.MathNode(\"munder\", [buildGroup$1(group.body, options), operator]);\n    node.setAttribute(\"accentunder\", \"true\");\n    return node;\n  }\n\n});\n\ndefineFunction({\n  type: \"verb\",\n  names: [\"\\\\verb\"],\n  props: {\n    numArgs: 0,\n    allowedInText: true\n  },\n\n  handler(context, args, optArgs) {\n    // \\verb and \\verb* are dealt with directly in Parser.js.\n    // If we end up here, it's because of a failure to match the two delimiters\n    // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n    // terminated by end of line (or file).\n    throw new ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n  },\n\n  htmlBuilder(group, options) {\n    const text = makeVerb(group);\n    const body = []; // \\verb enters text mode and therefore is sized like \\textstyle\n\n    const newOptions = options.havingStyle(options.style.text());\n\n    for (let i = 0; i < text.length; i++) {\n      let c = text[i];\n\n      if (c === '~') {\n        c = '\\\\textasciitilde';\n      }\n\n      body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n    }\n\n    return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);\n  },\n\n  mathmlBuilder(group, options) {\n    const text = new mathMLTree.TextNode(makeVerb(group));\n    const node = new mathMLTree.MathNode(\"mtext\", [text]);\n    node.setAttribute(\"mathvariant\", \"monospace\");\n    return node;\n  }\n\n});\n/**\n * Converts verb group into body string.\n *\n * \\verb* replaces each space with an open box \\u2423\n * \\verb replaces each space with a no-break space \\xA0\n */\n\nconst makeVerb = group => group.body.replace(/ /g, group.star ? '\\u2423' : '\\xA0');\n\n/** Include this to ensure that all functions are defined. */\nconst functions = _functions;\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nconst spaceRegexString = \"[ \\r\\n\\t]\";\nconst controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nconst controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nconst controlWordWhitespaceRegexString = `${controlWordRegexString}${spaceRegexString}*`;\nconst controlWordWhitespaceRegex = new RegExp(`^(${controlWordRegexString})${spaceRegexString}*$`);\nconst combiningDiacriticalMarkString = \"[\\u0300-\\u036f]\";\nconst combiningDiacriticalMarksEndRegex = new RegExp(`${combiningDiacriticalMarkString}+$`);\nconst tokenRegexString = `(${spaceRegexString}+)|` + // whitespace\n\"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + // single codepoint\n`${combiningDiacriticalMarkString}*` + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + // surrogate pair\n`${combiningDiacriticalMarkString}*` + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + // \\verb unstarred\n\"|\\\\\\\\operatorname\\\\*\" + // \\operatorname*\n`|${controlWordWhitespaceRegexString}` + // \\macroName + spaces\n`|${controlSymbolRegexString})`; // \\\\, \\', etc.\n\n/** Main Lexer class */\n\nclass Lexer {\n  // category codes, only supports comment characters (14) for now\n  constructor(input, settings) {\n    this.input = void 0;\n    this.settings = void 0;\n    this.tokenRegex = void 0;\n    this.catcodes = void 0;\n    // Separate accents from characters\n    this.input = input;\n    this.settings = settings;\n    this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    this.catcodes = {\n      \"%\": 14 // comment character\n\n    };\n  }\n\n  setCatcode(char, code) {\n    this.catcodes[char] = code;\n  }\n  /**\n   * This function lexes a single token.\n   */\n\n\n  lex() {\n    const input = this.input;\n    const pos = this.tokenRegex.lastIndex;\n\n    if (pos === input.length) {\n      return new Token(\"EOF\", new SourceLocation(this, pos, pos));\n    }\n\n    const match = this.tokenRegex.exec(input);\n\n    if (match === null || match.index !== pos) {\n      throw new ParseError(`Unexpected character: '${input[pos]}'`, new Token(input[pos], new SourceLocation(this, pos, pos + 1)));\n    }\n\n    let text = match[2] || \" \";\n\n    if (this.catcodes[text] === 14) {\n      // comment character\n      const nlIndex = input.indexOf('\\n', this.tokenRegex.lastIndex);\n\n      if (nlIndex === -1) {\n        this.tokenRegex.lastIndex = input.length; // EOF\n\n        this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n      } else {\n        this.tokenRegex.lastIndex = nlIndex + 1;\n      }\n\n      return this.lex();\n    } // Trim any trailing whitespace from control word match\n\n\n    const controlMatch = text.match(controlWordWhitespaceRegex);\n\n    if (controlMatch) {\n      text = controlMatch[1];\n    }\n\n    return new Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));\n  }\n\n}\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\nclass Namespace {\n  /**\n   * Both arguments are optional.  The first argument is an object of\n   * built-in mappings which never change.  The second argument is an object\n   * of initial (global-level) mappings, which will constantly change\n   * according to any global/top-level `set`s done.\n   */\n  constructor(builtins, globalMacros) {\n    if (builtins === void 0) {\n      builtins = {};\n    }\n\n    if (globalMacros === void 0) {\n      globalMacros = {};\n    }\n\n    this.current = void 0;\n    this.builtins = void 0;\n    this.undefStack = void 0;\n    this.current = globalMacros;\n    this.builtins = builtins;\n    this.undefStack = [];\n  }\n  /**\n   * Start a new nested group, affecting future local `set`s.\n   */\n\n\n  beginGroup() {\n    this.undefStack.push({});\n  }\n  /**\n   * End current nested group, restoring values before the group began.\n   */\n\n\n  endGroup() {\n    if (this.undefStack.length === 0) {\n      throw new ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n    }\n\n    const undefs = this.undefStack.pop();\n\n    for (const undef in undefs) {\n      if (undefs.hasOwnProperty(undef)) {\n        if (undefs[undef] === undefined) {\n          delete this.current[undef];\n        } else {\n          this.current[undef] = undefs[undef];\n        }\n      }\n    }\n  }\n  /**\n   * Detect whether `name` has a definition.  Equivalent to\n   * `get(name) != null`.\n   */\n\n\n  has(name) {\n    return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n  }\n  /**\n   * Get the current value of a name, or `undefined` if there is no value.\n   *\n   * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n   * is defined, as the definition may be the empty string which evaluates\n   * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n   * `if (namespace.has(...))`.\n   */\n\n\n  get(name) {\n    if (this.current.hasOwnProperty(name)) {\n      return this.current[name];\n    } else {\n      return this.builtins[name];\n    }\n  }\n  /**\n   * Set the current value of a name, and optionally set it globally too.\n   * Local set() sets the current value and (when appropriate) adds an undo\n   * operation to the undo stack.  Global set() may change the undo\n   * operation at every level, so takes time linear in their number.\n   */\n\n\n  set(name, value, global) {\n    if (global === void 0) {\n      global = false;\n    }\n\n    if (global) {\n      // Global set is equivalent to setting in all groups.  Simulate this\n      // by destroying any undos currently scheduled for this name,\n      // and adding an undo with the *new* value (in case it later gets\n      // locally reset within this environment).\n      for (let i = 0; i < this.undefStack.length; i++) {\n        delete this.undefStack[i][name];\n      }\n\n      if (this.undefStack.length > 0) {\n        this.undefStack[this.undefStack.length - 1][name] = value;\n      }\n    } else {\n      // Undo this set at end of this group (possibly to `undefined`),\n      // unless an undo is already in place, in which case that older\n      // value is the correct one.\n      const top = this.undefStack[this.undefStack.length - 1];\n\n      if (top && !top.hasOwnProperty(name)) {\n        top[name] = this.current[name];\n      }\n    }\n\n    this.current[name] = value;\n  }\n\n}\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\nconst builtinMacros = {};\n\nfunction defineMacro(name, body) {\n  builtinMacros[name] = body;\n} //////////////////////////////////////////////////////////////////////\n// macro tools\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\n\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[0],\n    numArgs: 0\n  };\n}); // LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\n\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n  const args = context.consumeArgs(2);\n  return {\n    tokens: args[1],\n    numArgs: 0\n  };\n}); // LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\n\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n  const args = context.consumeArgs(3); // symbol, if, else\n\n  const nextToken = context.future();\n\n  if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[2],\n      numArgs: 0\n    };\n  }\n}); // LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\n\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\"); // LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\n\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n  const args = context.consumeArgs(2);\n\n  if (context.mode === 'text') {\n    return {\n      tokens: args[0],\n      numArgs: 0\n    };\n  } else {\n    return {\n      tokens: args[1],\n      numArgs: 0\n    };\n  }\n}); // Lookup table for parsing numbers in base 8 through 16\n\nconst digitToNumber = {\n  \"0\": 0,\n  \"1\": 1,\n  \"2\": 2,\n  \"3\": 3,\n  \"4\": 4,\n  \"5\": 5,\n  \"6\": 6,\n  \"7\": 7,\n  \"8\": 8,\n  \"9\": 9,\n  \"a\": 10,\n  \"A\": 10,\n  \"b\": 11,\n  \"B\": 11,\n  \"c\": 12,\n  \"C\": 12,\n  \"d\": 13,\n  \"D\": 13,\n  \"e\": 14,\n  \"E\": 14,\n  \"f\": 15,\n  \"F\": 15\n}; // TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\n\ndefineMacro(\"\\\\char\", function (context) {\n  let token = context.popToken();\n  let base;\n  let number = '';\n\n  if (token.text === \"'\") {\n    base = 8;\n    token = context.popToken();\n  } else if (token.text === '\"') {\n    base = 16;\n    token = context.popToken();\n  } else if (token.text === \"`\") {\n    token = context.popToken();\n\n    if (token.text[0] === \"\\\\\") {\n      number = token.text.charCodeAt(1);\n    } else if (token.text === \"EOF\") {\n      throw new ParseError(\"\\\\char` missing argument\");\n    } else {\n      number = token.text.charCodeAt(0);\n    }\n  } else {\n    base = 10;\n  }\n\n  if (base) {\n    // Parse a number in the given base, starting with first `token`.\n    number = digitToNumber[token.text];\n\n    if (number == null || number >= base) {\n      throw new ParseError(`Invalid base-${base} digit ${token.text}`);\n    }\n\n    let digit;\n\n    while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n      number *= base;\n      number += digit;\n      context.popToken();\n    }\n  }\n\n  return `\\\\@char{${number}}`;\n}); // Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\n\nconst def = (context, global) => {\n  let arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\gdef's first argument must be a macro name\");\n  }\n\n  const name = arg[0].text; // Count argument specifiers, and check they are in the order #1 #2 ...\n\n  let numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  while (arg.length === 1 && arg[0].text === \"#\") {\n    arg = context.consumeArgs(1)[0];\n\n    if (arg.length !== 1) {\n      throw new ParseError(`Invalid argument number length \"${arg.length}\"`);\n    }\n\n    if (!/^[1-9]$/.test(arg[0].text)) {\n      throw new ParseError(`Invalid argument number \"${arg[0].text}\"`);\n    }\n\n    numArgs++;\n\n    if (parseInt(arg[0].text) !== numArgs) {\n      throw new ParseError(`Argument number \"${arg[0].text}\" out of order`);\n    }\n\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  }, global);\n  return '';\n};\n\ndefineMacro(\"\\\\gdef\", context => def(context, true));\ndefineMacro(\"\\\\def\", context => def(context, false));\ndefineMacro(\"\\\\global\", context => {\n  const next = context.consumeArgs(1)[0];\n\n  if (next.length !== 1) {\n    throw new ParseError(\"Invalid command after \\\\global\");\n  }\n\n  const command = next[0].text; // TODO: Should expand command\n\n  if (command === \"\\\\def\") {\n    // \\global\\def is equivalent to \\gdef\n    return def(context, true);\n  } else {\n    throw new ParseError(`Invalid command '${command}' after \\\\global`);\n  }\n}); // \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\n\nconst newcommand = (context, existsOK, nonexistsOK) => {\n  let arg = context.consumeArgs(1)[0];\n\n  if (arg.length !== 1) {\n    throw new ParseError(\"\\\\newcommand's first argument must be a macro name\");\n  }\n\n  const name = arg[0].text;\n  const exists = context.isDefined(name);\n\n  if (exists && !existsOK) {\n    throw new ParseError(`\\\\newcommand{${name}} attempting to redefine ` + `${name}; use \\\\renewcommand`);\n  }\n\n  if (!exists && !nonexistsOK) {\n    throw new ParseError(`\\\\renewcommand{${name}} when command ${name} ` + `does not yet exist; use \\\\newcommand`);\n  }\n\n  let numArgs = 0;\n  arg = context.consumeArgs(1)[0];\n\n  if (arg.length === 1 && arg[0].text === \"[\") {\n    let argText = '';\n    let token = context.expandNextToken();\n\n    while (token.text !== \"]\" && token.text !== \"EOF\") {\n      // TODO: Should properly expand arg, e.g., ignore {}s\n      argText += token.text;\n      token = context.expandNextToken();\n    }\n\n    if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n      throw new ParseError(`Invalid number of arguments: ${argText}`);\n    }\n\n    numArgs = parseInt(argText);\n    arg = context.consumeArgs(1)[0];\n  } // Final arg is the expansion of the macro\n\n\n  context.macros.set(name, {\n    tokens: arg,\n    numArgs\n  });\n  return '';\n};\n\ndefineMacro(\"\\\\newcommand\", context => newcommand(context, false, true));\ndefineMacro(\"\\\\renewcommand\", context => newcommand(context, true, false));\ndefineMacro(\"\\\\providecommand\", context => newcommand(context, true, true)); //////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\n\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\"); // Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\n\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\"); // Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\n\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`\u00A9}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`\u00AE}\"); // Characters omitted from Unicode range 1D400\u20131D7FF\n\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\n\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\n\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\"); // Define \\Bbbk with a macro that works in both HTML and MathML.\n\ndefineMacro(\"\\\\Bbbk\", \"\\\\Bbb{k}\"); // Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\n\ndefineMacro(\"\\u00b7\", \"\\\\cdotp\"); // \\llap and \\rlap render their contents in text mode\n\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\"); // \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\n// For MathML we write U+0338 here. buildMathML.js will then do the overlay.\n\ndefineMacro(\"\\\\not\", '\\\\html@mathml{\\\\mathrel{\\\\mathrlap\\\\@not}}{\\\\char\"338}'); // Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\n\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`\u2260}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`\u2209}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\"); // Unicode stacked relations\n\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\"); // Misc Unicode\n\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\u00A9\", \"\\\\copyright\");\ndefineMacro(\"\\u00AE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\"); //////////////////////////////////////////////////////////////////////\n// LaTeX_2\u03B5\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\n\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22ee\", \"\\\\vdots\"); //////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\n\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\"); //\\newcommand{\\substack}[1]{\\subarray{c}#1\\endsubarray}\n\ndefineMacro(\"\\\\substack\", \"\\\\begin{subarray}{c}#1\\\\end{subarray}\"); // \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\n\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\"); // \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\n\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\"); // \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\n\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\"); // AMSMath's automatic \\dots, based on \\mdots@@ macro.\n\nconst dotsByToken = {\n  ',': '\\\\dotsc',\n  '\\\\not': '\\\\dotsb',\n  // \\keybin@ checks for the following:\n  '+': '\\\\dotsb',\n  '=': '\\\\dotsb',\n  '<': '\\\\dotsb',\n  '>': '\\\\dotsb',\n  '-': '\\\\dotsb',\n  '*': '\\\\dotsb',\n  ':': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSB:\n  '\\\\DOTSB': '\\\\dotsb',\n  '\\\\coprod': '\\\\dotsb',\n  '\\\\bigvee': '\\\\dotsb',\n  '\\\\bigwedge': '\\\\dotsb',\n  '\\\\biguplus': '\\\\dotsb',\n  '\\\\bigcap': '\\\\dotsb',\n  '\\\\bigcup': '\\\\dotsb',\n  '\\\\prod': '\\\\dotsb',\n  '\\\\sum': '\\\\dotsb',\n  '\\\\bigotimes': '\\\\dotsb',\n  '\\\\bigoplus': '\\\\dotsb',\n  '\\\\bigodot': '\\\\dotsb',\n  '\\\\bigsqcup': '\\\\dotsb',\n  '\\\\And': '\\\\dotsb',\n  '\\\\longrightarrow': '\\\\dotsb',\n  '\\\\Longrightarrow': '\\\\dotsb',\n  '\\\\longleftarrow': '\\\\dotsb',\n  '\\\\Longleftarrow': '\\\\dotsb',\n  '\\\\longleftrightarrow': '\\\\dotsb',\n  '\\\\Longleftrightarrow': '\\\\dotsb',\n  '\\\\mapsto': '\\\\dotsb',\n  '\\\\longmapsto': '\\\\dotsb',\n  '\\\\hookrightarrow': '\\\\dotsb',\n  '\\\\doteq': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathbin:\n  '\\\\mathbin': '\\\\dotsb',\n  // Symbols whose definition starts with \\mathrel:\n  '\\\\mathrel': '\\\\dotsb',\n  '\\\\relbar': '\\\\dotsb',\n  '\\\\Relbar': '\\\\dotsb',\n  '\\\\xrightarrow': '\\\\dotsb',\n  '\\\\xleftarrow': '\\\\dotsb',\n  // Symbols whose definition starts with \\DOTSI:\n  '\\\\DOTSI': '\\\\dotsi',\n  '\\\\int': '\\\\dotsi',\n  '\\\\oint': '\\\\dotsi',\n  '\\\\iint': '\\\\dotsi',\n  '\\\\iiint': '\\\\dotsi',\n  '\\\\iiiint': '\\\\dotsi',\n  '\\\\idotsint': '\\\\dotsi',\n  // Symbols whose definition starts with \\DOTSX:\n  '\\\\DOTSX': '\\\\dotsx'\n};\ndefineMacro(\"\\\\dots\", function (context) {\n  // TODO: If used in text mode, should expand to \\textellipsis.\n  // However, in KaTeX, \\textellipsis and \\ldots behave the same\n  // (in text mode), and it's unlikely we'd see any of the math commands\n  // that affect the behavior of \\dots when in text mode.  So fine for now\n  // (until we support \\ifmmode ... \\else ... \\fi).\n  let thedots = '\\\\dotso';\n  const next = context.expandAfterFuture().text;\n\n  if (next in dotsByToken) {\n    thedots = dotsByToken[next];\n  } else if (next.substr(0, 4) === '\\\\not') {\n    thedots = '\\\\dotsb';\n  } else if (next in symbols.math) {\n    if (utils.contains(['bin', 'rel'], symbols.math[next].group)) {\n      thedots = '\\\\dotsb';\n    }\n  }\n\n  return thedots;\n});\nconst spaceAfterDots = {\n  // \\rightdelim@ checks for the following:\n  ')': true,\n  ']': true,\n  '\\\\rbrack': true,\n  '\\\\}': true,\n  '\\\\rbrace': true,\n  '\\\\rangle': true,\n  '\\\\rceil': true,\n  '\\\\rfloor': true,\n  '\\\\rgroup': true,\n  '\\\\rmoustache': true,\n  '\\\\right': true,\n  '\\\\bigr': true,\n  '\\\\biggr': true,\n  '\\\\Bigr': true,\n  '\\\\Biggr': true,\n  // \\extra@ also tests for the following:\n  '$': true,\n  // \\extrap@ checks for the following:\n  ';': true,\n  '.': true,\n  ',': true\n};\ndefineMacro(\"\\\\dotso\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\dotsc\", function (context) {\n  const next = context.future().text; // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n  // ';' and '.', but doesn't check for ','.\n\n  if (next in spaceAfterDots && next !== ',') {\n    return \"\\\\ldots\\\\,\";\n  } else {\n    return \"\\\\ldots\";\n  }\n});\ndefineMacro(\"\\\\cdots\", function (context) {\n  const next = context.future().text;\n\n  if (next in spaceAfterDots) {\n    return \"\\\\@cdots\\\\,\";\n  } else {\n    return \"\\\\@cdots\";\n  }\n});\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\"); // amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\n\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\"); // \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\n\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\"); // Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\n\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\"); // \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\"); // \\let\\thinspace\\,\n\ndefineMacro(\"\\\\thinspace\", \"\\\\,\"); // \\def\\>{\\mskip\\medmuskip}\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: \\> and math mode of \\: should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\>\", \"\\\\mskip{4mu}\");\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\"); // \\let\\medspace\\:\n\ndefineMacro(\"\\\\medspace\", \"\\\\:\"); // \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\n\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\"); // \\let\\thickspace\\;\n\ndefineMacro(\"\\\\thickspace\", \"\\\\;\"); // \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\n\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\"); // \\let\\negthinspace\\!\n\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\"); // \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\n\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\"); // \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\n\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\"); // \\def\\enspace{\\kern.5em }\n\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \"); // \\def\\enskip{\\hskip.5em\\relax}\n\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\"); // \\def\\quad{\\hskip1em\\relax}\n\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\"); // \\def\\qquad{\\hskip2em\\relax}\n\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\"); // \\tag@in@display form of \\tag\n\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", context => {\n  if (context.macros.get(\"\\\\df@tag\")) {\n    throw new ParseError(\"Multiple \\\\tag\");\n  }\n\n  return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n}); // \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\n\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\"); // \\pmb    --   A simulation of bold.\n// The version in ambsy.sty works by typesetting three copies of the argument\n// with small offsets. We use two copies. We omit the vertical offset because\n// of rendering problems that makeVList encounters in Safari.\n\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\" + \"\\\\@binrel{#1}{\\\\mathrlap{#1}\\\\kern0.5px#1}}\" + \"{\\\\mathbf{#1}}\"); //////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\n\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\"); // \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\n\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\"); // \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered in \\normalsize\n// \\scriptstyle, which has a scale factor of 0.7 (see Options.js).\n\nconst latexRaiseA = metricMap['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * metricMap['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + `L\\\\kern-.36em\\\\raisebox{${latexRaiseA}}{\\\\scriptstyle A}` + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\"); // New KaTeX logo based on tweaking LaTeX logo\n\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + `K\\\\kern-.17em\\\\raisebox{${latexRaiseA}}{\\\\scriptstyle A}` + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\"); // \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\n\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\"); //////////////////////////////////////////////////////////////////////\n// mathtools.sty\n//\\providecommand\\ordinarycolon{:}\n\ndefineMacro(\"\\\\ordinarycolon\", \":\"); //\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\n\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\"); // \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\n\ndefineMacro(\"\\\\dblcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2237}}\"); // \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2254}}\"); // \u2254\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\n\ndefineMacro(\"\\\\Coloneqq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"3d}}\"); // \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2212}}\"); // \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\n\ndefineMacro(\"\\\\Coloneq\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2212}}\"); // \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2255}}\"); // \u2255\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"3d\\\\char\\\"2237}}\"); // \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\n\ndefineMacro(\"\\\\eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}}\" + \"{\\\\mathop{\\\\char\\\"2239}}\"); // \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\n\ndefineMacro(\"\\\\Eqcolon\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}}\" + \"{\\\\mathop{\\\\char\\\"2212\\\\char\\\"2237}}\"); // \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"2248}}\"); // \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\n\ndefineMacro(\"\\\\Colonapprox\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"2248}}\"); // \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"3a\\\\char\\\"223c}}\"); // \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\n\ndefineMacro(\"\\\\Colonsim\", \"\\\\html@mathml{\" + \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}}\" + \"{\\\\mathop{\\\\char\\\"2237\\\\char\\\"223c}}\"); // Some Unicode characters are implemented with macros to mathtools functions.\n\ndefineMacro(\"\\u2237\", \"\\\\dblcolon\"); // ::\n\ndefineMacro(\"\\u2239\", \"\\\\eqcolon\"); // -:\n\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\n\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\n\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n// Alternate names for mathtools's macros:\n\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\"); // \\colonapprox name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\"); // \\colonsim name is same in mathtools and colonequals.\n\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\"); // Additional macros, implemented by analogy with mathtools definitions:\n\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\"); // Present in newtxmath, pxfonts and txfonts\n\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,sup}\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\operatorname*{lim\\\\,inf}\"); //////////////////////////////////////////////////////////////////////\n// MathML alternates for KaTeX glyphs in the Unicode private area\n\ndefineMacro(\"\\\\gvertneqq\", \"\\\\html@mathml{\\\\@gvertneqq}{\\u2269}\");\ndefineMacro(\"\\\\lvertneqq\", \"\\\\html@mathml{\\\\@lvertneqq}{\\u2268}\");\ndefineMacro(\"\\\\ngeqq\", \"\\\\html@mathml{\\\\@ngeqq}{\\u2271}\");\ndefineMacro(\"\\\\ngeqslant\", \"\\\\html@mathml{\\\\@ngeqslant}{\\u2271}\");\ndefineMacro(\"\\\\nleqq\", \"\\\\html@mathml{\\\\@nleqq}{\\u2270}\");\ndefineMacro(\"\\\\nleqslant\", \"\\\\html@mathml{\\\\@nleqslant}{\\u2270}\");\ndefineMacro(\"\\\\nshortmid\", \"\\\\html@mathml{\\\\@nshortmid}{\u2224}\");\ndefineMacro(\"\\\\nshortparallel\", \"\\\\html@mathml{\\\\@nshortparallel}{\u2226}\");\ndefineMacro(\"\\\\nsubseteqq\", \"\\\\html@mathml{\\\\@nsubseteqq}{\\u2288}\");\ndefineMacro(\"\\\\nsupseteqq\", \"\\\\html@mathml{\\\\@nsupseteqq}{\\u2289}\");\ndefineMacro(\"\\\\varsubsetneq\", \"\\\\html@mathml{\\\\@varsubsetneq}{\u228A}\");\ndefineMacro(\"\\\\varsubsetneqq\", \"\\\\html@mathml{\\\\@varsubsetneqq}{\u2ACB}\");\ndefineMacro(\"\\\\varsupsetneq\", \"\\\\html@mathml{\\\\@varsupsetneq}{\u228B}\");\ndefineMacro(\"\\\\varsupsetneqq\", \"\\\\html@mathml{\\\\@varsupsetneqq}{\u2ACC}\"); //////////////////////////////////////////////////////////////////////\n// stmaryrd and semantic\n// The stmaryrd and semantic packages render the next four items by calling a\n// glyph. Those glyphs do not exist in the KaTeX fonts. Hence the macros.\n\ndefineMacro(\"\\\\llbracket\", \"\\\\html@mathml{\" + \"\\\\mathopen{[\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u27e6}}\");\ndefineMacro(\"\\\\rrbracket\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu]}}\" + \"{\\\\mathclose{\\\\char`\\u27e7}}\");\ndefineMacro(\"\\u27e6\", \"\\\\llbracket\"); // blackboard bold [\n\ndefineMacro(\"\\u27e7\", \"\\\\rrbracket\"); // blackboard bold ]\n\ndefineMacro(\"\\\\lBrace\", \"\\\\html@mathml{\" + \"\\\\mathopen{\\\\{\\\\mkern-3.2mu[}}\" + \"{\\\\mathopen{\\\\char`\\u2983}}\");\ndefineMacro(\"\\\\rBrace\", \"\\\\html@mathml{\" + \"\\\\mathclose{]\\\\mkern-3.2mu\\\\}}}\" + \"{\\\\mathclose{\\\\char`\\u2984}}\");\ndefineMacro(\"\\u2983\", \"\\\\lBrace\"); // blackboard bold {\n\ndefineMacro(\"\\u2984\", \"\\\\rBrace\"); // blackboard bold }\n// TODO: Create variable sized versions of the last two items. I believe that\n// will require new font glyphs.\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{P}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\"); // TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\n\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\"); //////////////////////////////////////////////////////////////////////\n// statmath.sty\n// https://ctan.math.illinois.edu/macros/latex/contrib/statmath/statmath.pdf\n\ndefineMacro(\"\\\\argmin\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,min}\");\ndefineMacro(\"\\\\argmax\", \"\\\\DOTSB\\\\operatorname*{arg\\\\,max}\");\ndefineMacro(\"\\\\plim\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{plim}}\\\\limits\"); // Custom Khan Academy colors, should be moved to an optional package\n\ndefineMacro(\"\\\\blue\", \"\\\\textcolor{##6495ed}{#1}\");\ndefineMacro(\"\\\\orange\", \"\\\\textcolor{##ffa500}{#1}\");\ndefineMacro(\"\\\\pink\", \"\\\\textcolor{##ff00af}{#1}\");\ndefineMacro(\"\\\\red\", \"\\\\textcolor{##df0030}{#1}\");\ndefineMacro(\"\\\\green\", \"\\\\textcolor{##28ae7b}{#1}\");\ndefineMacro(\"\\\\gray\", \"\\\\textcolor{gray}{#1}\");\ndefineMacro(\"\\\\purple\", \"\\\\textcolor{##9d38bd}{#1}\");\ndefineMacro(\"\\\\blueA\", \"\\\\textcolor{##ccfaff}{#1}\");\ndefineMacro(\"\\\\blueB\", \"\\\\textcolor{##80f6ff}{#1}\");\ndefineMacro(\"\\\\blueC\", \"\\\\textcolor{##63d9ea}{#1}\");\ndefineMacro(\"\\\\blueD\", \"\\\\textcolor{##11accd}{#1}\");\ndefineMacro(\"\\\\blueE\", \"\\\\textcolor{##0c7f99}{#1}\");\ndefineMacro(\"\\\\tealA\", \"\\\\textcolor{##94fff5}{#1}\");\ndefineMacro(\"\\\\tealB\", \"\\\\textcolor{##26edd5}{#1}\");\ndefineMacro(\"\\\\tealC\", \"\\\\textcolor{##01d1c1}{#1}\");\ndefineMacro(\"\\\\tealD\", \"\\\\textcolor{##01a995}{#1}\");\ndefineMacro(\"\\\\tealE\", \"\\\\textcolor{##208170}{#1}\");\ndefineMacro(\"\\\\greenA\", \"\\\\textcolor{##b6ffb0}{#1}\");\ndefineMacro(\"\\\\greenB\", \"\\\\textcolor{##8af281}{#1}\");\ndefineMacro(\"\\\\greenC\", \"\\\\textcolor{##74cf70}{#1}\");\ndefineMacro(\"\\\\greenD\", \"\\\\textcolor{##1fab54}{#1}\");\ndefineMacro(\"\\\\greenE\", \"\\\\textcolor{##0d923f}{#1}\");\ndefineMacro(\"\\\\goldA\", \"\\\\textcolor{##ffd0a9}{#1}\");\ndefineMacro(\"\\\\goldB\", \"\\\\textcolor{##ffbb71}{#1}\");\ndefineMacro(\"\\\\goldC\", \"\\\\textcolor{##ff9c39}{#1}\");\ndefineMacro(\"\\\\goldD\", \"\\\\textcolor{##e07d10}{#1}\");\ndefineMacro(\"\\\\goldE\", \"\\\\textcolor{##a75a05}{#1}\");\ndefineMacro(\"\\\\redA\", \"\\\\textcolor{##fca9a9}{#1}\");\ndefineMacro(\"\\\\redB\", \"\\\\textcolor{##ff8482}{#1}\");\ndefineMacro(\"\\\\redC\", \"\\\\textcolor{##f9685d}{#1}\");\ndefineMacro(\"\\\\redD\", \"\\\\textcolor{##e84d39}{#1}\");\ndefineMacro(\"\\\\redE\", \"\\\\textcolor{##bc2612}{#1}\");\ndefineMacro(\"\\\\maroonA\", \"\\\\textcolor{##ffbde0}{#1}\");\ndefineMacro(\"\\\\maroonB\", \"\\\\textcolor{##ff92c6}{#1}\");\ndefineMacro(\"\\\\maroonC\", \"\\\\textcolor{##ed5fa6}{#1}\");\ndefineMacro(\"\\\\maroonD\", \"\\\\textcolor{##ca337c}{#1}\");\ndefineMacro(\"\\\\maroonE\", \"\\\\textcolor{##9e034e}{#1}\");\ndefineMacro(\"\\\\purpleA\", \"\\\\textcolor{##ddd7ff}{#1}\");\ndefineMacro(\"\\\\purpleB\", \"\\\\textcolor{##c6b9fc}{#1}\");\ndefineMacro(\"\\\\purpleC\", \"\\\\textcolor{##aa87ff}{#1}\");\ndefineMacro(\"\\\\purpleD\", \"\\\\textcolor{##7854ab}{#1}\");\ndefineMacro(\"\\\\purpleE\", \"\\\\textcolor{##543b78}{#1}\");\ndefineMacro(\"\\\\mintA\", \"\\\\textcolor{##f5f9e8}{#1}\");\ndefineMacro(\"\\\\mintB\", \"\\\\textcolor{##edf2df}{#1}\");\ndefineMacro(\"\\\\mintC\", \"\\\\textcolor{##e0e5cc}{#1}\");\ndefineMacro(\"\\\\grayA\", \"\\\\textcolor{##f6f7f7}{#1}\");\ndefineMacro(\"\\\\grayB\", \"\\\\textcolor{##f0f1f2}{#1}\");\ndefineMacro(\"\\\\grayC\", \"\\\\textcolor{##e3e5e6}{#1}\");\ndefineMacro(\"\\\\grayD\", \"\\\\textcolor{##d6d8da}{#1}\");\ndefineMacro(\"\\\\grayE\", \"\\\\textcolor{##babec2}{#1}\");\ndefineMacro(\"\\\\grayF\", \"\\\\textcolor{##888d93}{#1}\");\ndefineMacro(\"\\\\grayG\", \"\\\\textcolor{##626569}{#1}\");\ndefineMacro(\"\\\\grayH\", \"\\\\textcolor{##3b3e40}{#1}\");\ndefineMacro(\"\\\\grayI\", \"\\\\textcolor{##21242c}{#1}\");\ndefineMacro(\"\\\\kaBlue\", \"\\\\textcolor{##314453}{#1}\");\ndefineMacro(\"\\\\kaGreen\", \"\\\\textcolor{##71B307}{#1}\");\n\n/**\n * This file contains the \u201Cgullet\u201D where macros are expanded\n * until only non-macro tokens remain.\n */\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nconst implicitCommands = {\n  \"\\\\relax\": true,\n  // MacroExpander.js\n  \"^\": true,\n  // Parser.js\n  \"_\": true,\n  // Parser.js\n  \"\\\\limits\": true,\n  // Parser.js\n  \"\\\\nolimits\": true // Parser.js\n\n};\nclass MacroExpander {\n  constructor(input, settings, mode) {\n    this.settings = void 0;\n    this.expansionCount = void 0;\n    this.lexer = void 0;\n    this.macros = void 0;\n    this.stack = void 0;\n    this.mode = void 0;\n    this.settings = settings;\n    this.expansionCount = 0;\n    this.feed(input); // Make new global namespace\n\n    this.macros = new Namespace(builtinMacros, settings.macros);\n    this.mode = mode;\n    this.stack = []; // contains tokens in REVERSE order\n  }\n  /**\n   * Feed a new input string to the same MacroExpander\n   * (with existing macros etc.).\n   */\n\n\n  feed(input) {\n    this.lexer = new Lexer(input, this.settings);\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n  }\n  /**\n   * Start a new group nesting within all namespaces.\n   */\n\n\n  beginGroup() {\n    this.macros.beginGroup();\n  }\n  /**\n   * End current group nesting within all namespaces.\n   */\n\n\n  endGroup() {\n    this.macros.endGroup();\n  }\n  /**\n   * Returns the topmost token on the stack, without expanding it.\n   * Similar in behavior to TeX's `\\futurelet`.\n   */\n\n\n  future() {\n    if (this.stack.length === 0) {\n      this.pushToken(this.lexer.lex());\n    }\n\n    return this.stack[this.stack.length - 1];\n  }\n  /**\n   * Remove and return the next unexpanded token.\n   */\n\n\n  popToken() {\n    this.future(); // ensure non-empty stack\n\n    return this.stack.pop();\n  }\n  /**\n   * Add a given token to the token stack.  In particular, this get be used\n   * to put back a token returned from one of the other methods.\n   */\n\n\n  pushToken(token) {\n    this.stack.push(token);\n  }\n  /**\n   * Append an array of tokens to the token stack.\n   */\n\n\n  pushTokens(tokens) {\n    this.stack.push(...tokens);\n  }\n  /**\n   * Consume all following space tokens, without expansion.\n   */\n\n\n  consumeSpaces() {\n    for (;;) {\n      const token = this.future();\n\n      if (token.text === \" \") {\n        this.stack.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Consume the specified number of arguments from the token stream,\n   * and return the resulting array of arguments.\n   */\n\n\n  consumeArgs(numArgs) {\n    const args = []; // obtain arguments, either single token or balanced {\u2026} group\n\n    for (let i = 0; i < numArgs; ++i) {\n      this.consumeSpaces(); // ignore spaces before each argument\n\n      const startOfArg = this.popToken();\n\n      if (startOfArg.text === \"{\") {\n        const arg = [];\n        let depth = 1;\n\n        while (depth !== 0) {\n          const tok = this.popToken();\n          arg.push(tok);\n\n          if (tok.text === \"{\") {\n            ++depth;\n          } else if (tok.text === \"}\") {\n            --depth;\n          } else if (tok.text === \"EOF\") {\n            throw new ParseError(\"End of input in macro argument\", startOfArg);\n          }\n        }\n\n        arg.pop(); // remove last }\n\n        arg.reverse(); // like above, to fit in with stack order\n\n        args[i] = arg;\n      } else if (startOfArg.text === \"EOF\") {\n        throw new ParseError(\"End of input expecting macro argument\");\n      } else {\n        args[i] = [startOfArg];\n      }\n    }\n\n    return args;\n  }\n  /**\n   * Expand the next token only once if possible.\n   *\n   * If the token is expanded, the resulting tokens will be pushed onto\n   * the stack in reverse order and will be returned as an array,\n   * also in reverse order.\n   *\n   * If not, the next token will be returned without removing it\n   * from the stack.  This case can be detected by a `Token` return value\n   * instead of an `Array` return value.\n   *\n   * In either case, the next token will be on the top of the stack,\n   * or the stack will be empty.\n   *\n   * Used to implement `expandAfterFuture` and `expandNextToken`.\n   *\n   * At the moment, macro expansion doesn't handle delimited macros,\n   * i.e. things like those defined by \\def\\foo#1\\end{\u2026}.\n   * See the TeX book page 202ff. for details on how those should behave.\n   */\n\n\n  expandOnce() {\n    const topToken = this.popToken();\n    const name = topToken.text;\n\n    const expansion = this._getExpansion(name);\n\n    if (expansion == null) {\n      // mainly checking for undefined here\n      // Fully expanded\n      this.pushToken(topToken);\n      return topToken;\n    }\n\n    this.expansionCount++;\n\n    if (this.expansionCount > this.settings.maxExpand) {\n      throw new ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n    }\n\n    let tokens = expansion.tokens;\n\n    if (expansion.numArgs) {\n      const args = this.consumeArgs(expansion.numArgs); // paste arguments in place of the placeholders\n\n      tokens = tokens.slice(); // make a shallow copy\n\n      for (let i = tokens.length - 1; i >= 0; --i) {\n        let tok = tokens[i];\n\n        if (tok.text === \"#\") {\n          if (i === 0) {\n            throw new ParseError(\"Incomplete placeholder at end of macro body\", tok);\n          }\n\n          tok = tokens[--i]; // next token on stack\n\n          if (tok.text === \"#\") {\n            // ## \u2192 #\n            tokens.splice(i + 1, 1); // drop first #\n          } else if (/^[1-9]$/.test(tok.text)) {\n            // replace the placeholder with the indicated argument\n            tokens.splice(i, 2, ...args[+tok.text - 1]);\n          } else {\n            throw new ParseError(\"Not a valid argument number\", tok);\n          }\n        }\n      }\n    } // Concatenate expansion onto top of stack.\n\n\n    this.pushTokens(tokens);\n    return tokens;\n  }\n  /**\n   * Expand the next token only once (if possible), and return the resulting\n   * top token on the stack (without removing anything from the stack).\n   * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n   * Equivalent to expandOnce() followed by future().\n   */\n\n\n  expandAfterFuture() {\n    this.expandOnce();\n    return this.future();\n  }\n  /**\n   * Recursively expand first token, then return first non-expandable token.\n   */\n\n\n  expandNextToken() {\n    for (;;) {\n      const expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        // \\relax stops the expansion, but shouldn't get returned (a\n        // null return value couldn't get implemented as a function).\n        if (expanded.text === \"\\\\relax\") {\n          this.stack.pop();\n        } else {\n          return this.stack.pop(); // === expanded\n        }\n      }\n    } // Flow unable to figure out that this pathway is impossible.\n    // https://github.com/facebook/flow/issues/4808\n\n\n    throw new Error(); // eslint-disable-line no-unreachable\n  }\n  /**\n   * Fully expand the given macro name and return the resulting list of\n   * tokens, or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacro(name) {\n    if (!this.macros.get(name)) {\n      return undefined;\n    }\n\n    const output = [];\n    const oldStackLength = this.stack.length;\n    this.pushToken(new Token(name));\n\n    while (this.stack.length > oldStackLength) {\n      const expanded = this.expandOnce(); // expandOnce returns Token if and only if it's fully expanded.\n\n      if (expanded instanceof Token) {\n        output.push(this.stack.pop());\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Fully expand the given macro name and return the result as a string,\n   * or return `undefined` if no such macro is defined.\n   */\n\n\n  expandMacroAsText(name) {\n    const tokens = this.expandMacro(name);\n\n    if (tokens) {\n      return tokens.map(token => token.text).join(\"\");\n    } else {\n      return tokens;\n    }\n  }\n  /**\n   * Returns the expanded macro as a reversed array of tokens and a macro\n   * argument count.  Or returns `null` if no such macro.\n   */\n\n\n  _getExpansion(name) {\n    const definition = this.macros.get(name);\n\n    if (definition == null) {\n      // mainly checking for undefined here\n      return definition;\n    }\n\n    const expansion = typeof definition === \"function\" ? definition(this) : definition;\n\n    if (typeof expansion === \"string\") {\n      let numArgs = 0;\n\n      if (expansion.indexOf(\"#\") !== -1) {\n        const stripped = expansion.replace(/##/g, \"\");\n\n        while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n          ++numArgs;\n        }\n      }\n\n      const bodyLexer = new Lexer(expansion, this.settings);\n      const tokens = [];\n      let tok = bodyLexer.lex();\n\n      while (tok.text !== \"EOF\") {\n        tokens.push(tok);\n        tok = bodyLexer.lex();\n      }\n\n      tokens.reverse(); // to fit in with stack using push and pop\n\n      const expanded = {\n        tokens,\n        numArgs\n      };\n      return expanded;\n    }\n\n    return expansion;\n  }\n  /**\n   * Determine whether a command is currently \"defined\" (has some\n   * functionality), meaning that it's a macro (in the current group),\n   * a function, a symbol, or one of the special commands listed in\n   * `implicitCommands`.\n   */\n\n\n  isDefined(name) {\n    return this.macros.has(name) || functions.hasOwnProperty(name) || symbols.math.hasOwnProperty(name) || symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n  }\n\n}\n\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\nvar unicodeAccents = {\n  '\\u0301': {\n    text: \"\\\\'\",\n    math: '\\\\acute'\n  },\n  '\\u0300': {\n    text: '\\\\`',\n    math: '\\\\grave'\n  },\n  '\\u0308': {\n    text: '\\\\\"',\n    math: '\\\\ddot'\n  },\n  '\\u0303': {\n    text: '\\\\~',\n    math: '\\\\tilde'\n  },\n  '\\u0304': {\n    text: '\\\\=',\n    math: '\\\\bar'\n  },\n  '\\u0306': {\n    text: '\\\\u',\n    math: '\\\\breve'\n  },\n  '\\u030c': {\n    text: '\\\\v',\n    math: '\\\\check'\n  },\n  '\\u0302': {\n    text: '\\\\^',\n    math: '\\\\hat'\n  },\n  '\\u0307': {\n    text: '\\\\.',\n    math: '\\\\dot'\n  },\n  '\\u030a': {\n    text: '\\\\r',\n    math: '\\\\mathring'\n  },\n  '\\u030b': {\n    text: '\\\\H'\n  }\n};\n\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\nvar unicodeSymbols = {\n  \"\\u00e1\": \"\\u0061\\u0301\",\n  // \u00E1 = \\'{a}\n  \"\\u00e0\": \"\\u0061\\u0300\",\n  // \u00E0 = \\`{a}\n  \"\\u00e4\": \"\\u0061\\u0308\",\n  // \u00E4 = \\\"{a}\n  \"\\u01df\": \"\\u0061\\u0308\\u0304\",\n  // \u01DF = \\\"\\={a}\n  \"\\u00e3\": \"\\u0061\\u0303\",\n  // \u00E3 = \\~{a}\n  \"\\u0101\": \"\\u0061\\u0304\",\n  // \u0101 = \\={a}\n  \"\\u0103\": \"\\u0061\\u0306\",\n  // \u0103 = \\u{a}\n  \"\\u1eaf\": \"\\u0061\\u0306\\u0301\",\n  // \u1EAF = \\u\\'{a}\n  \"\\u1eb1\": \"\\u0061\\u0306\\u0300\",\n  // \u1EB1 = \\u\\`{a}\n  \"\\u1eb5\": \"\\u0061\\u0306\\u0303\",\n  // \u1EB5 = \\u\\~{a}\n  \"\\u01ce\": \"\\u0061\\u030c\",\n  // \u01CE = \\v{a}\n  \"\\u00e2\": \"\\u0061\\u0302\",\n  // \u00E2 = \\^{a}\n  \"\\u1ea5\": \"\\u0061\\u0302\\u0301\",\n  // \u1EA5 = \\^\\'{a}\n  \"\\u1ea7\": \"\\u0061\\u0302\\u0300\",\n  // \u1EA7 = \\^\\`{a}\n  \"\\u1eab\": \"\\u0061\\u0302\\u0303\",\n  // \u1EAB = \\^\\~{a}\n  \"\\u0227\": \"\\u0061\\u0307\",\n  // \u0227 = \\.{a}\n  \"\\u01e1\": \"\\u0061\\u0307\\u0304\",\n  // \u01E1 = \\.\\={a}\n  \"\\u00e5\": \"\\u0061\\u030a\",\n  // \u00E5 = \\r{a}\n  \"\\u01fb\": \"\\u0061\\u030a\\u0301\",\n  // \u01FB = \\r\\'{a}\n  \"\\u1e03\": \"\\u0062\\u0307\",\n  // \u1E03 = \\.{b}\n  \"\\u0107\": \"\\u0063\\u0301\",\n  // \u0107 = \\'{c}\n  \"\\u010d\": \"\\u0063\\u030c\",\n  // \u010D = \\v{c}\n  \"\\u0109\": \"\\u0063\\u0302\",\n  // \u0109 = \\^{c}\n  \"\\u010b\": \"\\u0063\\u0307\",\n  // \u010B = \\.{c}\n  \"\\u010f\": \"\\u0064\\u030c\",\n  // \u010F = \\v{d}\n  \"\\u1e0b\": \"\\u0064\\u0307\",\n  // \u1E0B = \\.{d}\n  \"\\u00e9\": \"\\u0065\\u0301\",\n  // \u00E9 = \\'{e}\n  \"\\u00e8\": \"\\u0065\\u0300\",\n  // \u00E8 = \\`{e}\n  \"\\u00eb\": \"\\u0065\\u0308\",\n  // \u00EB = \\\"{e}\n  \"\\u1ebd\": \"\\u0065\\u0303\",\n  // \u1EBD = \\~{e}\n  \"\\u0113\": \"\\u0065\\u0304\",\n  // \u0113 = \\={e}\n  \"\\u1e17\": \"\\u0065\\u0304\\u0301\",\n  // \u1E17 = \\=\\'{e}\n  \"\\u1e15\": \"\\u0065\\u0304\\u0300\",\n  // \u1E15 = \\=\\`{e}\n  \"\\u0115\": \"\\u0065\\u0306\",\n  // \u0115 = \\u{e}\n  \"\\u011b\": \"\\u0065\\u030c\",\n  // \u011B = \\v{e}\n  \"\\u00ea\": \"\\u0065\\u0302\",\n  // \u00EA = \\^{e}\n  \"\\u1ebf\": \"\\u0065\\u0302\\u0301\",\n  // \u1EBF = \\^\\'{e}\n  \"\\u1ec1\": \"\\u0065\\u0302\\u0300\",\n  // \u1EC1 = \\^\\`{e}\n  \"\\u1ec5\": \"\\u0065\\u0302\\u0303\",\n  // \u1EC5 = \\^\\~{e}\n  \"\\u0117\": \"\\u0065\\u0307\",\n  // \u0117 = \\.{e}\n  \"\\u1e1f\": \"\\u0066\\u0307\",\n  // \u1E1F = \\.{f}\n  \"\\u01f5\": \"\\u0067\\u0301\",\n  // \u01F5 = \\'{g}\n  \"\\u1e21\": \"\\u0067\\u0304\",\n  // \u1E21 = \\={g}\n  \"\\u011f\": \"\\u0067\\u0306\",\n  // \u011F = \\u{g}\n  \"\\u01e7\": \"\\u0067\\u030c\",\n  // \u01E7 = \\v{g}\n  \"\\u011d\": \"\\u0067\\u0302\",\n  // \u011D = \\^{g}\n  \"\\u0121\": \"\\u0067\\u0307\",\n  // \u0121 = \\.{g}\n  \"\\u1e27\": \"\\u0068\\u0308\",\n  // \u1E27 = \\\"{h}\n  \"\\u021f\": \"\\u0068\\u030c\",\n  // \u021F = \\v{h}\n  \"\\u0125\": \"\\u0068\\u0302\",\n  // \u0125 = \\^{h}\n  \"\\u1e23\": \"\\u0068\\u0307\",\n  // \u1E23 = \\.{h}\n  \"\\u00ed\": \"\\u0069\\u0301\",\n  // \u00ED = \\'{i}\n  \"\\u00ec\": \"\\u0069\\u0300\",\n  // \u00EC = \\`{i}\n  \"\\u00ef\": \"\\u0069\\u0308\",\n  // \u00EF = \\\"{i}\n  \"\\u1e2f\": \"\\u0069\\u0308\\u0301\",\n  // \u1E2F = \\\"\\'{i}\n  \"\\u0129\": \"\\u0069\\u0303\",\n  // \u0129 = \\~{i}\n  \"\\u012b\": \"\\u0069\\u0304\",\n  // \u012B = \\={i}\n  \"\\u012d\": \"\\u0069\\u0306\",\n  // \u012D = \\u{i}\n  \"\\u01d0\": \"\\u0069\\u030c\",\n  // \u01D0 = \\v{i}\n  \"\\u00ee\": \"\\u0069\\u0302\",\n  // \u00EE = \\^{i}\n  \"\\u01f0\": \"\\u006a\\u030c\",\n  // \u01F0 = \\v{j}\n  \"\\u0135\": \"\\u006a\\u0302\",\n  // \u0135 = \\^{j}\n  \"\\u1e31\": \"\\u006b\\u0301\",\n  // \u1E31 = \\'{k}\n  \"\\u01e9\": \"\\u006b\\u030c\",\n  // \u01E9 = \\v{k}\n  \"\\u013a\": \"\\u006c\\u0301\",\n  // \u013A = \\'{l}\n  \"\\u013e\": \"\\u006c\\u030c\",\n  // \u013E = \\v{l}\n  \"\\u1e3f\": \"\\u006d\\u0301\",\n  // \u1E3F = \\'{m}\n  \"\\u1e41\": \"\\u006d\\u0307\",\n  // \u1E41 = \\.{m}\n  \"\\u0144\": \"\\u006e\\u0301\",\n  // \u0144 = \\'{n}\n  \"\\u01f9\": \"\\u006e\\u0300\",\n  // \u01F9 = \\`{n}\n  \"\\u00f1\": \"\\u006e\\u0303\",\n  // \u00F1 = \\~{n}\n  \"\\u0148\": \"\\u006e\\u030c\",\n  // \u0148 = \\v{n}\n  \"\\u1e45\": \"\\u006e\\u0307\",\n  // \u1E45 = \\.{n}\n  \"\\u00f3\": \"\\u006f\\u0301\",\n  // \u00F3 = \\'{o}\n  \"\\u00f2\": \"\\u006f\\u0300\",\n  // \u00F2 = \\`{o}\n  \"\\u00f6\": \"\\u006f\\u0308\",\n  // \u00F6 = \\\"{o}\n  \"\\u022b\": \"\\u006f\\u0308\\u0304\",\n  // \u022B = \\\"\\={o}\n  \"\\u00f5\": \"\\u006f\\u0303\",\n  // \u00F5 = \\~{o}\n  \"\\u1e4d\": \"\\u006f\\u0303\\u0301\",\n  // \u1E4D = \\~\\'{o}\n  \"\\u1e4f\": \"\\u006f\\u0303\\u0308\",\n  // \u1E4F = \\~\\\"{o}\n  \"\\u022d\": \"\\u006f\\u0303\\u0304\",\n  // \u022D = \\~\\={o}\n  \"\\u014d\": \"\\u006f\\u0304\",\n  // \u014D = \\={o}\n  \"\\u1e53\": \"\\u006f\\u0304\\u0301\",\n  // \u1E53 = \\=\\'{o}\n  \"\\u1e51\": \"\\u006f\\u0304\\u0300\",\n  // \u1E51 = \\=\\`{o}\n  \"\\u014f\": \"\\u006f\\u0306\",\n  // \u014F = \\u{o}\n  \"\\u01d2\": \"\\u006f\\u030c\",\n  // \u01D2 = \\v{o}\n  \"\\u00f4\": \"\\u006f\\u0302\",\n  // \u00F4 = \\^{o}\n  \"\\u1ed1\": \"\\u006f\\u0302\\u0301\",\n  // \u1ED1 = \\^\\'{o}\n  \"\\u1ed3\": \"\\u006f\\u0302\\u0300\",\n  // \u1ED3 = \\^\\`{o}\n  \"\\u1ed7\": \"\\u006f\\u0302\\u0303\",\n  // \u1ED7 = \\^\\~{o}\n  \"\\u022f\": \"\\u006f\\u0307\",\n  // \u022F = \\.{o}\n  \"\\u0231\": \"\\u006f\\u0307\\u0304\",\n  // \u0231 = \\.\\={o}\n  \"\\u0151\": \"\\u006f\\u030b\",\n  // \u0151 = \\H{o}\n  \"\\u1e55\": \"\\u0070\\u0301\",\n  // \u1E55 = \\'{p}\n  \"\\u1e57\": \"\\u0070\\u0307\",\n  // \u1E57 = \\.{p}\n  \"\\u0155\": \"\\u0072\\u0301\",\n  // \u0155 = \\'{r}\n  \"\\u0159\": \"\\u0072\\u030c\",\n  // \u0159 = \\v{r}\n  \"\\u1e59\": \"\\u0072\\u0307\",\n  // \u1E59 = \\.{r}\n  \"\\u015b\": \"\\u0073\\u0301\",\n  // \u015B = \\'{s}\n  \"\\u1e65\": \"\\u0073\\u0301\\u0307\",\n  // \u1E65 = \\'\\.{s}\n  \"\\u0161\": \"\\u0073\\u030c\",\n  // \u0161 = \\v{s}\n  \"\\u1e67\": \"\\u0073\\u030c\\u0307\",\n  // \u1E67 = \\v\\.{s}\n  \"\\u015d\": \"\\u0073\\u0302\",\n  // \u015D = \\^{s}\n  \"\\u1e61\": \"\\u0073\\u0307\",\n  // \u1E61 = \\.{s}\n  \"\\u1e97\": \"\\u0074\\u0308\",\n  // \u1E97 = \\\"{t}\n  \"\\u0165\": \"\\u0074\\u030c\",\n  // \u0165 = \\v{t}\n  \"\\u1e6b\": \"\\u0074\\u0307\",\n  // \u1E6B = \\.{t}\n  \"\\u00fa\": \"\\u0075\\u0301\",\n  // \u00FA = \\'{u}\n  \"\\u00f9\": \"\\u0075\\u0300\",\n  // \u00F9 = \\`{u}\n  \"\\u00fc\": \"\\u0075\\u0308\",\n  // \u00FC = \\\"{u}\n  \"\\u01d8\": \"\\u0075\\u0308\\u0301\",\n  // \u01D8 = \\\"\\'{u}\n  \"\\u01dc\": \"\\u0075\\u0308\\u0300\",\n  // \u01DC = \\\"\\`{u}\n  \"\\u01d6\": \"\\u0075\\u0308\\u0304\",\n  // \u01D6 = \\\"\\={u}\n  \"\\u01da\": \"\\u0075\\u0308\\u030c\",\n  // \u01DA = \\\"\\v{u}\n  \"\\u0169\": \"\\u0075\\u0303\",\n  // \u0169 = \\~{u}\n  \"\\u1e79\": \"\\u0075\\u0303\\u0301\",\n  // \u1E79 = \\~\\'{u}\n  \"\\u016b\": \"\\u0075\\u0304\",\n  // \u016B = \\={u}\n  \"\\u1e7b\": \"\\u0075\\u0304\\u0308\",\n  // \u1E7B = \\=\\\"{u}\n  \"\\u016d\": \"\\u0075\\u0306\",\n  // \u016D = \\u{u}\n  \"\\u01d4\": \"\\u0075\\u030c\",\n  // \u01D4 = \\v{u}\n  \"\\u00fb\": \"\\u0075\\u0302\",\n  // \u00FB = \\^{u}\n  \"\\u016f\": \"\\u0075\\u030a\",\n  // \u016F = \\r{u}\n  \"\\u0171\": \"\\u0075\\u030b\",\n  // \u0171 = \\H{u}\n  \"\\u1e7d\": \"\\u0076\\u0303\",\n  // \u1E7D = \\~{v}\n  \"\\u1e83\": \"\\u0077\\u0301\",\n  // \u1E83 = \\'{w}\n  \"\\u1e81\": \"\\u0077\\u0300\",\n  // \u1E81 = \\`{w}\n  \"\\u1e85\": \"\\u0077\\u0308\",\n  // \u1E85 = \\\"{w}\n  \"\\u0175\": \"\\u0077\\u0302\",\n  // \u0175 = \\^{w}\n  \"\\u1e87\": \"\\u0077\\u0307\",\n  // \u1E87 = \\.{w}\n  \"\\u1e98\": \"\\u0077\\u030a\",\n  // \u1E98 = \\r{w}\n  \"\\u1e8d\": \"\\u0078\\u0308\",\n  // \u1E8D = \\\"{x}\n  \"\\u1e8b\": \"\\u0078\\u0307\",\n  // \u1E8B = \\.{x}\n  \"\\u00fd\": \"\\u0079\\u0301\",\n  // \u00FD = \\'{y}\n  \"\\u1ef3\": \"\\u0079\\u0300\",\n  // \u1EF3 = \\`{y}\n  \"\\u00ff\": \"\\u0079\\u0308\",\n  // \u00FF = \\\"{y}\n  \"\\u1ef9\": \"\\u0079\\u0303\",\n  // \u1EF9 = \\~{y}\n  \"\\u0233\": \"\\u0079\\u0304\",\n  // \u0233 = \\={y}\n  \"\\u0177\": \"\\u0079\\u0302\",\n  // \u0177 = \\^{y}\n  \"\\u1e8f\": \"\\u0079\\u0307\",\n  // \u1E8F = \\.{y}\n  \"\\u1e99\": \"\\u0079\\u030a\",\n  // \u1E99 = \\r{y}\n  \"\\u017a\": \"\\u007a\\u0301\",\n  // \u017A = \\'{z}\n  \"\\u017e\": \"\\u007a\\u030c\",\n  // \u017E = \\v{z}\n  \"\\u1e91\": \"\\u007a\\u0302\",\n  // \u1E91 = \\^{z}\n  \"\\u017c\": \"\\u007a\\u0307\",\n  // \u017C = \\.{z}\n  \"\\u00c1\": \"\\u0041\\u0301\",\n  // \u00C1 = \\'{A}\n  \"\\u00c0\": \"\\u0041\\u0300\",\n  // \u00C0 = \\`{A}\n  \"\\u00c4\": \"\\u0041\\u0308\",\n  // \u00C4 = \\\"{A}\n  \"\\u01de\": \"\\u0041\\u0308\\u0304\",\n  // \u01DE = \\\"\\={A}\n  \"\\u00c3\": \"\\u0041\\u0303\",\n  // \u00C3 = \\~{A}\n  \"\\u0100\": \"\\u0041\\u0304\",\n  // \u0100 = \\={A}\n  \"\\u0102\": \"\\u0041\\u0306\",\n  // \u0102 = \\u{A}\n  \"\\u1eae\": \"\\u0041\\u0306\\u0301\",\n  // \u1EAE = \\u\\'{A}\n  \"\\u1eb0\": \"\\u0041\\u0306\\u0300\",\n  // \u1EB0 = \\u\\`{A}\n  \"\\u1eb4\": \"\\u0041\\u0306\\u0303\",\n  // \u1EB4 = \\u\\~{A}\n  \"\\u01cd\": \"\\u0041\\u030c\",\n  // \u01CD = \\v{A}\n  \"\\u00c2\": \"\\u0041\\u0302\",\n  // \u00C2 = \\^{A}\n  \"\\u1ea4\": \"\\u0041\\u0302\\u0301\",\n  // \u1EA4 = \\^\\'{A}\n  \"\\u1ea6\": \"\\u0041\\u0302\\u0300\",\n  // \u1EA6 = \\^\\`{A}\n  \"\\u1eaa\": \"\\u0041\\u0302\\u0303\",\n  // \u1EAA = \\^\\~{A}\n  \"\\u0226\": \"\\u0041\\u0307\",\n  // \u0226 = \\.{A}\n  \"\\u01e0\": \"\\u0041\\u0307\\u0304\",\n  // \u01E0 = \\.\\={A}\n  \"\\u00c5\": \"\\u0041\\u030a\",\n  // \u00C5 = \\r{A}\n  \"\\u01fa\": \"\\u0041\\u030a\\u0301\",\n  // \u01FA = \\r\\'{A}\n  \"\\u1e02\": \"\\u0042\\u0307\",\n  // \u1E02 = \\.{B}\n  \"\\u0106\": \"\\u0043\\u0301\",\n  // \u0106 = \\'{C}\n  \"\\u010c\": \"\\u0043\\u030c\",\n  // \u010C = \\v{C}\n  \"\\u0108\": \"\\u0043\\u0302\",\n  // \u0108 = \\^{C}\n  \"\\u010a\": \"\\u0043\\u0307\",\n  // \u010A = \\.{C}\n  \"\\u010e\": \"\\u0044\\u030c\",\n  // \u010E = \\v{D}\n  \"\\u1e0a\": \"\\u0044\\u0307\",\n  // \u1E0A = \\.{D}\n  \"\\u00c9\": \"\\u0045\\u0301\",\n  // \u00C9 = \\'{E}\n  \"\\u00c8\": \"\\u0045\\u0300\",\n  // \u00C8 = \\`{E}\n  \"\\u00cb\": \"\\u0045\\u0308\",\n  // \u00CB = \\\"{E}\n  \"\\u1ebc\": \"\\u0045\\u0303\",\n  // \u1EBC = \\~{E}\n  \"\\u0112\": \"\\u0045\\u0304\",\n  // \u0112 = \\={E}\n  \"\\u1e16\": \"\\u0045\\u0304\\u0301\",\n  // \u1E16 = \\=\\'{E}\n  \"\\u1e14\": \"\\u0045\\u0304\\u0300\",\n  // \u1E14 = \\=\\`{E}\n  \"\\u0114\": \"\\u0045\\u0306\",\n  // \u0114 = \\u{E}\n  \"\\u011a\": \"\\u0045\\u030c\",\n  // \u011A = \\v{E}\n  \"\\u00ca\": \"\\u0045\\u0302\",\n  // \u00CA = \\^{E}\n  \"\\u1ebe\": \"\\u0045\\u0302\\u0301\",\n  // \u1EBE = \\^\\'{E}\n  \"\\u1ec0\": \"\\u0045\\u0302\\u0300\",\n  // \u1EC0 = \\^\\`{E}\n  \"\\u1ec4\": \"\\u0045\\u0302\\u0303\",\n  // \u1EC4 = \\^\\~{E}\n  \"\\u0116\": \"\\u0045\\u0307\",\n  // \u0116 = \\.{E}\n  \"\\u1e1e\": \"\\u0046\\u0307\",\n  // \u1E1E = \\.{F}\n  \"\\u01f4\": \"\\u0047\\u0301\",\n  // \u01F4 = \\'{G}\n  \"\\u1e20\": \"\\u0047\\u0304\",\n  // \u1E20 = \\={G}\n  \"\\u011e\": \"\\u0047\\u0306\",\n  // \u011E = \\u{G}\n  \"\\u01e6\": \"\\u0047\\u030c\",\n  // \u01E6 = \\v{G}\n  \"\\u011c\": \"\\u0047\\u0302\",\n  // \u011C = \\^{G}\n  \"\\u0120\": \"\\u0047\\u0307\",\n  // \u0120 = \\.{G}\n  \"\\u1e26\": \"\\u0048\\u0308\",\n  // \u1E26 = \\\"{H}\n  \"\\u021e\": \"\\u0048\\u030c\",\n  // \u021E = \\v{H}\n  \"\\u0124\": \"\\u0048\\u0302\",\n  // \u0124 = \\^{H}\n  \"\\u1e22\": \"\\u0048\\u0307\",\n  // \u1E22 = \\.{H}\n  \"\\u00cd\": \"\\u0049\\u0301\",\n  // \u00CD = \\'{I}\n  \"\\u00cc\": \"\\u0049\\u0300\",\n  // \u00CC = \\`{I}\n  \"\\u00cf\": \"\\u0049\\u0308\",\n  // \u00CF = \\\"{I}\n  \"\\u1e2e\": \"\\u0049\\u0308\\u0301\",\n  // \u1E2E = \\\"\\'{I}\n  \"\\u0128\": \"\\u0049\\u0303\",\n  // \u0128 = \\~{I}\n  \"\\u012a\": \"\\u0049\\u0304\",\n  // \u012A = \\={I}\n  \"\\u012c\": \"\\u0049\\u0306\",\n  // \u012C = \\u{I}\n  \"\\u01cf\": \"\\u0049\\u030c\",\n  // \u01CF = \\v{I}\n  \"\\u00ce\": \"\\u0049\\u0302\",\n  // \u00CE = \\^{I}\n  \"\\u0130\": \"\\u0049\\u0307\",\n  // \u0130 = \\.{I}\n  \"\\u0134\": \"\\u004a\\u0302\",\n  // \u0134 = \\^{J}\n  \"\\u1e30\": \"\\u004b\\u0301\",\n  // \u1E30 = \\'{K}\n  \"\\u01e8\": \"\\u004b\\u030c\",\n  // \u01E8 = \\v{K}\n  \"\\u0139\": \"\\u004c\\u0301\",\n  // \u0139 = \\'{L}\n  \"\\u013d\": \"\\u004c\\u030c\",\n  // \u013D = \\v{L}\n  \"\\u1e3e\": \"\\u004d\\u0301\",\n  // \u1E3E = \\'{M}\n  \"\\u1e40\": \"\\u004d\\u0307\",\n  // \u1E40 = \\.{M}\n  \"\\u0143\": \"\\u004e\\u0301\",\n  // \u0143 = \\'{N}\n  \"\\u01f8\": \"\\u004e\\u0300\",\n  // \u01F8 = \\`{N}\n  \"\\u00d1\": \"\\u004e\\u0303\",\n  // \u00D1 = \\~{N}\n  \"\\u0147\": \"\\u004e\\u030c\",\n  // \u0147 = \\v{N}\n  \"\\u1e44\": \"\\u004e\\u0307\",\n  // \u1E44 = \\.{N}\n  \"\\u00d3\": \"\\u004f\\u0301\",\n  // \u00D3 = \\'{O}\n  \"\\u00d2\": \"\\u004f\\u0300\",\n  // \u00D2 = \\`{O}\n  \"\\u00d6\": \"\\u004f\\u0308\",\n  // \u00D6 = \\\"{O}\n  \"\\u022a\": \"\\u004f\\u0308\\u0304\",\n  // \u022A = \\\"\\={O}\n  \"\\u00d5\": \"\\u004f\\u0303\",\n  // \u00D5 = \\~{O}\n  \"\\u1e4c\": \"\\u004f\\u0303\\u0301\",\n  // \u1E4C = \\~\\'{O}\n  \"\\u1e4e\": \"\\u004f\\u0303\\u0308\",\n  // \u1E4E = \\~\\\"{O}\n  \"\\u022c\": \"\\u004f\\u0303\\u0304\",\n  // \u022C = \\~\\={O}\n  \"\\u014c\": \"\\u004f\\u0304\",\n  // \u014C = \\={O}\n  \"\\u1e52\": \"\\u004f\\u0304\\u0301\",\n  // \u1E52 = \\=\\'{O}\n  \"\\u1e50\": \"\\u004f\\u0304\\u0300\",\n  // \u1E50 = \\=\\`{O}\n  \"\\u014e\": \"\\u004f\\u0306\",\n  // \u014E = \\u{O}\n  \"\\u01d1\": \"\\u004f\\u030c\",\n  // \u01D1 = \\v{O}\n  \"\\u00d4\": \"\\u004f\\u0302\",\n  // \u00D4 = \\^{O}\n  \"\\u1ed0\": \"\\u004f\\u0302\\u0301\",\n  // \u1ED0 = \\^\\'{O}\n  \"\\u1ed2\": \"\\u004f\\u0302\\u0300\",\n  // \u1ED2 = \\^\\`{O}\n  \"\\u1ed6\": \"\\u004f\\u0302\\u0303\",\n  // \u1ED6 = \\^\\~{O}\n  \"\\u022e\": \"\\u004f\\u0307\",\n  // \u022E = \\.{O}\n  \"\\u0230\": \"\\u004f\\u0307\\u0304\",\n  // \u0230 = \\.\\={O}\n  \"\\u0150\": \"\\u004f\\u030b\",\n  // \u0150 = \\H{O}\n  \"\\u1e54\": \"\\u0050\\u0301\",\n  // \u1E54 = \\'{P}\n  \"\\u1e56\": \"\\u0050\\u0307\",\n  // \u1E56 = \\.{P}\n  \"\\u0154\": \"\\u0052\\u0301\",\n  // \u0154 = \\'{R}\n  \"\\u0158\": \"\\u0052\\u030c\",\n  // \u0158 = \\v{R}\n  \"\\u1e58\": \"\\u0052\\u0307\",\n  // \u1E58 = \\.{R}\n  \"\\u015a\": \"\\u0053\\u0301\",\n  // \u015A = \\'{S}\n  \"\\u1e64\": \"\\u0053\\u0301\\u0307\",\n  // \u1E64 = \\'\\.{S}\n  \"\\u0160\": \"\\u0053\\u030c\",\n  // \u0160 = \\v{S}\n  \"\\u1e66\": \"\\u0053\\u030c\\u0307\",\n  // \u1E66 = \\v\\.{S}\n  \"\\u015c\": \"\\u0053\\u0302\",\n  // \u015C = \\^{S}\n  \"\\u1e60\": \"\\u0053\\u0307\",\n  // \u1E60 = \\.{S}\n  \"\\u0164\": \"\\u0054\\u030c\",\n  // \u0164 = \\v{T}\n  \"\\u1e6a\": \"\\u0054\\u0307\",\n  // \u1E6A = \\.{T}\n  \"\\u00da\": \"\\u0055\\u0301\",\n  // \u00DA = \\'{U}\n  \"\\u00d9\": \"\\u0055\\u0300\",\n  // \u00D9 = \\`{U}\n  \"\\u00dc\": \"\\u0055\\u0308\",\n  // \u00DC = \\\"{U}\n  \"\\u01d7\": \"\\u0055\\u0308\\u0301\",\n  // \u01D7 = \\\"\\'{U}\n  \"\\u01db\": \"\\u0055\\u0308\\u0300\",\n  // \u01DB = \\\"\\`{U}\n  \"\\u01d5\": \"\\u0055\\u0308\\u0304\",\n  // \u01D5 = \\\"\\={U}\n  \"\\u01d9\": \"\\u0055\\u0308\\u030c\",\n  // \u01D9 = \\\"\\v{U}\n  \"\\u0168\": \"\\u0055\\u0303\",\n  // \u0168 = \\~{U}\n  \"\\u1e78\": \"\\u0055\\u0303\\u0301\",\n  // \u1E78 = \\~\\'{U}\n  \"\\u016a\": \"\\u0055\\u0304\",\n  // \u016A = \\={U}\n  \"\\u1e7a\": \"\\u0055\\u0304\\u0308\",\n  // \u1E7A = \\=\\\"{U}\n  \"\\u016c\": \"\\u0055\\u0306\",\n  // \u016C = \\u{U}\n  \"\\u01d3\": \"\\u0055\\u030c\",\n  // \u01D3 = \\v{U}\n  \"\\u00db\": \"\\u0055\\u0302\",\n  // \u00DB = \\^{U}\n  \"\\u016e\": \"\\u0055\\u030a\",\n  // \u016E = \\r{U}\n  \"\\u0170\": \"\\u0055\\u030b\",\n  // \u0170 = \\H{U}\n  \"\\u1e7c\": \"\\u0056\\u0303\",\n  // \u1E7C = \\~{V}\n  \"\\u1e82\": \"\\u0057\\u0301\",\n  // \u1E82 = \\'{W}\n  \"\\u1e80\": \"\\u0057\\u0300\",\n  // \u1E80 = \\`{W}\n  \"\\u1e84\": \"\\u0057\\u0308\",\n  // \u1E84 = \\\"{W}\n  \"\\u0174\": \"\\u0057\\u0302\",\n  // \u0174 = \\^{W}\n  \"\\u1e86\": \"\\u0057\\u0307\",\n  // \u1E86 = \\.{W}\n  \"\\u1e8c\": \"\\u0058\\u0308\",\n  // \u1E8C = \\\"{X}\n  \"\\u1e8a\": \"\\u0058\\u0307\",\n  // \u1E8A = \\.{X}\n  \"\\u00dd\": \"\\u0059\\u0301\",\n  // \u00DD = \\'{Y}\n  \"\\u1ef2\": \"\\u0059\\u0300\",\n  // \u1EF2 = \\`{Y}\n  \"\\u0178\": \"\\u0059\\u0308\",\n  // \u0178 = \\\"{Y}\n  \"\\u1ef8\": \"\\u0059\\u0303\",\n  // \u1EF8 = \\~{Y}\n  \"\\u0232\": \"\\u0059\\u0304\",\n  // \u0232 = \\={Y}\n  \"\\u0176\": \"\\u0059\\u0302\",\n  // \u0176 = \\^{Y}\n  \"\\u1e8e\": \"\\u0059\\u0307\",\n  // \u1E8E = \\.{Y}\n  \"\\u0179\": \"\\u005a\\u0301\",\n  // \u0179 = \\'{Z}\n  \"\\u017d\": \"\\u005a\\u030c\",\n  // \u017D = \\v{Z}\n  \"\\u1e90\": \"\\u005a\\u0302\",\n  // \u1E90 = \\^{Z}\n  \"\\u017b\": \"\\u005a\\u0307\",\n  // \u017B = \\.{Z}\n  \"\\u03ac\": \"\\u03b1\\u0301\",\n  // \u03AC = \\'{\u03B1}\n  \"\\u1f70\": \"\\u03b1\\u0300\",\n  // \u1F70 = \\`{\u03B1}\n  \"\\u1fb1\": \"\\u03b1\\u0304\",\n  // \u1FB1 = \\={\u03B1}\n  \"\\u1fb0\": \"\\u03b1\\u0306\",\n  // \u1FB0 = \\u{\u03B1}\n  \"\\u03ad\": \"\\u03b5\\u0301\",\n  // \u03AD = \\'{\u03B5}\n  \"\\u1f72\": \"\\u03b5\\u0300\",\n  // \u1F72 = \\`{\u03B5}\n  \"\\u03ae\": \"\\u03b7\\u0301\",\n  // \u03AE = \\'{\u03B7}\n  \"\\u1f74\": \"\\u03b7\\u0300\",\n  // \u1F74 = \\`{\u03B7}\n  \"\\u03af\": \"\\u03b9\\u0301\",\n  // \u03AF = \\'{\u03B9}\n  \"\\u1f76\": \"\\u03b9\\u0300\",\n  // \u1F76 = \\`{\u03B9}\n  \"\\u03ca\": \"\\u03b9\\u0308\",\n  // \u03CA = \\\"{\u03B9}\n  \"\\u0390\": \"\\u03b9\\u0308\\u0301\",\n  // \u0390 = \\\"\\'{\u03B9}\n  \"\\u1fd2\": \"\\u03b9\\u0308\\u0300\",\n  // \u1FD2 = \\\"\\`{\u03B9}\n  \"\\u1fd1\": \"\\u03b9\\u0304\",\n  // \u1FD1 = \\={\u03B9}\n  \"\\u1fd0\": \"\\u03b9\\u0306\",\n  // \u1FD0 = \\u{\u03B9}\n  \"\\u03cc\": \"\\u03bf\\u0301\",\n  // \u03CC = \\'{\u03BF}\n  \"\\u1f78\": \"\\u03bf\\u0300\",\n  // \u1F78 = \\`{\u03BF}\n  \"\\u03cd\": \"\\u03c5\\u0301\",\n  // \u03CD = \\'{\u03C5}\n  \"\\u1f7a\": \"\\u03c5\\u0300\",\n  // \u1F7A = \\`{\u03C5}\n  \"\\u03cb\": \"\\u03c5\\u0308\",\n  // \u03CB = \\\"{\u03C5}\n  \"\\u03b0\": \"\\u03c5\\u0308\\u0301\",\n  // \u03B0 = \\\"\\'{\u03C5}\n  \"\\u1fe2\": \"\\u03c5\\u0308\\u0300\",\n  // \u1FE2 = \\\"\\`{\u03C5}\n  \"\\u1fe1\": \"\\u03c5\\u0304\",\n  // \u1FE1 = \\={\u03C5}\n  \"\\u1fe0\": \"\\u03c5\\u0306\",\n  // \u1FE0 = \\u{\u03C5}\n  \"\\u03ce\": \"\\u03c9\\u0301\",\n  // \u03CE = \\'{\u03C9}\n  \"\\u1f7c\": \"\\u03c9\\u0300\",\n  // \u1F7C = \\`{\u03C9}\n  \"\\u038e\": \"\\u03a5\\u0301\",\n  // \u038E = \\'{\u03A5}\n  \"\\u1fea\": \"\\u03a5\\u0300\",\n  // \u1FEA = \\`{\u03A5}\n  \"\\u03ab\": \"\\u03a5\\u0308\",\n  // \u03AB = \\\"{\u03A5}\n  \"\\u1fe9\": \"\\u03a5\\u0304\",\n  // \u1FE9 = \\={\u03A5}\n  \"\\u1fe8\": \"\\u03a5\\u0306\",\n  // \u1FE8 = \\u{\u03A5}\n  \"\\u038f\": \"\\u03a9\\u0301\",\n  // \u038F = \\'{\u03A9}\n  \"\\u1ffa\": \"\\u03a9\\u0300\" // \u1FFA = \\`{\u03A9}\n\n};\n\n/* eslint no-constant-condition:0 */\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The functions return ParseNodes.\n */\nclass Parser {\n  constructor(input, settings) {\n    this.mode = void 0;\n    this.gullet = void 0;\n    this.settings = void 0;\n    this.leftrightDepth = void 0;\n    this.nextToken = void 0;\n    // Start in math mode\n    this.mode = \"math\"; // Create a new macro expander (gullet) and (indirectly via that) also a\n    // new lexer (mouth) for this parser (stomach, in the language of TeX)\n\n    this.gullet = new MacroExpander(input, settings, this.mode); // Store the settings for use in parsing\n\n    this.settings = settings; // Count leftright depth (for \\middle errors)\n\n    this.leftrightDepth = 0;\n  }\n  /**\n   * Checks a result to make sure it has the right type, and throws an\n   * appropriate error otherwise.\n   */\n\n\n  expect(text, consume) {\n    if (consume === void 0) {\n      consume = true;\n    }\n\n    if (this.fetch().text !== text) {\n      throw new ParseError(`Expected '${text}', got '${this.fetch().text}'`, this.fetch());\n    }\n\n    if (consume) {\n      this.consume();\n    }\n  }\n  /**\n   * Discards the current lookahead token, considering it consumed.\n   */\n\n\n  consume() {\n    this.nextToken = null;\n  }\n  /**\n   * Return the current lookahead token, or if there isn't one (at the\n   * beginning, or if the previous lookahead token was consume()d),\n   * fetch the next token as the new lookahead token and return it.\n   */\n\n\n  fetch() {\n    if (this.nextToken == null) {\n      this.nextToken = this.gullet.expandNextToken();\n    }\n\n    return this.nextToken;\n  }\n  /**\n   * Switches between \"text\" and \"math\" modes.\n   */\n\n\n  switchMode(newMode) {\n    this.mode = newMode;\n    this.gullet.switchMode(newMode);\n  }\n  /**\n   * Main parsing function, which parses an entire input.\n   */\n\n\n  parse() {\n    // Create a group namespace for the math expression.\n    // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n    this.gullet.beginGroup(); // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n    // We do this within the group for the math expression, so it doesn't\n    // pollute settings.macros.\n\n    if (this.settings.colorIsTextColor) {\n      this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n    } // Try to parse the input\n\n\n    const parse = this.parseExpression(false); // If we succeeded, make sure there's an EOF at the end\n\n    this.expect(\"EOF\"); // End the group namespace for the expression\n\n    this.gullet.endGroup();\n    return parse;\n  }\n\n  parseExpression(breakOnInfix, breakOnTokenText) {\n    const body = []; // Keep adding atoms to the body until we can't parse any more atoms (either\n    // we reached the end, a }, or a \\right)\n\n    while (true) {\n      // Ignore spaces in math mode\n      if (this.mode === \"math\") {\n        this.consumeSpaces();\n      }\n\n      const lex = this.fetch();\n\n      if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n        break;\n      }\n\n      if (breakOnTokenText && lex.text === breakOnTokenText) {\n        break;\n      }\n\n      if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {\n        break;\n      }\n\n      const atom = this.parseAtom(breakOnTokenText);\n\n      if (!atom) {\n        break;\n      }\n\n      body.push(atom);\n    }\n\n    if (this.mode === \"text\") {\n      this.formLigatures(body);\n    }\n\n    return this.handleInfixNodes(body);\n  }\n  /**\n   * Rewrites infix operators such as \\over with corresponding commands such\n   * as \\frac.\n   *\n   * There can only be one infix operator per group.  If there's more than one\n   * then the expression is ambiguous.  This can be resolved by adding {}.\n   */\n\n\n  handleInfixNodes(body) {\n    let overIndex = -1;\n    let funcName;\n\n    for (let i = 0; i < body.length; i++) {\n      const node = checkNodeType(body[i], \"infix\");\n\n      if (node) {\n        if (overIndex !== -1) {\n          throw new ParseError(\"only one infix operator per group\", node.token);\n        }\n\n        overIndex = i;\n        funcName = node.replaceWith;\n      }\n    }\n\n    if (overIndex !== -1 && funcName) {\n      let numerNode;\n      let denomNode;\n      const numerBody = body.slice(0, overIndex);\n      const denomBody = body.slice(overIndex + 1);\n\n      if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n        numerNode = numerBody[0];\n      } else {\n        numerNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: numerBody\n        };\n      }\n\n      if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n        denomNode = denomBody[0];\n      } else {\n        denomNode = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: denomBody\n        };\n      }\n\n      let node;\n\n      if (funcName === \"\\\\\\\\abovefrac\") {\n        node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n      } else {\n        node = this.callFunction(funcName, [numerNode, denomNode], []);\n      }\n\n      return [node];\n    } else {\n      return body;\n    }\n  } // The greediness of a superscript or subscript\n\n\n  /**\n   * Handle a subscript or superscript with nice errors.\n   */\n  handleSupSubscript(name) {\n    const symbolToken = this.fetch();\n    const symbol = symbolToken.text;\n    this.consume();\n    const group = this.parseGroup(name, false, Parser.SUPSUB_GREEDINESS, undefined, undefined, true); // ignore spaces before sup/subscript argument\n\n    if (!group) {\n      throw new ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n    }\n\n    return group;\n  }\n  /**\n   * Converts the textual input of an unsupported command into a text node\n   * contained within a color node whose color is determined by errorColor\n   */\n\n\n  formatUnsupportedCmd(text) {\n    const textordArray = [];\n\n    for (let i = 0; i < text.length; i++) {\n      textordArray.push({\n        type: \"textord\",\n        mode: \"text\",\n        text: text[i]\n      });\n    }\n\n    const textNode = {\n      type: \"text\",\n      mode: this.mode,\n      body: textordArray\n    };\n    const colorNode = {\n      type: \"color\",\n      mode: this.mode,\n      color: this.settings.errorColor,\n      body: [textNode]\n    };\n    return colorNode;\n  }\n  /**\n   * Parses a group with optional super/subscripts.\n   */\n\n\n  parseAtom(breakOnTokenText) {\n    // The body of an atom is an implicit group, so that things like\n    // \\left(x\\right)^2 work correctly.\n    const base = this.parseGroup(\"atom\", false, null, breakOnTokenText); // In text mode, we don't have superscripts or subscripts\n\n    if (this.mode === \"text\") {\n      return base;\n    } // Note that base may be empty (i.e. null) at this point.\n\n\n    let superscript;\n    let subscript;\n\n    while (true) {\n      // Guaranteed in math mode, so eat any spaces first.\n      this.consumeSpaces(); // Lex the first token\n\n      const lex = this.fetch();\n\n      if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n        // We got a limit control\n        let opNode = checkNodeType(base, \"op\");\n\n        if (opNode) {\n          const limits = lex.text === \"\\\\limits\";\n          opNode.limits = limits;\n          opNode.alwaysHandleSupSub = true;\n        } else {\n          opNode = checkNodeType(base, \"operatorname\");\n\n          if (opNode && opNode.alwaysHandleSupSub) {\n            const limits = lex.text === \"\\\\limits\";\n            opNode.limits = limits;\n          } else {\n            throw new ParseError(\"Limit controls must follow a math operator\", lex);\n          }\n        }\n\n        this.consume();\n      } else if (lex.text === \"^\") {\n        // We got a superscript start\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        superscript = this.handleSupSubscript(\"superscript\");\n      } else if (lex.text === \"_\") {\n        // We got a subscript start\n        if (subscript) {\n          throw new ParseError(\"Double subscript\", lex);\n        }\n\n        subscript = this.handleSupSubscript(\"subscript\");\n      } else if (lex.text === \"'\") {\n        // We got a prime\n        if (superscript) {\n          throw new ParseError(\"Double superscript\", lex);\n        }\n\n        const prime = {\n          type: \"textord\",\n          mode: this.mode,\n          text: \"\\\\prime\"\n        }; // Many primes can be grouped together, so we handle this here\n\n        const primes = [prime];\n        this.consume(); // Keep lexing tokens until we get something that's not a prime\n\n        while (this.fetch().text === \"'\") {\n          // For each one, add another prime to the list\n          primes.push(prime);\n          this.consume();\n        } // If there's a superscript following the primes, combine that\n        // superscript in with the primes.\n\n\n        if (this.fetch().text === \"^\") {\n          primes.push(this.handleSupSubscript(\"superscript\"));\n        } // Put everything into an ordgroup as the superscript\n\n\n        superscript = {\n          type: \"ordgroup\",\n          mode: this.mode,\n          body: primes\n        };\n      } else {\n        // If it wasn't ^, _, or ', stop parsing super/subscripts\n        break;\n      }\n    } // Base must be set if superscript or subscript are set per logic above,\n    // but need to check here for type check to pass.\n\n\n    if (superscript || subscript) {\n      // If we got either a superscript or subscript, create a supsub\n      return {\n        type: \"supsub\",\n        mode: this.mode,\n        base: base,\n        sup: superscript,\n        sub: subscript\n      };\n    } else {\n      // Otherwise return the original body\n      return base;\n    }\n  }\n  /**\n   * Parses an entire function, including its base and all of its arguments.\n   */\n\n\n  parseFunction(breakOnTokenText, name, // For error reporting.\n  greediness) {\n    const token = this.fetch();\n    const func = token.text;\n    const funcData = functions[func];\n\n    if (!funcData) {\n      return null;\n    }\n\n    this.consume(); // consume command token\n\n    if (greediness != null && funcData.greediness <= greediness) {\n      throw new ParseError(\"Got function '\" + func + \"' with no arguments\" + (name ? \" as \" + name : \"\"), token);\n    } else if (this.mode === \"text\" && !funcData.allowedInText) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in text mode\", token);\n    } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n      throw new ParseError(\"Can't use function '\" + func + \"' in math mode\", token);\n    }\n\n    const _this$parseArguments = this.parseArguments(func, funcData),\n          args = _this$parseArguments.args,\n          optArgs = _this$parseArguments.optArgs;\n\n    return this.callFunction(func, args, optArgs, token, breakOnTokenText);\n  }\n  /**\n   * Call a function handler with a suitable context and arguments.\n   */\n\n\n  callFunction(name, args, optArgs, token, breakOnTokenText) {\n    const context = {\n      funcName: name,\n      parser: this,\n      token,\n      breakOnTokenText\n    };\n    const func = functions[name];\n\n    if (func && func.handler) {\n      return func.handler(context, args, optArgs);\n    } else {\n      throw new ParseError(`No function handler for ${name}`);\n    }\n  }\n  /**\n   * Parses the arguments of a function or environment\n   */\n\n\n  parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n  funcData) {\n    const totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n\n    if (totalArgs === 0) {\n      return {\n        args: [],\n        optArgs: []\n      };\n    }\n\n    const baseGreediness = funcData.greediness;\n    const args = [];\n    const optArgs = [];\n\n    for (let i = 0; i < totalArgs; i++) {\n      const argType = funcData.argTypes && funcData.argTypes[i];\n      const isOptional = i < funcData.numOptionalArgs; // Ignore spaces between arguments.  As the TeXbook says:\n      // \"After you have said \u2018\\def\\row#1#2{...}\u2019, you are allowed to\n      //  put spaces between the arguments (e.g., \u2018\\row x n\u2019), because\n      //  TeX doesn\u2019t use single spaces as undelimited arguments.\"\n\n      const consumeSpaces = i > 0 && !isOptional || // Also consume leading spaces in math mode, as parseSymbol\n      // won't know what to do with them.  This can only happen with\n      // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n      // In LaTeX, the \\foo's get treated as (blank) arguments.\n      // In KaTeX, for now, both spaces will get consumed.\n      // TODO(edemaine)\n      i === 0 && !isOptional && this.mode === \"math\";\n      const arg = this.parseGroupOfType(`argument to '${func}'`, argType, isOptional, baseGreediness, consumeSpaces);\n\n      if (!arg) {\n        if (isOptional) {\n          optArgs.push(null);\n          continue;\n        }\n\n        throw new ParseError(`Expected group after '${func}'`, this.fetch());\n      }\n\n      (isOptional ? optArgs : args).push(arg);\n    }\n\n    return {\n      args,\n      optArgs\n    };\n  }\n  /**\n   * Parses a group when the mode is changing.\n   */\n\n\n  parseGroupOfType(name, type, optional, greediness, consumeSpaces) {\n    switch (type) {\n      case \"color\":\n        if (consumeSpaces) {\n          this.consumeSpaces();\n        }\n\n        return this.parseColorGroup(optional);\n\n      case \"size\":\n        if (consumeSpaces) {\n          this.consumeSpaces();\n        }\n\n        return this.parseSizeGroup(optional);\n\n      case \"url\":\n        return this.parseUrlGroup(optional, consumeSpaces);\n\n      case \"math\":\n      case \"text\":\n        return this.parseGroup(name, optional, greediness, undefined, type, consumeSpaces);\n\n      case \"hbox\":\n        {\n          // hbox argument type wraps the argument in the equivalent of\n          // \\hbox, which is like \\text but switching to \\textstyle size.\n          const group = this.parseGroup(name, optional, greediness, undefined, \"text\", consumeSpaces);\n\n          if (!group) {\n            return group;\n          }\n\n          const styledGroup = {\n            type: \"styling\",\n            mode: group.mode,\n            body: [group],\n            style: \"text\" // simulate \\textstyle\n\n          };\n          return styledGroup;\n        }\n\n      case \"raw\":\n        {\n          if (consumeSpaces) {\n            this.consumeSpaces();\n          }\n\n          if (optional && this.fetch().text === \"{\") {\n            return null;\n          }\n\n          const token = this.parseStringGroup(\"raw\", optional, true);\n\n          if (token) {\n            return {\n              type: \"raw\",\n              mode: \"text\",\n              string: token.text\n            };\n          } else {\n            throw new ParseError(\"Expected raw group\", this.fetch());\n          }\n        }\n\n      case \"original\":\n      case null:\n      case undefined:\n        return this.parseGroup(name, optional, greediness, undefined, undefined, consumeSpaces);\n\n      default:\n        throw new ParseError(\"Unknown group type as \" + name, this.fetch());\n    }\n  }\n  /**\n   * Discard any space tokens, fetching the next non-space token.\n   */\n\n\n  consumeSpaces() {\n    while (this.fetch().text === \" \") {\n      this.consume();\n    }\n  }\n  /**\n   * Parses a group, essentially returning the string formed by the\n   * brace-enclosed tokens plus some position information.\n   */\n\n\n  parseStringGroup(modeName, // Used to describe the mode in error messages.\n  optional, raw) {\n    const groupBegin = optional ? \"[\" : \"{\";\n    const groupEnd = optional ? \"]\" : \"}\";\n    const beginToken = this.fetch();\n\n    if (beginToken.text !== groupBegin) {\n      if (optional) {\n        return null;\n      } else if (raw && beginToken.text !== \"EOF\" && /[^{}[\\]]/.test(beginToken.text)) {\n        this.consume();\n        return beginToken;\n      }\n    }\n\n    const outerMode = this.mode;\n    this.mode = \"text\";\n    this.expect(groupBegin);\n    let str = \"\";\n    const firstToken = this.fetch();\n    let nested = 0; // allow nested braces in raw string group\n\n    let lastToken = firstToken;\n    let nextToken;\n\n    while ((nextToken = this.fetch()).text !== groupEnd || raw && nested > 0) {\n      switch (nextToken.text) {\n        case \"EOF\":\n          throw new ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(lastToken, str));\n\n        case groupBegin:\n          nested++;\n          break;\n\n        case groupEnd:\n          nested--;\n          break;\n      }\n\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    this.expect(groupEnd);\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a regex-delimited group: the largest sequence of tokens\n   * whose concatenated strings match `regex`. Returns the string\n   * formed by the tokens plus some position information.\n   */\n\n\n  parseRegexGroup(regex, modeName) {\n    const outerMode = this.mode;\n    this.mode = \"text\";\n    const firstToken = this.fetch();\n    let lastToken = firstToken;\n    let str = \"\";\n    let nextToken;\n\n    while ((nextToken = this.fetch()).text !== \"EOF\" && regex.test(str + nextToken.text)) {\n      lastToken = nextToken;\n      str += lastToken.text;\n      this.consume();\n    }\n\n    if (str === \"\") {\n      throw new ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n    }\n\n    this.mode = outerMode;\n    return firstToken.range(lastToken, str);\n  }\n  /**\n   * Parses a color description.\n   */\n\n\n  parseColorGroup(optional) {\n    const res = this.parseStringGroup(\"color\", optional);\n\n    if (!res) {\n      return null;\n    }\n\n    const match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n    }\n\n    let color = match[0];\n\n    if (/^[0-9a-f]{6}$/i.test(color)) {\n      // We allow a 6-digit HTML color spec without a leading \"#\".\n      // This follows the xcolor package's HTML color model.\n      // Predefined color names are all missed by this RegEx pattern.\n      color = \"#\" + color;\n    }\n\n    return {\n      type: \"color-token\",\n      mode: this.mode,\n      color\n    };\n  }\n  /**\n   * Parses a size specification, consisting of magnitude and unit.\n   */\n\n\n  parseSizeGroup(optional) {\n    let res;\n    let isBlank = false;\n\n    if (!optional && this.fetch().text !== \"{\") {\n      res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n    } else {\n      res = this.parseStringGroup(\"size\", optional);\n    }\n\n    if (!res) {\n      return null;\n    }\n\n    if (!optional && res.text.length === 0) {\n      // Because we've tested for what is !optional, this block won't\n      // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n      // to \\genfrac and \\above.\n      res.text = \"0pt\"; // Enable \\above{}\n\n      isBlank = true; // This is here specifically for \\genfrac\n    }\n\n    const match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n\n    if (!match) {\n      throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n    }\n\n    const data = {\n      number: +(match[1] + match[2]),\n      // sign + magnitude, cast to number\n      unit: match[3]\n    };\n\n    if (!validUnit(data)) {\n      throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n    }\n\n    return {\n      type: \"size\",\n      mode: this.mode,\n      value: data,\n      isBlank\n    };\n  }\n  /**\n   * Parses an URL, checking escaped letters and allowed protocols,\n   * and setting the catcode of % as an active character (as in \\hyperref).\n   */\n\n\n  parseUrlGroup(optional, consumeSpaces) {\n    this.gullet.lexer.setCatcode(\"%\", 13); // active character\n\n    const res = this.parseStringGroup(\"url\", optional, true); // get raw string\n\n    this.gullet.lexer.setCatcode(\"%\", 14); // comment character\n\n    if (!res) {\n      return null;\n    } // hyperref package allows backslashes alone in href, but doesn't\n    // generate valid links in such cases; we interpret this as\n    // \"undefined\" behaviour, and keep them as-is. Some browser will\n    // replace backslashes with forward slashes.\n\n\n    const url = res.text.replace(/\\\\([#$%&~_^{}])/g, '$1');\n    return {\n      type: \"url\",\n      mode: this.mode,\n      url\n    };\n  }\n  /**\n   * If `optional` is false or absent, this parses an ordinary group,\n   * which is either a single nucleus (like \"x\") or an expression\n   * in braces (like \"{x+y}\") or an implicit group, a group that starts\n   * at the current position, and ends right before a higher explicit\n   * group ends, or at EOF.\n   * If `optional` is true, it parses either a bracket-delimited expression\n   * (like \"[x+y]\") or returns null to indicate the absence of a\n   * bracket-enclosed group.\n   * If `mode` is present, switches to that mode while parsing the group,\n   * and switches back after.\n   */\n\n\n  parseGroup(name, // For error reporting.\n  optional, greediness, breakOnTokenText, mode, consumeSpaces) {\n    // Switch to specified mode\n    const outerMode = this.mode;\n\n    if (mode) {\n      this.switchMode(mode);\n    } // Consume spaces if requested, crucially *after* we switch modes,\n    // so that the next non-space token is parsed in the correct mode.\n\n\n    if (consumeSpaces) {\n      this.consumeSpaces();\n    } // Get first token\n\n\n    const firstToken = this.fetch();\n    const text = firstToken.text;\n    let result; // Try to parse an open brace or \\begingroup\n\n    if (optional ? text === \"[\" : text === \"{\" || text === \"\\\\begingroup\") {\n      this.consume();\n      const groupEnd = Parser.endOfGroup[text]; // Start a new group namespace\n\n      this.gullet.beginGroup(); // If we get a brace, parse an expression\n\n      const expression = this.parseExpression(false, groupEnd);\n      const lastToken = this.fetch(); // Check that we got a matching closing brace\n\n      this.expect(groupEnd); // End group namespace\n\n      this.gullet.endGroup();\n      result = {\n        type: \"ordgroup\",\n        mode: this.mode,\n        loc: SourceLocation.range(firstToken, lastToken),\n        body: expression,\n        // A group formed by \\begingroup...\\endgroup is a semi-simple group\n        // which doesn't affect spacing in math mode, i.e., is transparent.\n        // https://tex.stackexchange.com/questions/1930/when-should-one-\n        // use-begingroup-instead-of-bgroup\n        semisimple: text === \"\\\\begingroup\" || undefined\n      };\n    } else if (optional) {\n      // Return nothing for an optional group\n      result = null;\n    } else {\n      // If there exists a function with this name, parse the function.\n      // Otherwise, just return a nucleus\n      result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol();\n\n      if (result == null && text[0] === \"\\\\\" && !implicitCommands.hasOwnProperty(text)) {\n        if (this.settings.throwOnError) {\n          throw new ParseError(\"Undefined control sequence: \" + text, firstToken);\n        }\n\n        result = this.formatUnsupportedCmd(text);\n        this.consume();\n      }\n    } // Switch mode back\n\n\n    if (mode) {\n      this.switchMode(outerMode);\n    }\n\n    return result;\n  }\n  /**\n   * Form ligature-like combinations of characters for text mode.\n   * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n   * The result will simply replace multiple textord nodes with a single\n   * character in each value by a single textord node having multiple\n   * characters in its value.  The representation is still ASCII source.\n   * The group will be modified in place.\n   */\n\n\n  formLigatures(group) {\n    let n = group.length - 1;\n\n    for (let i = 0; i < n; ++i) {\n      const a = group[i]; // $FlowFixMe: Not every node type has a `text` property.\n\n      const v = a.text;\n\n      if (v === \"-\" && group[i + 1].text === \"-\") {\n        if (i + 1 < n && group[i + 2].text === \"-\") {\n          group.splice(i, 3, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 2]),\n            text: \"---\"\n          });\n          n -= 2;\n        } else {\n          group.splice(i, 2, {\n            type: \"textord\",\n            mode: \"text\",\n            loc: SourceLocation.range(a, group[i + 1]),\n            text: \"--\"\n          });\n          n -= 1;\n        }\n      }\n\n      if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n        group.splice(i, 2, {\n          type: \"textord\",\n          mode: \"text\",\n          loc: SourceLocation.range(a, group[i + 1]),\n          text: v + v\n        });\n        n -= 1;\n      }\n    }\n  }\n  /**\n   * Parse a single symbol out of the string. Here, we handle single character\n   * symbols and special functions like \\verb.\n   */\n\n\n  parseSymbol() {\n    const nucleus = this.fetch();\n    let text = nucleus.text;\n\n    if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n      this.consume();\n      let arg = text.slice(5);\n      const star = arg.charAt(0) === \"*\";\n\n      if (star) {\n        arg = arg.slice(1);\n      } // Lexer's tokenRegex is constructed to always have matching\n      // first/last characters.\n\n\n      if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n        throw new ParseError(`\\\\verb assertion failed --\n                    please report what input caused this bug`);\n      }\n\n      arg = arg.slice(1, -1); // remove first and last char\n\n      return {\n        type: \"verb\",\n        mode: \"text\",\n        body: arg,\n        star\n      };\n    } // At this point, we should have a symbol, possibly with accents.\n    // First expand any accented base symbol according to unicodeSymbols.\n\n\n    if (unicodeSymbols.hasOwnProperty(text[0]) && !symbols[this.mode][text[0]]) {\n      // This behavior is not strict (XeTeX-compatible) in math mode.\n      if (this.settings.strict && this.mode === \"math\") {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Accented Unicode text character \"${text[0]}\" used in ` + `math mode`, nucleus);\n      }\n\n      text = unicodeSymbols[text[0]] + text.substr(1);\n    } // Strip off any combining characters\n\n\n    const match = combiningDiacriticalMarksEndRegex.exec(text);\n\n    if (match) {\n      text = text.substring(0, match.index);\n\n      if (text === 'i') {\n        text = '\\u0131'; // dotless i, in math and text mode\n      } else if (text === 'j') {\n        text = '\\u0237'; // dotless j, in math and text mode\n      }\n    } // Recognize base symbol\n\n\n    let symbol;\n\n    if (symbols[this.mode][text]) {\n      if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n        this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Latin-1/Unicode text character \"${text[0]}\" used in ` + `math mode`, nucleus);\n      }\n\n      const group = symbols[this.mode][text].group;\n      const loc = SourceLocation.range(nucleus);\n      let s;\n\n      if (ATOMS.hasOwnProperty(group)) {\n        // $FlowFixMe\n        const family = group;\n        s = {\n          type: \"atom\",\n          mode: this.mode,\n          family,\n          loc,\n          text\n        };\n      } else {\n        // $FlowFixMe\n        s = {\n          type: group,\n          mode: this.mode,\n          loc,\n          text\n        };\n      }\n\n      symbol = s;\n    } else if (text.charCodeAt(0) >= 0x80) {\n      // no symbol for e.g. ^\n      if (this.settings.strict) {\n        if (!supportedCodepoint(text.charCodeAt(0))) {\n          this.settings.reportNonstrict(\"unknownSymbol\", `Unrecognized Unicode character \"${text[0]}\"` + ` (${text.charCodeAt(0)})`, nucleus);\n        } else if (this.mode === \"math\") {\n          this.settings.reportNonstrict(\"unicodeTextInMathMode\", `Unicode text character \"${text[0]}\" used in math mode`, nucleus);\n        }\n      } // All nonmathematical Unicode characters are rendered as if they\n      // are in text mode (wrapped in \\text) because that's what it\n      // takes to render them in LaTeX.  Setting `mode: this.mode` is\n      // another natural choice (the user requested math mode), but\n      // this makes it more difficult for getCharacterMetrics() to\n      // distinguish Unicode characters without metrics and those for\n      // which we want to simulate the letter M.\n\n\n      symbol = {\n        type: \"textord\",\n        mode: \"text\",\n        loc: SourceLocation.range(nucleus),\n        text\n      };\n    } else {\n      return null; // EOF, ^, _, {, }, etc.\n    }\n\n    this.consume(); // Transform combining characters into accents\n\n    if (match) {\n      for (let i = 0; i < match[0].length; i++) {\n        const accent = match[0][i];\n\n        if (!unicodeAccents[accent]) {\n          throw new ParseError(`Unknown accent ' ${accent}'`, nucleus);\n        }\n\n        const command = unicodeAccents[accent][this.mode];\n\n        if (!command) {\n          throw new ParseError(`Accent ${accent} unsupported in ${this.mode} mode`, nucleus);\n        }\n\n        symbol = {\n          type: \"accent\",\n          mode: this.mode,\n          loc: SourceLocation.range(nucleus),\n          label: command,\n          isStretchy: false,\n          isShifty: true,\n          base: symbol\n        };\n      }\n    }\n\n    return symbol;\n  }\n\n}\nParser.endOfExpression = [\"}\", \"\\\\endgroup\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser.endOfGroup = {\n  \"[\": \"]\",\n  \"{\": \"}\",\n  \"\\\\begingroup\": \"\\\\endgroup\"\n  /**\n   * Parses an \"expression\", which is a list of atoms.\n   *\n   * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n   *                 happens when functions have higher precendence han infix\n   *                 nodes in implicit parses.\n   *\n   * `breakOnTokenText`: The text of the token that the expression should end\n   *                     with, or `null` if something else should end the\n   *                     expression.\n   */\n\n};\nParser.SUPSUB_GREEDINESS = 1;\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nconst parseTree = function parseTree(toParse, settings) {\n  if (!(typeof toParse === 'string' || toParse instanceof String)) {\n    throw new TypeError('KaTeX can only parse string typed expression');\n  }\n\n  const parser = new Parser(toParse, settings); // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n\n  delete parser.gullet.macros.current[\"\\\\df@tag\"];\n  let tree = parser.parse(); // If the input used \\tag, it will set the \\df@tag macro to the tag.\n  // In this case, we separately parse the tag and wrap the tree.\n\n  if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n    if (!settings.displayMode) {\n      throw new ParseError(\"\\\\tag works only in display equations\");\n    }\n\n    parser.gullet.feed(\"\\\\df@tag\");\n    tree = [{\n      type: \"tag\",\n      mode: \"text\",\n      body: tree,\n      tag: parser.parse()\n    }];\n  }\n\n  return tree;\n};\n\n/* eslint no-console:0 */\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nlet render = function render(expression, baseNode, options) {\n  baseNode.textContent = \"\";\n  const node = renderToDomTree(expression, options).toNode();\n  baseNode.appendChild(node);\n}; // KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\n\n\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n    render = function render() {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n/**\n * Parse and build an expression, and return the markup for that.\n */\n\n\nconst renderToString = function renderToString(expression, options) {\n  const markup = renderToDomTree(expression, options).toMarkup();\n  return markup;\n};\n/**\n * Parse an expression and return the parse tree.\n */\n\n\nconst generateParseTree = function generateParseTree(expression, options) {\n  const settings = new Settings(options);\n  return parseTree(expression, settings);\n};\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\n\n\nconst renderError = function renderError(error, expression, options) {\n  if (options.throwOnError || !(error instanceof ParseError)) {\n    throw error;\n  }\n\n  const node = buildCommon.makeSpan([\"katex-error\"], [new SymbolNode(expression)]);\n  node.setAttribute(\"title\", error.toString());\n  node.setAttribute(\"style\", `color:${options.errorColor}`);\n  return node;\n};\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\n\n\nconst renderToDomTree = function renderToDomTree(expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\n\n\nconst renderToHTMLTree = function renderToHTMLTree(expression, options) {\n  const settings = new Settings(options);\n\n  try {\n    const tree = parseTree(expression, settings);\n    return buildHTMLTree(tree, expression, settings);\n  } catch (error) {\n    return renderError(error, expression, settings);\n  }\n};\n\nvar katex = {\n  /**\n   * Current KaTeX version\n   */\n  version: \"0.11.1\",\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination, and adds\n   * it as a child to the specified DOM node.\n   */\n  render,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML combination string,\n   * for sending to the client.\n   */\n  renderToString,\n\n  /**\n   * KaTeX error, usually during parsing.\n   */\n  ParseError,\n\n  /**\n   * Parses the given LaTeX into KaTeX's internal parse tree structure,\n   * without rendering to HTML or MathML.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n\n  /**\n   * Renders the given LaTeX into an HTML+MathML internal DOM tree\n   * representation, without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToDomTree: renderToDomTree,\n\n  /**\n   * Renders the given LaTeX into an HTML internal DOM tree representation,\n   * without MathML and without flattening that representation to a string.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __renderToHTMLTree: renderToHTMLTree,\n\n  /**\n   * extends internal font metrics object with a new object\n   * each key in the new object represents a font name\n  */\n  __setFontMetrics: setFontMetrics,\n\n  /**\n   * adds a new symbol to builtin symbols table\n   */\n  __defineSymbol: defineSymbol,\n\n  /**\n   * adds a new macro to builtin macro list\n   */\n  __defineMacro: defineMacro,\n\n  /**\n   * Expose the dom tree node types, which can be useful for type checking nodes.\n   *\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __domTree: {\n    Span,\n    Anchor,\n    SymbolNode,\n    SvgNode,\n    PathNode,\n    LineNode\n  }\n};\n\nexport default katex;\n", "import katex from '../katex.mjs';\n\n/* eslint no-constant-condition:0 */\nconst findEndOfMath = function findEndOfMath(delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === \"\\\\\") {\n      index++;\n    } else if (character === \"{\") {\n      braceLevel++;\n    } else if (character === \"}\") {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nconst splitAtDelimiters = function splitAtDelimiters(startData, leftDelim, rightDelim, display) {\n  const finalData = [];\n\n  for (let i = 0; i < startData.length; i++) {\n    if (startData[i].type === \"text\") {\n      const text = startData[i].data;\n      let lookingForLeft = true;\n      let currIndex = 0;\n      let nextIndex;\n      nextIndex = text.indexOf(leftDelim);\n\n      if (nextIndex !== -1) {\n        currIndex = nextIndex;\n        finalData.push({\n          type: \"text\",\n          data: text.slice(0, currIndex)\n        });\n        lookingForLeft = false;\n      }\n\n      while (true) {\n        if (lookingForLeft) {\n          nextIndex = text.indexOf(leftDelim, currIndex);\n\n          if (nextIndex === -1) {\n            break;\n          }\n\n          finalData.push({\n            type: \"text\",\n            data: text.slice(currIndex, nextIndex)\n          });\n          currIndex = nextIndex;\n        } else {\n          nextIndex = findEndOfMath(rightDelim, text, currIndex + leftDelim.length);\n\n          if (nextIndex === -1) {\n            break;\n          }\n\n          finalData.push({\n            type: \"math\",\n            data: text.slice(currIndex + leftDelim.length, nextIndex),\n            rawData: text.slice(currIndex, nextIndex + rightDelim.length),\n            display: display\n          });\n          currIndex = nextIndex + rightDelim.length;\n        }\n\n        lookingForLeft = !lookingForLeft;\n      }\n\n      finalData.push({\n        type: \"text\",\n        data: text.slice(currIndex)\n      });\n    } else {\n      finalData.push(startData[i]);\n    }\n  }\n\n  return finalData;\n};\n\n/* eslint no-console:0 */\n\nconst splitWithDelimiters = function splitWithDelimiters(text, delimiters) {\n  let data = [{\n    type: \"text\",\n    data: text\n  }];\n\n  for (let i = 0; i < delimiters.length; i++) {\n    const delimiter = delimiters[i];\n    data = splitAtDelimiters(data, delimiter.left, delimiter.right, delimiter.display || false);\n  }\n\n  return data;\n};\n/* Note: optionsCopy is mutated by this method. If it is ever exposed in the\n * API, we should copy it before mutating.\n */\n\n\nconst renderMathInText = function renderMathInText(text, optionsCopy) {\n  const data = splitWithDelimiters(text, optionsCopy.delimiters);\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].type === \"text\") {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      const span = document.createElement(\"span\");\n      let math = data[i].data; // Override any display mode defined in the settings with that\n      // defined by the text itself\n\n      optionsCopy.displayMode = data[i].display;\n\n      try {\n        if (optionsCopy.preProcess) {\n          math = optionsCopy.preProcess(math);\n        }\n\n        katex.render(math, span, optionsCopy);\n      } catch (e) {\n        if (!(e instanceof katex.ParseError)) {\n          throw e;\n        }\n\n        optionsCopy.errorCallback(\"KaTeX auto-render: Failed to parse `\" + data[i].data + \"` with \", e);\n        fragment.appendChild(document.createTextNode(data[i].rawData));\n        continue;\n      }\n\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\nconst renderElem = function renderElem(elem, optionsCopy) {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // Text node\n      const frag = renderMathInText(childNode.textContent, optionsCopy);\n      i += frag.childNodes.length - 1;\n      elem.replaceChild(frag, childNode);\n    } else if (childNode.nodeType === 1) {\n      // Element node\n      const className = ' ' + childNode.className + ' ';\n      const shouldRender = optionsCopy.ignoredTags.indexOf(childNode.nodeName.toLowerCase()) === -1 && optionsCopy.ignoredClasses.every(x => className.indexOf(' ' + x + ' ') === -1);\n\n      if (shouldRender) {\n        renderElem(childNode, optionsCopy);\n      }\n    } // Otherwise, it's something else, and ignore it.\n\n  }\n};\n\nconst renderMathInElement = function renderMathInElement(elem, options) {\n  if (!elem) {\n    throw new Error(\"No element provided to render\");\n  }\n\n  const optionsCopy = {}; // Object.assign(optionsCopy, option)\n\n  for (const option in options) {\n    if (options.hasOwnProperty(option)) {\n      optionsCopy[option] = options[option];\n    }\n  } // default options\n\n\n  optionsCopy.delimiters = optionsCopy.delimiters || [{\n    left: \"$$\",\n    right: \"$$\",\n    display: true\n  }, {\n    left: \"\\\\(\",\n    right: \"\\\\)\",\n    display: false\n  }, // LaTeX uses $\u2026$, but it ruins the display of normal `$` in text:\n  // {left: \"$\", right: \"$\", display: false},\n  //  \\[\u2026\\] must come last in this array. Otherwise, renderMathInElement\n  //  will search for \\[ before it searches for $$ or  \\(\n  // That makes it susceptible to finding a \\\\[0.3em] row delimiter and\n  // treating it as if it were the start of a KaTeX math zone.\n  {\n    left: \"\\\\[\",\n    right: \"\\\\]\",\n    display: true\n  }];\n  optionsCopy.ignoredTags = optionsCopy.ignoredTags || [\"script\", \"noscript\", \"style\", \"textarea\", \"pre\", \"code\"];\n  optionsCopy.ignoredClasses = optionsCopy.ignoredClasses || [];\n  optionsCopy.errorCallback = optionsCopy.errorCallback || console.error; // Enable sharing of global macros defined via `\\gdef` between different\n  // math elements within a single call to `renderMathInElement`.\n\n  optionsCopy.macros = optionsCopy.macros || {};\n  renderElem(elem, optionsCopy);\n};\n\nexport default renderMathInElement;\n", "import renderMathInElement from 'katex/dist/contrib/auto-render.mjs';\r\n\r\nfunction renderLatex() {\r\n  renderMathInElement(document.querySelector('.content'), {\r\n    delimiters: [\r\n      {\r\n        left: '$$',\r\n        right: '$$',\r\n        display: true,\r\n      },\r\n      {\r\n        left: '\\\\[',\r\n        right: '\\\\]',\r\n        display: true,\r\n      },\r\n      {\r\n        left: '$',\r\n        right: '$',\r\n        display: false,\r\n      },\r\n    ],\r\n    output: 'html',\r\n    strict: false,\r\n  });\r\n}\r\n\r\nexport { renderLatex };\r\n", "// https://tj.ie/building-a-table-of-contents-with-the-intersection-observer-api/\r\n\r\nconst highlightCurrentPositionInToc = {\r\n  container: null,\r\n  links: null,\r\n  headings: null,\r\n  intersectionOptions: {\r\n    root: document.querySelector('.scroller'),\r\n    rootMargin: '0px',\r\n    threshold: 0.5,\r\n  },\r\n  previousSection: null,\r\n  observer: null,\r\n\r\n  init(menu) {\r\n    this.container = menu;\r\n    this.handleObserver = this.handleObserver.bind(this);\r\n\r\n    this.setUpObserver();\r\n    this.findLinksAndHeadings();\r\n    this.observeSections();\r\n\r\n    this.links.forEach((link) => {\r\n      link.addEventListener('click', this.handleLinkClick.bind(this));\r\n    });\r\n  },\r\n\r\n  handleLinkClick(evt) {\r\n    evt.preventDefault();\r\n    const id = evt.target.getAttribute('href').replace('#', '');\r\n\r\n    const section = this.headings.find((heading) => {\r\n      return heading.getAttribute('id') === id;\r\n    });\r\n\r\n    section.setAttribute('tabindex', -1);\r\n    section.focus();\r\n\r\n    window.scroll({\r\n      behavior: 'smooth',\r\n      top: section.offsetTop - 15,\r\n      block: 'start',\r\n    });\r\n\r\n    if (this.container.classList.contains('is-active')) {\r\n      this.container.classList.remove('is-active');\r\n    }\r\n  },\r\n\r\n  handleObserver(entries, observer) {\r\n    entries.forEach((entry) => {\r\n      const href = `#${entry.target.getAttribute('id')}`;\r\n      const link = this.links.find(\r\n        (l) => l.getAttribute('href') === href,\r\n      );\r\n\r\n      if (entry.isIntersecting && entry.intersectionRatio >= 1) {\r\n        link.classList.add('is-visible');\r\n        this.previousSection = entry.target.getAttribute('id');\r\n      } else {\r\n        link.classList.remove('is-visible');\r\n      }\r\n\r\n      this.highlightFirstActive();\r\n    });\r\n  },\r\n\r\n  highlightFirstActive() {\r\n    const firstVisibleLink = this.container.querySelector(\r\n      '.is-visible',\r\n    );\r\n\r\n    this.links.forEach((link) => {\r\n      link.classList.remove('is-active');\r\n    });\r\n\r\n    if (firstVisibleLink) {\r\n      firstVisibleLink.classList.add('is-active');\r\n    }\r\n\r\n    if (!firstVisibleLink && this.previousSection) {\r\n      this.container\r\n        .querySelector(`a[href=\"#${this.previousSection}\"]`)\r\n        .classList.add('is-active');\r\n    }\r\n  },\r\n\r\n  observeSections() {\r\n    this.headings.forEach((heading) => {\r\n      this.observer.observe(heading);\r\n    });\r\n  },\r\n\r\n  setUpObserver() {\r\n    this.observer = new IntersectionObserver(\r\n      this.handleObserver,\r\n      this.intersectionOptions,\r\n    );\r\n  },\r\n\r\n  findLinksAndHeadings() {\r\n    this.links = [...this.container.querySelectorAll('a')];\r\n    this.headings = this.links.map((link) => {\r\n      let id = link.getAttribute('href');\r\n      return document.querySelector(id);\r\n    });\r\n  },\r\n};\r\n\r\nexport { highlightCurrentPositionInToc };\r\n", "function setupJumpToTop(link) {\r\n  const heading = document.querySelector('h1');\r\n  link.href = `#${heading.id}`;\r\n\r\n  const toc = document.querySelector('.table-of-contents');\r\n\r\n  link.addEventListener('click', () => {\r\n    // HACK: the highlightCurrentPositionInTOC function re-highlights\r\n    // the next visible link as active after a tiny delay.\r\n    // add an even longer delay to overcome this\r\n    setTimeout(() => {\r\n      for (const child of toc.querySelectorAll('.is-visible')) {\r\n        child.classList.remove('is-visible');\r\n      }\r\n\r\n      for (const child of toc.querySelectorAll('.is-active')) {\r\n        child.classList.remove('is-active');\r\n      }\r\n    }, 100);\r\n  });\r\n}\r\n\r\nexport { setupJumpToTop };\r\n", "// generate TOC from h2-h4 in current chapter and append to left menu\r\nimport { highlightCurrentPositionInToc } from './highlightCurrentPositionInTOC.js';\r\nimport { setupJumpToTop } from './jumpToTop.js';\r\n\r\nfunction scrollToActiveChapter(menu, activeChapter) {\r\n  const list = menu.querySelector('ul');\r\n\r\n  list.scrollTo(0, activeChapter.offsetTop - list.offsetTop - 10);\r\n}\r\n\r\nfunction getActiveChapter(menu) {\r\n  const currentPath = window.location.pathname;\r\n  const activeLink = menu.querySelector(`a[href=\"${currentPath}\"]`);\r\n  if (!activeLink) return {};\r\n\r\n  const activeChapter = activeLink.parentNode;\r\n  return { activeLink, activeChapter };\r\n}\r\n\r\nfunction generateCurrentChapterTOC() {\r\n  const menu = document.querySelector('.table-of-contents');\r\n  const { activeLink, activeChapter } = getActiveChapter(menu);\r\n  const content = document.querySelector('.content');\r\n\r\n  if (!menu || !activeChapter) {\r\n    // console.warn(\"Couldn't generate active chapter TOC\");\r\n    return;\r\n  }\r\n\r\n  activeChapter.classList.add('active');\r\n  setupJumpToTop(activeLink);\r\n\r\n  scrollToActiveChapter(menu, activeChapter);\r\n\r\n  const headings = content.querySelectorAll('h2,h3,h4');\r\n\r\n  const innerTOC = document.createElement('ul');\r\n  innerTOC.id = 'current-chapter-TOC';\r\n\r\n  headings.forEach((heading) => {\r\n    if (!heading.id) return;\r\n    const levelClass = `heading-${heading.tagName.slice(-1)}`;\r\n\r\n    const anchor = document.createElement('a');\r\n    anchor.href = `#${heading.id}`;\r\n\r\n    const text = (heading.innerText || heading.textContent)\r\n      .replace('#', '')\r\n      .replace('<', '')\r\n      .replace('>', '');\r\n\r\n    anchor.innerHTML = text;\r\n    // anchor.classList.add('internal-link');\r\n\r\n    const li = document.createElement('li');\r\n    li.classList.add(levelClass);\r\n    li.appendChild(anchor);\r\n\r\n    innerTOC.appendChild(li);\r\n  });\r\n\r\n  activeChapter.appendChild(innerTOC);\r\n\r\n  highlightCurrentPositionInToc.init(innerTOC);\r\n}\r\n\r\nexport { generateCurrentChapterTOC };\r\n", "import { setupCodeHighlights } from \"./codeHighlights/codeHighlights.js\";\nimport { addAnchorLinks } from \"./layout/anchorLinks.js\";\nimport { scrollToAnchor } from \"./layout/scrollToAnchor.js\";\nimport { renderLatex } from \"./layout/renderLatex.js\";\nimport { generateCurrentChapterTOC } from \"./menus/generateCurrentChapterTOC.js\";\n\nfunction setupChapterLate() {\n  scrollToAnchor();\n  setupCodeHighlights();\n  renderLatex();\n  addAnchorLinks();\n  generateCurrentChapterTOC();\n}\n\nexport { setupChapterLate };\n"],
  "mappings": "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,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,EAAG,OAAS,OAAS,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,CAAC,OAAS,OAAS,EAAG,EAAG,QAClC,QAAS,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AAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,OAAS,OAAS,EAAG,EAAG,MAC/B,KAAM,CAAC,QAAU,OAAS,EAAG,EAAG,MAChC,KAAM,CAAC,QAAU,OAAS,EAAG,EAAG,MAChC,KAAM,CAAC,QAAU,OAAS,EAAG,EAAG,MAChC,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,OAAS,OAAS,EAAG,EAAG,MAC/B,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,OAAS,OAAS,EAAG,EAAG,MAC/B,KAAM,CAAC,OAAS,OAAS,EAAG,EAAG,MAC/B,KAAM,CAAC,OAAS,OAAS,EAAG,EAAG,MAC/B,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,OAAS,EAAG,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,KAAM,CAAC,EAAG,OAAS,EAAG,EAAG,MACzB,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,MACpB,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,EAAG,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,OAAS,OAAS,EAAG,EAAG,MAChC,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,OAAS,EAAG,EAAG,MAC1B,MAAO,CAAC,EAAG,O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U,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,UAEV,OAAU,gBAEV,OAAU,UAE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",
  "names": []
}
